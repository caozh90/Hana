PROCEDURE "SECURITY"."cdp.security.procedures::deleteInfoRole" (
	IN	 aROLE_ID BIGINT, 
	IN   aMODULE_ID NVARCHAR(10),      
    IN	 aROLE_NAME NVARCHAR(200),
 	IN   aCOMMENT NVARCHAR(200),
	IN   aMODULE_NAME NVARCHAR(200)    
,OUT errorInfo "SECURITY"."cdp.security.data::userManagement.HttpError"
             ) 
LANGUAGE SQLSCRIPT SQL SECURITY DEFINER 
DEFAULT SCHEMA "SECURITY"
AS 

	ROLEExists Integer := 0;
	alogidk INTEGER :=0;
	aI_DETAIL NVARCHAR(300) :='';
	aROLEGROUP_ID BIGINT; 
	privilegeExists  NVARCHAR(300)  ;
BEGIN

/***************************** 
	DELETE ROLE INFO
	

	example:
	
call "SECURITY"."cdp.security.procedures::deleteInfoRole"(
	0001, 
	'1000000001',      
	'001',
	'comment001',     	
    'CFE',?);
)
 *****************************/
      
    --exception     
   DECLARE no_data_found CONDITION FOR SQL_ERROR_CODE 1299; 
    DECLARE EXIT HANDLER FOR no_data_found   
     BEGIN     
     --如果没有找到amodule_ID ,则返回，
			aI_DETAIL :='cdp.security.procedures::deleteInfoRole can not find the module : '||aMODULE_NAME ||' .';
     CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'ERR'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::deleteInfoRole"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
     	,I_DETAIL=>:aI_DETAIL);  
     	
     	errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
     		
     END;     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.security.procedures::deleteInfoRole error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	--如果产生异常，返回，并且告知异常。
    	CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'ERR'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::deleteInfoRole"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
     	,I_DETAIL=>:aI_DETAIL);  	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END; 

call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'securityRoleSetup'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
    
--START
CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG',I_STATUS=>'START'
	,I_LOGSID=>:alogidk
	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::deleteInfoRole"'
	,I_MODULE=>:aMODULE_NAME); 
	  
    SELECT MODULE_ID into aMODULE_ID 
    FROM "SECURITY"."cdp.security.data::userManagement.INFO_MODULE" 
    WHERE "MODULE_NAME" = :aMODULE_NAME;
     
     
     
     SELECT top 1 count(1) into ROLEExists FROM "SECURITY"."cdp.security.data::userManagement.INFO_ROLES" A    
     WHERE A."MODULE_ID" = :aMODULE_ID
          AND A."ROLE_NAME" = :aROLE_NAME ;
     if  :ROLEExists = 0 then
    	 aI_DETAIL := 'cdp.security.procedures::deleteInfoRole  can not find the ROLE_NAME : '||:aROLE_NAME||'  .';
     	CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'WARN'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::deleteInfoRole"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'W000000026'
     	,I_DETAIL=>:aI_DETAIL);
     	
     	errorInfo = select 400 as http_status_code, 
     		'ROLE NAME exist' error_message, 
     		aI_DETAIL detail from dummy;
     		
     	return ;
     end if;
     

      SELECT "ROLE_ID" into aROLE_ID FROM "SECURITY"."cdp.security.data::userManagement.INFO_ROLES" A    
     WHERE A."MODULE_ID" = :aMODULE_ID
          AND A."ROLE_NAME" = :aROLE_NAME ;
     
     
   		
delete from "SECURITY"."cdp.security.data::userManagement.INFO_ROLES"
where "ROLE_NAME" = :aROLE_NAME and "MODULE_ID" = :aMODULE_ID;


delete from "SECURITY"."cdp.security.data::userManagement.MAP_ROLEGROUP_ROLE"
where "ROLE_ID" = :aROLE_ID and "MODULE_ID" = :aMODULE_ID;

delete from "SECURITY"."cdp.security.data::userManagement.MAP_ALL"
where "ROLE_ID" = :aROLE_ID and "MODULE_ID" = :aMODULE_ID;
	    	
	    	
delete from "SECURITY"."cdp.security.data::userManagement.MAP_VIEW_ROLE"
where "ROLE_ID" = :aROLE_ID and "MODULE_ID" = :aMODULE_ID;

	    --如果成功添加,则log添加成功！
	    aI_DETAIL := 'cdp.security.procedures::deleteInfoRole ('||:aROLE_NAME||' ,) successfully executed . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(
 		I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'END'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::deleteInfoRole"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'S000000027'
     	,I_DETAIL=>:aI_DETAIL); 	
    		
END;