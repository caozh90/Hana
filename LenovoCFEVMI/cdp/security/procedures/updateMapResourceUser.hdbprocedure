PROCEDURE "SECURITY"."cdp.security.procedures::updateMapResourceUser" ( 
		IN aRESOURCE_ID BIGINT
		,IN	aResource_type NVARCHAR(200)
	    ,IN	aValue NVARCHAR(200)
	    ,IN	aGroup_Id NVARCHAR(50)
	    ,IN	aUser_Id BIGINT
		--,IN	aModule_ID  BIGINT
		,OUT errorInfo "SECURITY"."cdp.security.data::userManagement.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "SECURITY"
	AS
	    aMODULE_ID	NVARCHAR(10);
		aMODULE_NAME NVARCHAR(200);
		resourceExists BIGINT;
		alogidk INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 
 DECLARE no_data_found CONDITION FOR SQL_ERROR_CODE 1299; 
    DECLARE EXIT HANDLER FOR no_data_found   
     BEGIN     
			aI_DETAIL :='cdp.security.procedures::updateMapResourceUser can not find the value : '||:aValue ||' in this resource : '||:aResource_type||'.';
     CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'ERR'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::updateMapResourceUser"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
     	,I_DETAIL=>:aI_DETAIL);
     	errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
     	
     	--,I_DETAIL=>'cdp.security.procedures::createUser can not find the role : '||aMODULE_PATH||'.roles::PUBLIC');
     END;     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.security.procedures::updateMapResourceUser error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	--如果产生异常，返回，并且告知异常。
    	CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'ERR'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::updateMapResourceUser"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
     	,I_DETAIL=>:aI_DETAIL);   	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END; 
       call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'securityRoleAdmin'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
CALL  "SECURITY"."cdp.security.procedures::getSessionModuleIDForProc" (aMODULE_ID ,aMODULE_NAME);
 
--  SELECT "MODULE_NAME" INTO aMODULE_NAME FROM "SECURITY"."cdp.security.data::userManagement.INFO_MODULE"
--  WHERE "MODULE_ID" = :aModule_ID;
     
    SELECT top 1 count(1) into resourceExists FROM "SECURITY"."cdp.security.data::userManagement.MAP_RESOURCE_USER" A    
     WHERE A."MODULE_ID" = :aModule_ID
          AND A."RESOURCE_TYPE" = :aResource_type 
          AND A."VALUE" = :aValue
          AND A."GROUP_ID" = :aGroup_Id
          AND A."USER_ID" = :aUser_Id;
          
     if  :resourceExists > 0 then
    	 aI_DETAIL := 'cdp.security.procedures::updateMapResourceUser same resource : '||:aResource_type||' exists .';
     	CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'WARN'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::updateMapResourceUser"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'W000000023'
     	,I_DETAIL=>:aI_DETAIL);  	
     	
     	errorInfo = select 400 as http_status_code, 
     		'role exist in MapAll' error_message, 
     		aI_DETAIL detail from dummy;
     		
     	return ;
     end if;
     
  	update "SECURITY"."cdp.security.data::userManagement.MAP_RESOURCE_USER"
  		set MODULE_ID = :aModule_ID,
  			RESOURCE_TYPE = :aResource_type,
  			VALUE = :aValue,
  			GROUP_ID = :aGroup_Id,
  			USER_ID = :aUser_Id
  		where RESOURCE_ID = :aRESOURCE_ID;

    aI_DETAIL := 'cdp.security.procedures::updateMapResourceUser ('||:aResource_type||' ,) successfully executed . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(
 		I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'END'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::updateMapResourceUser"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'S000000022'
     	,I_DETAIL=>:aI_DETAIL);  		
END;