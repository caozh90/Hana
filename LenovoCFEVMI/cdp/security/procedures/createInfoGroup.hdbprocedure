PROCEDURE "SECURITY"."cdp.security.procedures::createInfoGroup" (
	--in	aGROUP_ID BIGINT, 
--in  aMODULE_ID NVARCHAR(10),      
	IN	aGROUP_NAME NVARCHAR(200),
	in  aCOMMENT NVARCHAR(200)     	
--in  aMODULE_NAME NVARCHAR(200)
,OUT errorInfo "SECURITY"."cdp.security.data::userManagement.HttpError"

             ) 
LANGUAGE SQLSCRIPT 
SQL SECURITY DEFINER
DEFAULT SCHEMA "SECURITY" 
AS 

	groupExists Integer := 0;
	alogidk INTEGER :=0;
	aI_DETAIL NVARCHAR(300) :='';
	
	aGROUP_ID	BIGINT;
	aMODULE_ID NVARCHAR(10);
	aMODULE_NAME NVARCHAR(256);
	privilegeExists  NVARCHAR(300)  ;
BEGIN

/***************************** 
	create new user group
	
	cdr ：Custom Development Role
	会创建一个role ,role name = cdp.security.cdr.group::GROUP_ID

	example:
	
call "SECURITY"."cdp.security.procedures::createInfoGroup"(
?, 
?,      
'zz',
  'zz',
     	
    'CFE',
?);
)
 *****************************/
      
    --exception     
   DECLARE no_data_found CONDITION FOR SQL_ERROR_CODE 1299; 
    DECLARE EXIT HANDLER FOR no_data_found   
     BEGIN     
     --如果没有找到amodule_ID ,则返回，
			aI_DETAIL :='cdp.security.procedures::createInfoGroup can not find the module : '||aMODULE_NAME ||' .';
     CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'ERR'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::createInfoGroup"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
     	,I_DETAIL=>:aI_DETAIL);
     	errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
     	
     	
     END;     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.security.procedures::createInfoGroup error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	--如果产生异常，返回，并且告知异常。
    	CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'ERR'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::createInfoGroup"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
     	,I_DETAIL=>:aI_DETAIL);
     	
   	
   		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END; 
   
call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'securityUserAdmin'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
 CALL  "SECURITY"."cdp.security.procedures::getSessionModuleIDForProc" (aMODULE_ID ,aMODULE_NAME);  
 
--START
CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG',I_STATUS=>'START'
	,I_LOGSID=>:alogidk
	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::createInfoGroup"'
	,I_MODULE=>:aMODULE_NAME); 
	    
   

  --  SELECT MODULE_ID into aMODULE_ID 
  --  FROM "SECURITY"."cdp.security.data::userManagement.INFO_MODULE" 
  --  WHERE "MODULE_NAME" = :aMODULE_NAME;
     
     
     
     SELECT top 1 count(1) into groupExists FROM "SECURITY"."cdp.security.data::userManagement.INFO_GROUP" A    
     WHERE A."MODULE_ID" = :aMODULE_ID
          AND A."GROUP_NAME" = :aGROUP_NAME ;
     if  :groupExists > 0 then
    	 aI_DETAIL := 'cdp.security.procedures::createInfoGroup  find the GROUP_NAME : '||:aGROUP_NAME||' exists .';
     	CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'WARN'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::createInfoGroup"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'W000000005'
     	,I_DETAIL=>:aI_DETAIL);
     	
     	errorInfo = select 400 as http_status_code, 
     		'GROUP NAME exist' error_message, 
     		aI_DETAIL detail from dummy;
     		
     	return ;
     end if;
     
    SELECT "SECURITY"."cdp.security.data::infoGroupSeqId".NEXTVAL INTO aGROUP_ID FROM DUMMY; 
   		
insert into "SECURITY"."cdp.security.data::userManagement.INFO_GROUP"
			("GROUP_ID", "MODULE_ID","GROUP_NAME" ,"COMMENT"  
			,"REAL_ROLE_NAME")
			values(:aGROUP_ID, :aMODULE_ID,:aGROUP_NAME ,:aCOMMENT 
			, 'cdp.security.cdr.group::' ||:aGROUP_ID);
			
		
	 --**## 	exec 'CREATE ROLE "cdp.security.cdr.group::' ||:aGROUP_ID ||'"';
	    	
	    --如果成功添加,则log添加成功！
	    aI_DETAIL := 'cdp.security.procedures::createInfoGroup ('||:aGroup_NAME||' ,) successfully executed . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProcBASE"(
 		I_EVENT_TYPE=>'SEC_LOG'	
     	,I_STATUS=>'END'
     	,I_LOGSID=>:alogidk
     	,I_EVENT_NAME=>'"SECURITY"."cdp.security.procedures::createInfoGroup"'
     	,I_MODULE=>:aMODULE_NAME
     	,I_MESSAGE=>'S000000006'
     	,I_DETAIL=>:aI_DETAIL); 	
	   
     	
END;