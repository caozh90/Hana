PROCEDURE "PCDW"."cdp.pcdw.procedures::SP_CLASSIFICATION_IDOC_PCDW" (
IN I_MATNR                  VARCHAR(100),
IN I_ATNAM                  VARCHAR(100),
IN I_ATWRT                  VARCHAR(100),
IN I_FLAG                   VARCHAR(100),
IN I_IDOCNUM                DECIMAL, 
IN I_IDOCTIME               VARCHAR(100),
IN I_SYS_CREATED_DATE       VARCHAR(100),
IN I_SYS_CREATED_BY         VARCHAR(100),
IN I_SYS_LAST_MODIFIED_DATE VARCHAR(100),
IN I_SYS_LAST_MODIFIED_BY   VARCHAR(100)
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA PCDW
	AS
  /***********************************************************************/
  /* PROCEDURE          ?SP_CLASSIFICATION_IDOC_PCDW
  /* DESCRIPTION        ?INSERT IDOC DATA TO ECC_CLFMAS02 TABLE
  /* PARAMETERS         ?
  /* SOURCE             ?IDOC
  /* TARGET TABLE       ?ECC_CLFMAS02
  /* VERSION            ?V1.0
  /***********************************************************************/

  V_IDOCTIME TIMESTAMP;
  vMsg	 	 VARCHAR(1024);
  vCode	     int;
  n	 	 	 INT;
  old_idoctime varchar(1024);
BEGIN
	-- exception
    --定义异常
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN
	  vMsg :=   substr(::SQL_ERROR_MESSAGE, 1, 500);
      vCode := ::SQL_ERROR_CODE;
      
      select IDOCTIME into old_idoctime from ECC_CLFMAS02
      where MATNR = :I_MATNR
       AND ATNAM = :I_ATNAM;
      
	  
      INSERT INTO PCDW_PROC_LOG (EVENTTIME,
                                 EVENTNAME,
                                 SUBEVENT,
                                 MSGCODE,
                                 EVENTMSG,
                                 EVENTTYPE,
                                 DATASOURCE,
                                 DATADEST,
                                 EVENTDESCR)
        VALUES   (CURRENT_TIMESTAMP,
                  'SP_CLASSIFICATION_IDOC_PCDW',
                  'ERROR',
               --  'ERROR! OLD:'||:old_idoctime||';INPUT:'||:I_IDOCTIME,
                  :vCode,
                  :vMsg,
                  '',
                  :I_MATNR,
                  :I_IDOCNUM||','||:I_ATNAM,
                  'END');
    	--exec 'commit';   --2017.02.08 PI issue by baying deleted  
    END;
	-- exception
	
  V_IDOCTIME := TO_TIMESTAMP(:I_IDOCTIME,'YYYYMMDD HH24MISS');

  IF :I_MATNR IS NOT NULL AND :I_ATNAM IS NOT NULL THEN
  	
  	SELECT COUNT(1) INTO n FROM ECC_CLFMAS02
  	WHERE MATNR = :I_MATNR
       AND ATNAM = :I_ATNAM
       AND (IDOCTIME < :V_IDOCTIME OR
           (IDOCTIME = :V_IDOCTIME AND IDOCNUM < :I_IDOCNUM) OR
           IDOCTIME IS NULL);
  	IF n>0 THEN
	    UPDATE ECC_CLFMAS02
	       SET ATWRT                  = :I_ATWRT,
	           FLAG                   = :I_FLAG,
	           IDOCNUM                = :I_IDOCNUM,
	           IDOCTIME               = :V_IDOCTIME,
	           SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP,
	           SYS_LAST_MODIFIED_BY   = :I_SYS_LAST_MODIFIED_BY
	     WHERE MATNR = :I_MATNR
	       AND ATNAM = :I_ATNAM
	       AND (IDOCTIME < :V_IDOCTIME OR
	           (IDOCTIME = :V_IDOCTIME AND IDOCNUM < :I_IDOCNUM) OR
	           IDOCTIME IS NULL);
 	
 	 	--exec 'commit';   --2017.02.08 PI issue by baying deleted  
 	 
 	 ELSEIF n =0 THEN
 	 /**
 	 * 如果传入的数据，主键冲突，并且时间IDOCTIME > :V_IDOCTIME, 忽略这条记录
 	 * 只有在传入时间:V_IDOCTIME更latest的时候，才执行insert操作
 	 */
 	 
 	 --判断主键冲突
 	  	select count(1) into n from  ECC_CLFMAS02	 
	 	 where MATNR = :I_MATNR
	       AND ATNAM = :I_ATNAM;
 	 	if n=0 then
		   	INSERT INTO ECC_CLFMAS02
		        (MATNR,
		         ATNAM,
		         ATWRT,
		         FLAG,
		         IDOCNUM,
		         IDOCTIME,
		         SYS_CREATED_DATE,
		         SYS_CREATED_BY,
		         SYS_LAST_MODIFIED_DATE,
		         SYS_LAST_MODIFIED_BY)
		      VALUES
		        (:I_MATNR,
		         :I_ATNAM,
		         :I_ATWRT,
		         :I_FLAG,
		         :I_IDOCNUM,
		         :V_IDOCTIME,
		         CURRENT_TIMESTAMP,
		         :I_SYS_CREATED_BY,
		         CURRENT_TIMESTAMP,
		         :I_SYS_LAST_MODIFIED_BY);
		end if;
	    --EXEC 'COMMIT';   --2017.02.08 PI issue by baying deleted  
    END IF;
  END IF;


END;