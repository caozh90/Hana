PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_dispatch_list::PRC_DISPATCH_LIST_AUTO_CONFIRM" (
	iv_id VARCHAR(10),  OUT on_exitcode NUMBER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "SZEBGVMI"
	--READS SQL DATA 
/************************************************************************
*name      : PRC_DISPATCH_LIST_AUTO_CONFIRM              --函数名
*function    :               --函数功能
*input     ：  iv_id              --输入参数
*output     : on_exitcode               --输出参数
*author     : Eric Zhou               --作者
*CreateDate    : 2014/12/03                 --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/ 
	AS
	v_logic_proc_name   VARCHAR2 (40) := 'PRC_DISPATCH_LIST_AUTO_CONFIRM';
	v_logidi INTEGER := 0;	
	v_pkg_name          VARCHAR (40)            := 'PKG_DISPATCH_LIST';
	v_full_name         VARCHAR (100)            := v_pkg_name||'.'||v_logic_proc_name;
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		 on_exitcode := ::SQL_ERROR_CODE;
		 CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_ERROR',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_MESSAGE=>'ERROR',
			 I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||substr(::SQL_ERROR_MESSAGE, 1, 512)||':'||iv_id||':'||'Failure');                                                  
		 
                  
        -- COMMIT;      --comment by Eric Zhou
	END;
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_START',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
             I_DETAIL=>iv_id||':'||'Start');
             
on_exitcode := -20099;
                                              
      /* If the pull was rejected (pull confirmation qty equal to 0) ,
                set status to REJECT for resubmit in UI*/

      UPDATE   DISPATCH_LIST DL
         SET   MATNR_DESCR =
                  (SELECT   ITEMDESC
                     FROM   ITEMSITEMASTER ISM
                    WHERE   DL.MATNR = ISM.ITEM AND DL.WERKS = ISM.SITEID)
       WHERE   EXISTS
                  (SELECT   1
                     FROM   ITEMSITEMASTER ISM
                    WHERE   DL.MATNR = ISM.ITEM AND DL.WERKS = ISM.SITEID)
               AND STATUS = 'IN_PROCESS'
               AND PULL_TYPE NOT IN ('EXCESS', 'SHIPPING_GROUP', 'SHIPPING')
               AND WERKS IN (SELECT   siteid
                               FROM   conf_site_schedule
                              WHERE   ID = IV_ID);
                              
 --modify by nancy wei for delete dispatch when dispatch qty > pull confirmation qty                         
/*--------------------------------------------------------------------------
    --不删除DIFFERENCE_QTY<0的数据， 将这些数据的dispatch_qty=0
    by xwu 2015/11/12
*/
/*
      delete from dispatch_list 
       WHERE       STATUS = 'IN_PROCESS'
               AND DIFFERENCE_QTY <0
               AND PULL_TYPE NOT IN ('EXCESS', 'SHIPPING_GROUP', 'SHIPPING')
               AND WERKS IN (SELECT   siteid
                               FROM   conf_site_schedule
                              WHERE   ID = IV_ID);
*/
      update dispatch_list set dispatch_qty = 0
       WHERE       STATUS = 'IN_PROCESS'
               AND DIFFERENCE_QTY <0
               AND PULL_TYPE NOT IN ('EXCESS', 'SHIPPING_GROUP', 'SHIPPING')
               AND WERKS IN (SELECT   siteid
                               FROM   conf_site_schedule
                              WHERE   ID = IV_ID);
------------------------------------------------------------------------------

      UPDATE   DISPATCH_LIST D
         SET   STATUS = 'CONFIRM'
               --SYS_LAST_MODIFIED_BY = v_logic_proc_name,
               --SYS_LAST_MODIFIED_DATE = SYSDATE
       WHERE       STATUS = 'IN_PROCESS'
               AND PULL_TYPE NOT IN ('EXCESS', 'SHIPPING_GROUP', 'SHIPPING')
               AND WERKS IN (SELECT   siteid
                               FROM   conf_site_schedule
                              WHERE   ID = IV_ID);




      --COMMIT;                                         --comment by Eric Zhou
      on_exitcode := 0;          
             
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_END',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_DETAIL=>iv_id||':'||'Success');            
END;