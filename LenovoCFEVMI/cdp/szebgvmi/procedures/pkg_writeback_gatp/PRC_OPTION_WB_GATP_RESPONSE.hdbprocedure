PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_writeback_gatp::PRC_OPTION_WB_GATP_RESPONSE" (
	IN iv_id VARCHAR(10), 
	OUT on_exitcode INTEGER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA SZEBGVMI
--	READS SQL DATA 
/************************************************************************
*name      : PRC_OPTION_WB_GATP_RESPONSE              --函数名
*function    :               --函数功能 
*input     ：  iv_id              --输入参数
*output     : on_exitcode               --输出参数
*author     : Eric Zhou               --作者
*CreateDate    : 2015/03/24                 --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/ 
AS
	  v_request_id varchar(50);
      n_dis_quantity integer; 
      n_all_count integer; 
      v_status varchar(20);
      v_pull_id varchar(100);
      v_line_id VARCHAR(5000);
      v_logidi INTEGER := 0;
      v_pkg_name          VARCHAR (40)            := 'pkg_writeback_gatp';
	  v_logic_proc_name   VARCHAR (40)            := 'PRC_OPTION_WB_GATP_RESPONSE';
	  v_full_name         VARCHAR (100)            := v_pkg_name||'.'||v_logic_proc_name;

BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		 on_exitcode := ::SQL_ERROR_CODE;
		 CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_ERROR',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_MESSAGE=>'ERROR',
			 I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||substr(::SQL_ERROR_MESSAGE, 1, 512)||':'||iv_id||':'||'Failure');                                                  
		 
     END;
	
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_START',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
             I_DETAIL=>iv_id||':'||'Start');
             
on_exitcode := -20099;

	Update PCDW.EXP_APO_OPTION_DISPATCH_UPDATE APO SET APO_STATUS = 'COMPLETE'
		WHERE EXISTS(
	SELECT 1 FROM pcdw.RSP_OPTION_DISPATCH_UPDATE RSP WHERE
		RSP.request_ID = APO.request_ID
		AND RSP.STATUS = '0'
);
	

on_exitcode := 0;
	CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_END',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_DETAIL=>iv_id||':'||'Success');  

END;
