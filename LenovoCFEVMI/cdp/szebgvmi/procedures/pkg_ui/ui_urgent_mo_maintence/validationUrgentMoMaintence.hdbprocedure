PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_ui.ui_urgent_mo_maintence::validationUrgentMoMaintence" (
	 IN LOGICAL_PLANT NVARCHAR(40),
	 IN DS_LINE NVARCHAR(200),
	 IN MO_ID NVARCHAR(40),
	 IN BOM_NAME NVARCHAR(40),
	 IN QUANTITY INTEGER,
	 IN START_TIME TIMESTAMP,
	 IN END_TIME TIMESTAMP,
	 IN PLANNED_START_TIME TIMESTAMP,
	 IN PLANNED_END_TIME TIMESTAMP,
	 IN STATUS NVARCHAR(40),
	 IN OPER_TYPE NVARCHAR(10),
	 OUT ERROR NVARCHAR(300)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA SZEBGVMI
	--READS SQL DATA 
	AS
	v_tmp INTEGER := 0;
BEGIN
	SELECT COUNT(1) into v_tmp FROM UI_URGENT_MO_PULL WHERE MO_ID=:MO_ID; 
	if v_tmp > 0 and OPER_TYPE = 'insert'
	then
		ERROR := 'Primary key constraint';
		return;
	end if;   
	if v_tmp < 0 and OPER_TYPE = 'update'
	then
		ERROR := 'Primary key constraint';
		return;
	end if;

	if OPER_TYPE = 'insert'
	then
		if status is not null
		then
		SELECT count(1) into v_tmp FROM CONF_PARAMETER WHERE PTYPE='UI_MO_STATUS_TYPE' AND PVALUE = :STATUS;
		if v_tmp = 0
		then
			ERROR := 'STATUS: VALIDATION FAILED, NOT EXIST IN CONF_PARAMETER';
			return;
		end if;
		end if;
	end if;
	
	SELECT COUNT(1) into v_tmp FROM UI_LINE_FLOOR_MAPPING WHERE DS_LINE=:DS_LINE;
	if v_tmp = 0
	then
		ERROR := 'DS_LINE: VALIDATION FAILED, NOT EXIST IN UI_LINE_FLOOR_MAPPING';
		return;
	end if;
	
	SELECT COUNT(1) into v_tmp FROM CONF_SITEMASTER WHERE PHYSICALPLANT=(SELECT PHYSICAL_PLANT FROM UI_LINE_FLOOR_MAPPING WHERE DS_LINE=:DS_LINE limit 1) ;   
	--SELECT COUNT(1) FROM ITEMSITEMASTER WHERE SITEID=(SELECT PHYSICAL_PLANT FROM UI_LINE_FLOOR_MAPPING WHERE DS_LINE=:DS_LINE limit 1);
	if v_tmp = 0
	then
		ERROR := 'DS_LINE: VALIDATION FAILED IN SITEMASTER';
		return;
	end if;    
	
	IF PLANNED_END_TIME < PLANNED_START_TIME
	THEN
		ERROR := 'VALIDATION FAILED, PLANNED_END_TIME MUST GREATER THAN PLANNED_START_TIME';
		return;
	END IF;
	
	IF END_TIME < START_TIME
	THEN
		ERROR := 'VALIDATION FAILED, END_TIME MUST GREATER THAN START_TIME';
		return;
	END IF;
	
	ERROR := '';
END;
