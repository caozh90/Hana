PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_ui.ui_urgent_mo_maintence::createUrgentMoMaintence" (
	 IN LOGICAL_PLANT NVARCHAR(40),
	 IN DS_LINE NVARCHAR(200),
	 IN MO_ID NVARCHAR(40),
	 IN BOM_NAME NVARCHAR(40),
	 IN QUANTITY INTEGER,
	 IN START_TIME TIMESTAMP,
	 IN END_TIME TIMESTAMP,
	 IN PLANNED_START_TIME TIMESTAMP,
	 IN PLANNED_END_TIME TIMESTAMP,
	 IN STATUS NVARCHAR(40)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA SZEBGVMI
	--READS SQL DATA 
	AS
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION   
BEGIN              
    	aI_DETAIL :='createUrgentMoMaintence error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'createUrgentMoMaintence'
	     	,I_MODULE=>'SZEBGVMI'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
END;  
  call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'urgentmomaintaince::createable'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
 --START
CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'createUrgentMoMaintence'
       ,I_MODULE=>'SZEBGVMI'
   	); 
	insert into UI_URGENT_MO_PULL(LOGICAL_PLANT,DS_LINE,MO_ID,BOM_NAME,QUANTITY,
								START_TIME,END_TIME,PLANNED_START_TIME,PLANNED_END_TIME,STATUS,SYS_SOURCE,
				SYS_CREATED_BY,
		 		SYS_CREATED_DATE,
		 		SYS_LAST_MODIFIED_BY,
				SYS_LAST_MODIFIED_DATE)
			values(:LOGICAL_PLANT,:DS_LINE,:MO_ID,:BOM_NAME,:QUANTITY,
								:START_TIME,:END_TIME,:PLANNED_START_TIME,:PLANNED_END_TIME,:STATUS,'UI',
								SESSION_USER,CURRENT_TIMESTAMP,SESSION_USER,CURRENT_TIMESTAMP)
			;

	--insert操作需要写入日志
	insert into "SZEBGVMI"."UI_URGENT_MO_PULL_LOG"(AT_MODIFIED_BY,AT_ACTION,AT_MODIFIED_TIME,
				LOGICAL_PLANT,
				MO_ID,STATUS,DS_LINE,BOM_NAME,QUANTITY,START_TIME,END_TIME,PLANNED_START_TIME,PLANNED_END_TIME,SYS_SOURCE
			)
	VALUES
	(SESSION_USER,
	'create',
	CURRENT_TIMESTAMP,
	:LOGICAL_PLANT,
	:MO_ID,:STATUS,:DS_LINE,:BOM_NAME,:QUANTITY,:START_TIME,:END_TIME,:PLANNED_START_TIME,:PLANNED_END_TIME,'UI'
	);	

--END
aI_DETAIL := 'createUrgentMoMaintence successfully created . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'createUrgentMoMaintence'
	     	,I_MODULE=>'SZEBGVMI'
	     	,I_DETAIL=>:aI_DETAIL
     	);		
END;
