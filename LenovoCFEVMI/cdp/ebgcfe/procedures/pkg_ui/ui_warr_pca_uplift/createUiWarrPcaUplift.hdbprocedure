PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::createUiWarrPcaUplift"
( 
	IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_WARR_PCA_UPLIFT_T"
	,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA
	AS  
	   aI_DETAIL 	     NVARCHAR(300) :='';
	   alogide 			 INTEGER :=0;
	   privilegeExists   NVARCHAR(300)  ; 
	   v_RATIO_CODE           NVARCHAR(100);
	   v_SUBGEO	         NVARCHAR(20);
	   v_COUNTRY     NVARCHAR(20);
	   V_TBA_TYPE			 NVARCHAR(40);
	   V_BASE_WARR     DECIMAL(15,4);
	   V_PCA			 DECIMAL(15,4);
	   V_UPLIFT      DECIMAL(15,4);
	   resourceExists  BIGINT;
	   VALIDATE		 BIGINT;
	    		
BEGIN
/***************************** 
*name       :    createUiWarrPcaUplift
*function   :               
*input      :    newInfo
*output     :    errorInfo            
*author     :    Justin
*DeleteDate :                  
*UpdateDate :    
*CreateDate :    2015.08.10
 *****************************/
 DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION   
	BEGIN
		aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::createUiWarrPcaUplift error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
		
		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::createUiWarrPcaUplift'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
	END;

--check the privilege
	call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_warr_pca_uplift::createable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
--start
 	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::createUiWarrPcaUplift'
       ,I_MODULE=>'EBGCFE'
   	);


	SELECT RATIO_CODE,SUBGEO,COUNTRY,TBA_TYPE,BASE_WARR,PCA,UPLIFT
 		INTO v_RATIO_CODE,v_SUBGEO,v_COUNTRY,V_TBA_TYPE,V_BASE_WARR,V_PCA,V_UPLIFT
 		FROM :newinfo;
 		
 --CHECK THE ITEM VALIDATION
 SELECT top 1 count(1) into resourceExists FROM "EBGCFE"."UI_WARR_PCA_UPLIFT" A    
     WHERE A.CYCLE = 'CURRENT' AND A.PRODUCT_GROUP = 'EBG' AND A.RATIO_CODE = :v_RATIO_CODE AND A.SUBGEO = :v_SUBGEO 
     AND A.COUNTRY = :v_COUNTRY AND A.TBA_TYPE = :V_TBA_TYPE;
   
    if  :resourceExists > 0 
    then
	    SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record exists';
    end if;
    
    
 ---INSERT INTO UI_WARR_PCA_UPLIFT  
	  insert into "EBGCFE"."UI_WARR_PCA_UPLIFT"
	            (CYCLE,PRODUCT_GROUP,RATIO_CODE,SUBGEO,COUNTRY,TBA_TYPE,BASE_WARR,PCA,UPLIFT,"SYS_CREATED_DATE",SYS_CREATED_BY,SYS_LAST_MODIFIED_DATE,SYS_LAST_MODIFIED_BY,ACTION)  
	  	values ('CURRENT','EBG',:v_RATIO_CODE,:v_SUBGEO,:v_COUNTRY,:V_TBA_TYPE,:V_BASE_WARR,:V_PCA,:V_UPLIFT,CURRENT_TIMESTAMP,SESSION_USER,CURRENT_TIMESTAMP,SESSION_USER,'insert');
	        
--insert into log     
INSERT into  "EBGCFE"."UI_WARR_PCA_UPLIFT_LOG"
	(
	"PRODUCT_GROUP",
	"RATIO_CODE",
	"SUBGEO",
	"COUNTRY",
	"TBA_TYPE",
	"BASE_WARR",
	"PCA",
	"UPLIFT",	
	"SYS_LAST_MODIFIED_DATE",   
    "AT_ACTION",
    "SYS_LAST_MODIFIED_BY",
    "AT_MODIFIED_ON",
    "AT_MILLIS"    	
	)
	
 VALUES(	
	'EBG',
	:v_RATIO_CODE,
	:v_SUBGEO,
	:v_COUNTRY,
	:V_TBA_TYPE,
	:V_BASE_WARR,
	:V_PCA,
	:V_UPLIFT,
	CURRENT_TIMESTAMP,
    'insert',
    session_user,
    current_date,
    TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3')));
 /*END*/
 	    aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::createUiWarrPcaUplift successfully inserted . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'pkg_ui.ui_warr_pca_uplift::createUiWarrPcaUplift'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);	
END;
