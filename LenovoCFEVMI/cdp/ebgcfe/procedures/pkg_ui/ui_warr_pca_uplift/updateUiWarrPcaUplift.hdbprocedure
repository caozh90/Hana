PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::updateUiWarrPcaUplift" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_WARR_PCA_UPLIFT_T"
		,IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_WARR_PCA_UPLIFT_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name> 
	AS
/************************************************************************
*name      :                     updateUiWarrPcaUplift
*function    :               
*input     ï¼š               				newInfo,oldInfo
*output     :        		    errorInfo        
*author     :                     Justin
*CreateDate    :                  2015.08.10
*UpdateDate  :        
*************************************************************************/		
	   v_RATIO_CODE      NVARCHAR(100);
	   v_SUBGEO	         NVARCHAR(20);
	   v_COUNTRY         NVARCHAR(20);
	   v_TBA_TYPE		 NVARCHAR(40);
	   v_BASE_WARR       DECIMAL(15,4);
	   v_PCA			 DECIMAL(15,4);
	   v_UPLIFT          DECIMAL(15,4);
		
		resourceExists BIGINT;
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::updateUiWarrPcaUplift error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::updateUiWarrPcaUplift'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_warr_pca_uplift::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
  
 --START
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::updateUiWarrPcaUplift'
       ,I_MODULE=>'EBGCFE'
   	); 
   	
   	
select
	BASE_WARR ,      
	PCA ,	 
	UPLIFT       
  into  		
	 v_BASE_WARR ,      
	 v_PCA ,	 
	 v_UPLIFT    
  from :newInfo;
 
 
select 
	TBA_TYPE ,
    RATIO_CODE ,     
	SUBGEO ,      
	COUNTRY  
  into  
     v_TBA_TYPE	,	
	 v_RATIO_CODE ,     
	 v_SUBGEO ,      
	 v_COUNTRY 
  from :oldInfo;
  
  	SELECT top 1 count(1) into resourceExists FROM "EBGCFE"."UI_WARR_PCA_UPLIFT" A    
     WHERE  A.RATIO_CODE = :v_RATIO_CODE
            AND A.SUBGEO = :v_SUBGEO
            AND A.COUNTRY = :v_COUNTRY
            AND A.TBA_TYPE = :v_TBA_TYPE	
            AND BASE_WARR = :v_BASE_WARR
		    AND PCA = :v_PCA
            AND UPLIFT = :v_UPLIFT
            ;
   
    if  :resourceExists > 0 
    then
	   
	    return;
    end if;
     
    update "EBGCFE"."UI_WARR_PCA_UPLIFT" set
    	
    	BASE_WARR = :v_BASE_WARR,
    	PCA = :v_PCA,
    	UPLIFT = :v_UPLIFT,
    	SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP,
    	SYS_LAST_MODIFIED_BY = session_user,
    	ACTION = 'update'
    where
    	RATIO_CODE = :v_RATIO_CODE
    	AND SUBGEO = :v_SUBGEO 
    	AND COUNTRY = :v_COUNTRY 
    	AND TBA_TYPE = :v_TBA_TYPE; 
    	

/*put operation to log table*/     	
 INSERT into  "EBGCFE"."UI_WARR_PCA_UPLIFT_LOG"
	(
	"PRODUCT_GROUP",
	"RATIO_CODE",
	"SUBGEO",
	"COUNTRY",
	"TBA_TYPE",
	"BASE_WARR",
	"PCA",
	"UPLIFT",	
	SYS_LAST_MODIFIED_DATE,   
    AT_ACTION,
    SYS_LAST_MODIFIED_BY,
    AT_MODIFIED_ON,
    AT_MILLIS    	
	)
	
 VALUES(	
	'EBG',
	:v_RATIO_CODE,
	:v_SUBGEO,
	:v_COUNTRY,
	:v_TBA_TYPE,
	:v_BASE_WARR,
	:v_PCA,
	:v_UPLIFT,
	CURRENT_TIMESTAMP,
    'update',
    session_user,
    current_date,
    TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3')));
/*END*/
 	    aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::updateUiWarrPcaUplift successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::updateUiWarrPcaUplift'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);   	
 END;