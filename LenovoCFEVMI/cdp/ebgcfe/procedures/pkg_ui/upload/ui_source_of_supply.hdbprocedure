PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply" (
IN  PRODUCT_GROUP varchar(10),
IN	PROD_FAMILY varchar(100),
IN	PLANT varchar(30),
IN	SUBGEO varchar(20),
IN 	BRAND varchar(40),
IN 	EOL_STATUS varchar(20),
IN	 	table_name varchar(200),
IN	 	business_name varchar(200),
IN		business_code	INTEGER,
IN 	 	position INTEGER,
IN CYCLE varchar(20)
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	default schema EBGCFE
	AS
/************************************************************************
*name      : ui_source_of_supply              --函数名
*function  : upload数据至表ui_sos并记录信息              --函数功能
*input     ：    			--输入参数
*output    :                --输出参数
*author     : Eric               --作者
*CreateDate    : 2015-01-20       --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/
		path varchar(100):='cdp.ebgcfe.procedures.pkg_ui.upload';
		proc_name varchar(100) :='ui_source_of_supply';
		logid0 INTEGER :=0;
		currentUser varchar(100);
		create_time TIMESTAMP;
		validate int;
		var_oper VARCHAR(10);
		privilegeExists  NVARCHAR(300)  ;
BEGIN
	--exception        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN  
     	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply_err"(
			:PRODUCT_GROUP,:PROD_FAMILY,:PLANT,:SUBGEO,:BRAND,:EOL_STATUS,
			:table_name,:business_name,:business_code,:position,::SQL_ERROR_MESSAGE,:CYCLE);
     	
    END; 
    --exception 
	

	--procedure begin
	
	
	select session_user into currentUser from dummy;
	select CURRENT_TIMESTAMP into create_time from dummy;
     	
	
	select count(1) into validate from UI_prodfamily where BRAND = :BRAND;
	if validate = 0  then
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply_err"(
			:PRODUCT_GROUP,:PROD_FAMILY,:PLANT,:SUBGEO,:BRAND,:EOL_STATUS,
			:table_name,:business_name,:business_code,:position,'"BRAND"::'||:BRAND||' is illegal',:CYCLE);
		
		return;
	end if;
	
	select count(1) into validate from  UI_prodfamily where BRAND = :BRAND and PROD_FAMILY = :PROD_FAMILY;
	if validate = 0  then
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply_err"(
			:PRODUCT_GROUP,:PROD_FAMILY,:PLANT,:SUBGEO,:BRAND,:EOL_STATUS,
			:table_name,:business_name,:business_code,:position,'"PROD_FAMILY"::'||:PROD_FAMILY||' is illegal',:CYCLE);
		
		return;
	end if;
	
	select count(1) into validate from  UI_PLANT where PLANT = :PLANT;
	if validate = 0  then
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply_err"(
			:PRODUCT_GROUP,:PROD_FAMILY,:PLANT,:SUBGEO,:BRAND,:EOL_STATUS,
			:table_name,:business_name,:business_code,:position,'"PLANT"::'||:PLANT||' is illegal',:CYCLE);
		
		return;
	end if;
	
	select count(1) into validate from  UI_REGION where SUBGEO = :SUBGEO;
	if validate = 0  then
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply_err"(
			:PRODUCT_GROUP,:PROD_FAMILY,:PLANT,:SUBGEO,:BRAND,:EOL_STATUS,
		     :table_name,:business_name,:business_code,:position,'"SUBGEO"::'||:SUBGEO||' is illegal',:CYCLE);
		
		return;
	end if;
	
	select count(1) into validate from  conf_parameters where pdomain='UI_SOS' and pname='EOL_STATUS' and pvalue = :EOL_STATUS;
	if validate = 0  then
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_source_of_supply_err"(
			:PRODUCT_GROUP,:PROD_FAMILY,:PLANT,:SUBGEO,:BRAND,:EOL_STATUS,
			:table_name,:business_name,:business_code,:position,'"EOL_STATUS"::'||:EOL_STATUS||' is illegal',:CYCLE);
		
		return;
	end if;
	
	SELECT top 1 count(1) into validate FROM "EBGCFE"."UI_SOS"   
     WHERE PROD_FAMILY = :PROD_FAMILY and PLANT = :PLANT and SUBGEO = :SUBGEO;
				
	if validate = 0
	then
		    insert into "EBGCFE"."UI_SOS"
  	(PRODUCT_GROUP, PROD_FAMILY, PLANT, SUBGEO, BRAND, EOL_STATUS, CYCLE,
				SYS_CREATED_BY,
		 		SYS_CREATED_DATE,
		 		SYS_LAST_MODIFIED_BY,
				SYS_LAST_MODIFIED_DATE)
  	values('EBG', :PROD_FAMILY, :PLANT, :SUBGEO, :BRAND, :EOL_STATUS, 'CURRENT',
				 :currentUser,
			 	 :create_time,
			 	 :currentUser,
			 	 :create_time);
  		var_oper := 'create';
  	else
  		update "EBGCFE"."UI_SOS" set
    	EOL_STATUS = :EOL_STATUS,
    	SYS_LAST_MODIFIED_BY = :currentuser,
		SYS_LAST_MODIFIED_DATE = :create_time
    where
    	PROD_FAMILY = :PROD_FAMILY
    	AND   PLANT = :PLANT
	    AND   SUBGEO = :SUBGEO
	    AND   BRAND = :BRAND;  
        var_oper := 'update';
  	end if;

insert into "EBGCFE"."UI_SOS_LOG"
    (
    	PRODUCT_GROUP,
    	PROD_FAMILY,
		PLANT,
	    SUBGEO,
	    BRAND,
	    EOL_STATUS,   	
    	SYS_LAST_MODIFIED_DATE,   	
    	AT_ACTION,
    	SYS_LAST_MODIFIED_BY,
    	AT_MODIFIED_ON,
    	AT_MILLIS    	
    )
    values
    (
    	'EPG',
    	:PROD_FAMILY,
		:PLANT,
		:SUBGEO,
		:BRAND,
		:EOL_STATUS,		
    	current_date,    	
    	:var_oper,
    	SESSION_USER,
    	current_date,
    	TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
    ); 
			
	
	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::business_info"(
			:table_name || TO_VARCHAR(:business_code),:business_name,1,0,:table_name);
	

END;
