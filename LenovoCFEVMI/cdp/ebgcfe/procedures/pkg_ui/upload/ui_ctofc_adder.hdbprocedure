PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_ctofc_adder" 
(
	IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_CTOFC_ADDER_S"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA EBGCFE
	
/************************************************************************
*name        :      pm_ui_gr_mtm
*function    :      upload data ui_cto_fc_adder          
*input       ：              business_name etc
*output      :                
*author      :      zhaodan1
*CreateDate  :      2016.6.2
*UpdateDate  :        
*************************************************************************/ 

	AS
	path varchar(100):='cdp.ebgcfe.procedures.pkg_ui.upload';
	proc_name varchar(100) :='ui_cto_fc_adder';
 	sys_last_modified_date TIMESTAMP;
	log_detail NVARCHAR(300) :='';
	error_count int;
	currentUser varchar(100);
	create_time TIMESTAMP;
	business_code nvarchar(20);
	business_name nvarchar(100);
	table_name varchar(1000) := 'UI_CTOFC_ADDER';
	success_count int := 0;
	exist int :=0 ;
BEGIN
	--exception     
    DECLARE no_data_found CONDITION FOR SQL_ERROR_CODE 1299; 
    DECLARE EXIT HANDLER FOR no_data_found   
     BEGIN      
 --    	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::pm_ui_gr_mtm_err"(:newInfo);
     END;     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN  
--     	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::pm_ui_gr_mtm_err"(:newInfo);
    END; 
       
	--procedure begin

--	
	select top 1 SEQ,BUSINESS_NAME into business_code,business_name  from :newInfo;
	
	--赋值时间戳和用户名
	SELECT SESSION_USER INTO currentUser FROM DUMMY;
	SELECT CURRENT_UTCTIMESTAMP INTO create_time FROM DUMMY;
	

 							
--Deaal with SUCCESS data    

       newInfo_success = 
          SELECT 'CURRENT' CYCLE, 'EBG' PRODUCT_GROUP,
                 CTO,       UPPER(FC) FC,	       PLANT,    SUBGEO,
				 a.ADDER_NAME,COST_LEVEL,a.TBA_TYPE,
				 M1 ,M2 ,M3 ,M4 ,
				 M5 ,M6 ,M7 ,M8 ,
				 M9 ,M10,M11,M12,
				 M13,M14,M15,M16,
				 M17,M18,
				 'create' ACTION,
	 	        :create_time SYS_CREATED_DATE,:currentUser SYS_CREATED_BY,
	 	        :create_time SYS_LAST_MODIFIED_DATE,:currentUser SYS_LAST_MODIFIED_BY
	 	FROM :newInfo as a
	 	INNER JOIN UI_ADDER_CONF as b
	 	on a.adder_name = b.adder_name and
	 	   a.tba_type = b.tba_type
	 	WHERE 
	 		  a.CTO IN(  	
 	                      SELECT ITEM_VALUE
						    FROM "_SYS_BIC"."cdp.ebgcfe.models.ui_ctofc_adder/CV_UI_CTOFC_ADDER_C_DDL" 
							     ('PLACEHOLDER' = ('$$INPUT_TYPE$$', 'CTO'))
					  ) AND
			  UPPER(a.FC)IN(  	
 	                      SELECT ITEM_VALUE
						    FROM "_SYS_BIC"."cdp.ebgcfe.models.ui_ctofc_adder/CV_UI_CTOFC_ADDER_C_DDL" 
							     ('PLACEHOLDER' = ('$$INPUT_TYPE$$', 'FC'))
					  ) AND
			  a.SUBGEO IN(  	
 	                      SELECT ITEM_VALUE
						    FROM "_SYS_BIC"."cdp.ebgcfe.models.ui_ctofc_adder/CV_UI_CTOFC_ADDER_C_DDL" 
							     ('PLACEHOLDER' = ('$$INPUT_TYPE$$', 'SUBGEO'))
					  ) AND	
			  a.PLANT IN(  	
 	                      SELECT ITEM_VALUE
						    FROM "_SYS_BIC"."cdp.ebgcfe.models.ui_ctofc_adder/CV_UI_CTOFC_ADDER_C_DDL" 
							     ('PLACEHOLDER' = ('$$INPUT_TYPE$$', 'PLANT'))
					  ) AND
			 a.COST_LEVEL IN(  	
 	                      SELECT ITEM_VALUE
						    FROM "_SYS_BIC"."cdp.ebgcfe.models.ui_ctofc_adder/CV_UI_CTOFC_ADDER_C_DDL" 
							     ('PLACEHOLDER' = ('$$INPUT_TYPE$$', 'COST_LEVEL'))
					  )  AND	
			 a.ADDER_NAME IN(  	
 	                      SELECT ITEM_VALUE
						    FROM "_SYS_BIC"."cdp.ebgcfe.models.ui_ctofc_adder/CV_UI_CTOFC_ADDER_C_DDL" 
							     ('PLACEHOLDER' = ('$$INPUT_TYPE$$', 'ADDER_NAME'))
					  ) 	  			  	  	  
			  		  ;	 
        
        
        INSERT INTO "EBGCFE"."UI_CTOFC_ADDER"
			      (  CYCLE, PRODUCT_GROUP,
	                 CTO,       FC,	       PLANT,    SUBGEO,
					 ADDER_NAME,COST_LEVEL,TBA_TYPE,
					 M1 ,M2 ,M3 ,M4 ,
					 M5 ,M6 ,M7 ,M8 ,
					 M9 ,M10,M11,M12,
					 M13,M14,M15,M16,
					 M17,M18,
					 ACTION,
			        SYS_CREATED_DATE,SYS_CREATED_BY,SYS_LAST_MODIFIED_DATE,SYS_LAST_MODIFIED_BY )
		 	SELECT  CYCLE, PRODUCT_GROUP,
	                 CTO,       FC,	       PLANT,    SUBGEO,
					 ADDER_NAME,COST_LEVEL,TBA_TYPE,
					 M1 ,M2 ,M3 ,M4 ,
					 M5 ,M6 ,M7 ,M8 ,
					 M9 ,M10,M11,M12,
					 M13,M14,M15,M16,
					 M17,M18,
					 ACTION,
			        SYS_CREATED_DATE,SYS_CREATED_BY,SYS_LAST_MODIFIED_DATE,SYS_LAST_MODIFIED_BY 
		 	FROM :newInfo_success b
		 	WHERE NOT EXISTS ( SELECT 1 
						          FROM "EBGCFE"."UI_CTOFC_ADDER" a 
						          WHERE a.CYCLE = b.CYCLE AND
						                a.PRODUCT_GROUP = b.PRODUCT_GROUP AND
						                a.CTO = b.CTO AND
						                a.FC = b.FC AND
						                a.PLANT = b.PLANT AND
						                a.SUBGEO = b.SUBGEO AND
						                a.ADDER_NAME = b.ADDER_NAME)	;
						                
						                
        UPDATE  "EBGCFE"."UI_CTOFC_ADDER" a
		       SET 	 a.ADDER_NAME = b.ADDER_NAME, a.COST_LEVEL = b.COST_LEVEL, a.TBA_TYPE = b.TBA_TYPE,
					 a.M1  = b.M1 , a.M2  = b.M2  , a.M3  = b.M3 ,  a.M4  =  b.M4 ,
					 a.M5  = b.M5 , a.M6  = b.M6  , a.M7  = b.M7 ,  a.M8  =  b.M8 ,
					 a.M9  = b.M9 , a.M10 = b.M10 , a.M11 = b.M11 , a.M12 =  b.M12,
					 a.M13 = b.M13, a.M14 = b.M14 , a.M15 = b.M15 , a.M16 =  b.M16,
					 a.M17 = b.M17, a.M18 = b.M18,
					 ACTION = 'update',
			         SYS_LAST_MODIFIED_DATE = :create_time,
			         SYS_LAST_MODIFIED_BY = :currentUser
			  FROM   "EBGCFE"."UI_CTOFC_ADDER" a,  :newInfo_success b
			  WHERE  a.CYCLE = b.CYCLE AND
			         a.PRODUCT_GROUP = b.PRODUCT_GROUP AND
	                 a.CTO = b.CTO AND
	                 a.FC = b.FC AND
	                 a.PLANT = b.PLANT AND
	                 a.SUBGEO = b.SUBGEO AND
                     a.ADDER_NAME = b.ADDER_NAME; 						                
		 	
      
        
	 	
	 	select count(1) into success_count   from :newInfo_success;
	 	
	 	
	 	newInfo_error = 	 	  
	        SELECT  CTO,       FC,	       PLANT,    SUBGEO,
				    COST_LEVEL,TBA_TYPE FROM :newInfo
	        EXCEPT
	        SELECT  CTO,       FC,	       PLANT,    SUBGEO,
				    COST_LEVEL,TBA_TYPE  FROM :newInfo_success;
	        
	    SELECT COUNT(1) INTO error_count
        FROM :newInfo_error as a   ;  	

							 			
		IF error_count > 0 THEN
		    
	    newInfo_e = 
		    select 		       
			    CTO,       FC,	      PLANT,    SUBGEO,
				ADDER_NAME,COST_LEVEL,TBA_TYPE,
				M1 ,M2 ,M3 ,M4,
				M5 ,M6 ,M7 ,M8,
				M9 ,M10,M11,M12,
				M13,M14,M15,M16,
				M17,M18,
				'procedure' SOURCE,
				'' ERROR_MESSAGE,          BUSINESS_NAME,
				SEQ ,    				POSITION
            from :newInfo;
		    
			CALL "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_ctofc_adder_err"(:newInfo_e);
		END IF;   
							 			 
	 	
	 	--insert操作需要写入日志
		INSERT INTO "EBGCFE"."UI_CTOFC_ADDER_LOG"(
		                     CYCLE,  PRODUCT_GROUP,
			                 CTO,       FC,	       PLANT,    SUBGEO,
							 ADDER_NAME,COST_LEVEL,TBA_TYPE,
							 M1 ,M2 ,M3 ,M4 ,
							 M5 ,M6 ,M7 ,M8 ,
							 M9 ,M10,M11,M12,
							 M13,M14,M15,M16,
							 M17,M18,
		                    
							SYS_CREATED_DATE,
							SYS_CREATED_BY,							
							SYS_LAST_MODIFIED_DATE,
							SYS_LAST_MODIFIED_BY,
							AT_ACTION,	AT_MILLIS)
		SELECT  'CURRENT',  'EBG',
                 CTO,       FC,	       PLANT,    SUBGEO,
				 ADDER_NAME,COST_LEVEL,TBA_TYPE,
				 M1 ,M2 ,M3 ,M4 ,
				 M5 ,M6 ,M7 ,M8 ,
				 M9 ,M10,M11,M12,
				 M13,M14,M15,M16,
				 M17,M18,
		        SYS_CREATED_DATE,
		        SYS_CREATED_BY,
		        SYS_LAST_MODIFIED_DATE,
		        SYS_LAST_MODIFIED_BY,
		        'create',  TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
	 	FROM :newInfo_success 	;	
	
		-- passing successful total numbers
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::business_info"(
			:table_name || :business_code,:business_name,:success_count,0,:table_name);

END;

