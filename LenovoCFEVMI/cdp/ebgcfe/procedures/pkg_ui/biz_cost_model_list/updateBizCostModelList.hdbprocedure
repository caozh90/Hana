PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.biz_cost_model_list::updateBizCostModelList" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.BIZ_COST_MODEL_LIST_T"
		,IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.BIZ_COST_MODEL_LIST_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
/************************************************************************
*name      :                     updateBizCostModelList
*function    :               
*input     ï¼š               
*output     :                
*author     :                     shangqian
*CreateDate    :                  2014.12.2
*UpdateDate  :        
*************************************************************************/
	
		aItem NVARCHAR(40);
		aBrand NVARCHAR(40);
		aPlant NVARCHAR(20);
		aSubGeo NVARCHAR(10);
		aCountry NVARCHAR(20);
		aEol_status NVARCHAR(40);
		
		resourceExists BIGINT;
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		
		privilegeExists  NVARCHAR(300)  ;
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui::updateBizCostModelList error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateBizCostModelList'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'biz_cost_model_list::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
  
 --START
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateBizCostModelList'
       ,I_MODULE=>'EBGCFE'
   	); 
     	
 select
    EOL_STATUS     
  into  	
	aEol_status
  from :newInfo;
 
 
 select
    --PRODUCT_GROUP,	
    ITEM,
    BRAND,
    PLANT,
    SUBGEO,
    COUNTRY
  into  	
 	--aProduct_group,
 	aItem,
 	aBrand,
 	aPlant,
 	aSubGeo,
 	aCountry
  from :oldInfo;

 SELECT top 1 count(1) into resourceExists FROM "EBGCFE"."BIZ_COST_MODEL_LIST" A    
     WHERE 
          A.ITEM = :aItem 
          AND A.BRAND = :aBrand
   		  AND A.PLANT = :aPlant
   		  AND A.SUBGEO = :aSubGeo
   		  AND A.COUNTRY = :aCountry
   		  AND A.EOL_STATUS = :aEol_status;
   		  
    if  :resourceExists > 0 
    then	
    	return;     	
	    return;--SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record is same as before';
    end if;
     
    update "EBGCFE"."BIZ_COST_MODEL_LIST" set
    	EOL_STATUS = :aEol_status,
    	SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP,
    	SYS_LAST_MODIFIED_BY = session_user
    where
    	ITEM = :aItem
    	and BRAND = :aBrand
    	and PLANT = :aPlant
    	and SUBGEO = :aSubGeo
    	and COUNTRY = :aCountry;
    	--and GEO = :aGeo;
    	/*PRODUCT_GROUP = :aProduct_group and*/
    	
/*put operation to log table */
    insert into "EBGCFE"."BIZ_COST_MODEL_LIST_LOG"
    (
    	PRODUCT_GROUP,
    	ITEM,
    	BRAND,    	
    	PLANT,
    	SUBGEO,
    	COUNTRY,
    	SYS_LAST_MODIFIED_DATE,   	
    	ACTION,
    	SYS_LAST_MODIFIED_BY    	
    )
    values
    (
    	'EBG',
    	:aItem,
    	:aBrand,
    	:aPlant,
    	:aSubGeo,
    	:aCountry,
    	current_date,    	
    	'update',
    	session_user    	
    );   	
    	   	
/*END*/
 	    aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui::updateBizCostModelList ('||:aItem||' ,) successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.updateBizCostModelList::updateUiPlant'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);
  	
END;