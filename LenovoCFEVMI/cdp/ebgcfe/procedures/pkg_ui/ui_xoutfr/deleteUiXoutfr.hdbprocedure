PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_xoutfr::deleteUiXoutfr" ( 
        IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_XOUTFR_T"
        ,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT 
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "EBGCFE"
    AS
	/************************************************************************
	*name      :                     deleteUiXoutfr
	*function    :               
	*input     ï¼š               
	*output     :                
	*author     :                     Fangyuan
	*CreateDate    :                  2014.12.18
	*UpdateDate  :        
	*************************************************************************/  

        aI_DETAIL NVARCHAR(300) :='';   
        alogide INTEGER :=0;          
        privilegeExists  NVARCHAR(300)  ;  
BEGIN

 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
        aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_xoutfr::deleteUiXoutfr error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
        
        CALL "EX_LOG"."cdp.log.procedures::logProc"(
             I_TYPE=>'PROC_ERROR'   
            ,I_LOGSID=>:alogide
            ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_xoutfr::deleteUiXoutfr'
            ,I_MODULE=>'EBGCFE'
            ,I_MESSAGE=>'E'||::SQL_ERROR_CODE
            ,I_DETAIL=>:aI_DETAIL
        );  
 
        errorInfo = select 400 as http_status_code, 
            'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
            aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_xoutfr::deleteable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
    
 --START
    CALL "EX_LOG"."cdp.log.procedures::logProc"(
        I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_xoutfr::deleteUiXoutfr'
       ,I_MODULE=>'EBGCFE'
    ); 


    INSERT INTO UI_XOUTFR_LOG
    (
    "PRODUCT_GROUP",
    "BRAND",
    "FAMILY",
    "PLANT",
    "SUBGEO",
    "TBA_TYPE",
    "M1",
    "M2",
    "M3",
    "M4",
    "M5",
    "M6",
    "M7",
    "M8",
    "M9",
    "M10",
    "M11",
    "M12",
    "M13",
	"M14",
	"M15",
	"M16",
	"M17",
	"M18",
    "SYS_CREATED_DATE",
    "SYS_CREATED_BY",
    "SYS_LAST_MODIFIED_DATE",
    "SYS_LAST_MODIFIED_BY",
    "ACTION",
    "STATUS",
    "CHANGE_ID",
    "CHANGE_ACTION",
    "AT_MODIFIED_BY",
    "AT_ACTION",
    "AT_MODIFIED_ON",
    "AT_MILLIS"
    )
    SELECT
    "PRODUCT_GROUP",
    "BRAND",
    "FAMILY",
    "PLANT",
    "SUBGEO",
    "TBA_TYPE",
    "M1",
    "M2",
    "M3",
    "M4",
    "M5",
    "M6",
    "M7",
    "M8",
    "M9",
    "M10",
    "M11",
    "M12",
    "M13",
	"M14",
	"M15",
	"M16",
	"M17",
	"M18",
    "SYS_CREATED_DATE",
    "SYS_CREATED_BY",
    "SYS_LAST_MODIFIED_DATE",
    "SYS_LAST_MODIFIED_BY",
    "ACTION",
    "STATUS",
    "CHANGE_ID",
    "CHANGE_ACTION",
     SESSION_USER,
     'DELETE',
     CURRENT_DATE,
     TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))    
    FROM  UI_XOUTFR a
    WHERE EXISTS
    (SELECT 1 FROM :newInfo b
    where A.BRAND=B.BRAND AND A.FAMILY=B.FAMILY AND A.PLANT=B.PLANT 
    AND A.SUBGEO=B.SUBGEO AND A.TBA_TYPE=B.TBA_TYPE
    );  
    
    
    delete from UI_XOUTFR a
    where exists(
    select 1 from :newInfo b
    where A.BRAND=B.BRAND AND A.FAMILY=B.FAMILY AND A.PLANT=B.PLANT 
    AND A.SUBGEO=B.SUBGEO AND A.TBA_TYPE=B.TBA_TYPE);
    
        if ::rowcount <=0
    then
        errorInfo = select 400 as http_status_code, 
                    'the record do not exists' error_message, 
                    'the record do not exists' DETAIL from dummy;               
                return;
    end if; 
    
        /*END*/
        aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_xoutfr::deleteUiXoutfr successfully created . ';
        CALL "EX_LOG"."cdp.log.procedures::logProc"(
            I_TYPE=>'PROC_END'  
            ,I_LOGSID=>:alogide
            ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_xoutfr::deleteUiXoutfr'
            ,I_MODULE=>'EBGCFE'
            ,I_DETAIL=>:aI_DETAIL
        );     
END;
