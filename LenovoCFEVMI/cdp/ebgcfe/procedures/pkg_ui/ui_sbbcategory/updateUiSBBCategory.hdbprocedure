PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_sbbcategory::updateUiSBBCategory" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_SBBCategory_T"
		,IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_SBBCategory_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER  
	--DEFAULT SCHEMA <default_schema_name>
	AS
/************************************************************************
*name      :                     updateUiSBBCategory
*function    :               
*input     ï¼š               
*output     :                
*author     :                     shangqian
*CreateDate    :                  2014.12.2
*UpdateDate  :        
*************************************************************************/	
		aBbid NVARCHAR(18);
		aCost_category NVARCHAR(40);
		aProduct_group NVARCHAR(40);
		aCharacterV NVARCHAR(100);
		
		resourceExists BIGINT;
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ; 
BEGIN

/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui::updateUiSBBCategory error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateUiSBBCategory'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_sbbcategory::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
    
 --START
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateUiSBBCategory'
       ,I_MODULE=>'EBGCFE'
   	); 
   	
 select
    COST_CATEGORY    
  into  	
	aCost_category
  from :newInfo;
 
 
 select
    PRODUCT_GROUP,	
    BBID,
    CHARACTER_V
  into  	
 	aProduct_group,
 	aBbid,
 	aCharacterV
  from :oldInfo;
  
SELECT top 1 count(1) into resourceExists FROM "EBGCFE"."UI_SBBCATEGORY" A    
     WHERE A.PRODUCT_GROUP = :aProduct_group
          AND A.BBID = :aBbid 
          AND A."COST_CATEGORY" = :aCost_category;
   
    if  :resourceExists > 0 
    then
--	    errorInfo = select 400 as http_status_code, 
--	     		'the record is same as before' error_message, 
--	     		'the record is same as before' DETAIL from dummy;
	     		
	     	return;
    end if;


    update "EBGCFE"."UI_SBBCATEGORY"  A set
    	A.SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP,
    	A.SYS_LAST_MODIFIED_BY = session_user,
    	A."COST_CATEGORY" = :aCost_category   	   	
    where
    	A.BBID = :aBbid
    	and PRODUCT_GROUP = :aProduct_group and CHARACTER_V = aCharacterV;

/*put operation to log table*/
    insert into "EBGCFE"."UI_SBBCATEGORY_LOG"
    (
    	PRODUCT_GROUP,
    	BBID,
    	"COST_CATEGORY", 
    	CHARACTER_V,   	
    	SYS_LAST_MODIFIED_DATE,   	
    	ACTION,
    	SYS_LAST_MODIFIED_BY,
    	AT_MODIFIED_ON,
    	AT_MILLIS    	
    )
    values
    (
    	:aProduct_group,
    	:aBbid,
    	:aCost_category,
    	aCharacterV,
    	current_date,    	
    	'update',
    	current_user,
    	current_date,
    	TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
    );
    	
/*END*/
 	    aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui::updateUiSBBCategory ('||:aBbid||' ,) successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateUiSBBCategory'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);
END;