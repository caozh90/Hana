PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_ctofc_adder::updateUiCtoFcAdder"
(
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_CTOFC_ADDER_T",
		 IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_CTOFC_ADDER_T",
		 OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA EBGCFE
	--READS SQL DATA 
/************************************************************************
*name        :      updateUiCtoFcAdder
*function    :               
*input       ï¼š              newInfo&oldInfo
*output      :      errorInfo            
*author      :      zhaodan
*CreateDate  :      2016.6.3
*UpdateDate  :        
*************************************************************************/ 
	AS
	aI_DETAIL NVARCHAR(300) :='';
	alogide INTEGER :=0;
	privilegeExists  NVARCHAR(300)  ;
    v_WEIGHT			 DECIMAL(15,4);
    v_resourceExists  BIGINT;
BEGIN

DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;

DECLARE EXIT HANDLER FOR SQLEXCEPTION   
	BEGIN
		aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_ctofc_adder::updateUiCtoFcAdder error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
		
		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_ctofc_adder::updateUiCtoFcAdder'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
	END;

--check the privilege
	call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_ctofc_adder::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' || :privilegeExists as  error_message, 
              privilegeExists as detail from dummy;
       RETURN ;
    END IF;
--start
 	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_ctofc_adder::updateUiCtoFcAdder'
       ,I_MODULE=>'EBGCFE'
   	);

-- if no value changed   	
		SELECT COUNT(1) into v_resourceExists 
		FROM :oldInfo a,:newInfo b 
		WHERE  a.CYCLE = b.CYCLE AND
		       a.PRODUCT_GROUP = b.PRODUCT_GROUP AND
		       a.CTO = b.CTO AND
		       a.FC = b.FC AND
		       a.PLANT = b.PLANT AND
		       a.SUBGEO = b.SUBGEO AND
		       a.ADDER_NAME = b.ADDER_NAME AND
		       a.COST_LEVEL = b.COST_LEVEL AND
		       a.M1 = b.M1
		        AND
		       a.M2 = b.M2
		        AND
		       a.M3 = b.M3
		        AND
		       a.M4 = b.M4
		        AND
		       a.M5 = b.M5
		        AND
		       a.M6 = b.M6
		        AND
		       a.M7 = b.M7
		        AND
		       a.M8 = b.M8
		        AND
		       a.M9 = b.M9
		        AND
		       a.M10 = b.M10
		        AND
		       a.M11 = b.M11
		        AND
		       a.M12 = b.M12
		        AND
		       a.M13 = b.M13
		        AND
		       a.M14 = b.M14
		        AND
		       a.M15 = b.M15
		        AND
		       a.M16 = b.M16
		        AND
		       a.M17 = b.M17
		        AND
		       a.M18 = b.M18; 
		
		if v_resourceExists > 0
		then
			 --SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record do not exists'; 
			 return;
		end if;		

--update into UI_CTOFC_ADDER table		  
	   UPDATE  "EBGCFE"."UI_CTOFC_ADDER" a
	       SET 	 --a.ADDER_NAME = b.ADDER_NAME, a.COST_LEVEL = b.COST_LEVEL, a.TBA_TYPE = b.TBA_TYPE,
	             a.COST_LEVEL = b.COST_LEVEL,
				 a.M1  = b.M1 , a.M2  = b.M2  , a.M3  = b.M3 ,  a.M4  =  b.M4 ,
				 a.M5  = b.M5 , a.M6  = b.M6  , a.M7  = b.M7 ,  a.M8  =  b.M8 ,
				 a.M9  = b.M9 , a.M10 = b.M10 , a.M11 = b.M11 , a.M12 =  b.M12,
				 a.M13 = b.M13, a.M14 = b.M14 , a.M15 = b.M15 , a.M16 =  b.M16,
				 a.M17 = b.M17, a.M18 = b.M18,
				 ACTION = 'update',
		         SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP,
		         SYS_LAST_MODIFIED_BY = SESSION_USER
		  FROM   "EBGCFE"."UI_CTOFC_ADDER" a,  :newInfo b
		  WHERE  a.CYCLE = b.CYCLE AND
		         a.PRODUCT_GROUP = b.PRODUCT_GROUP AND
                 a.CTO = b.CTO AND
                 a.FC = b.FC AND
                 a.PLANT = b.PLANT AND
                 a.SUBGEO = b.SUBGEO AND
                 a.ADDER_NAME = b.ADDER_NAME;    

--insert log table
--INSERT INTO UI_CTOFC_ADDER_LOG TABLE
--insert into log
	INSERT INTO "EBGCFE"."UI_CTOFC_ADDER_LOG"(
			                     CYCLE,  PRODUCT_GROUP,
				                 CTO,       FC,	       PLANT,    SUBGEO,
								 ADDER_NAME,COST_LEVEL,TBA_TYPE,
								 M1 ,M2 ,M3 ,M4 ,
								 M5 ,M6 ,M7 ,M8 ,
								 M9 ,M10,M11,M12,
								 M13,M14,M15,M16,
								 M17,M18,			                    
								SYS_CREATED_DATE,			SYS_CREATED_BY,							
								SYS_LAST_MODIFIED_DATE,		SYS_LAST_MODIFIED_BY,
								AT_ACTION,	AT_MILLIS)
			SELECT  'CURRENT',  'EBG',
	                 CTO,       FC,	       PLANT,    SUBGEO,
					 ADDER_NAME,COST_LEVEL,TBA_TYPE,
					 M1 ,M2 ,M3 ,M4 ,
					 M5 ,M6 ,M7 ,M8 ,
					 M9 ,M10,M11,M12,
					 M13,M14,M15,M16,
					 M17,M18,
			        CURRENT_TIMESTAMP,SESSION_USER,
		        CURRENT_TIMESTAMP,SESSION_USER,
			        'update',  TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
		 	FROM :oldInfo 	;	
	   	
aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_ctofc_adder::updateUiCtoFcAdder successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_ctofc_adder::updateUiCtoFcAdder'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);  
END;

