PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_country_salesorg_mapping::deleteUiCountrySalesorgMapping" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_COUNTRY_SALESORG_MAPPING_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	AS
	    aCountry NVARCHAR(20);
	    aSalesorg_org NVARCHAR(20);
	    aSalesorg_office NVARCHAR(20);
	    
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		
		privilegeExists  NVARCHAR(300)  ; 
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_country_salesorg_mapping::deleteUiCountrySalesorgMapping error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.ui_country_salesorg_mapping::deleteUiCountrySalesorgMapping'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_country_salesorg_mapping::deleteable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
    
CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_country_salesorg_mapping::deleteUiCountrySalesorgMapping'
       ,I_MODULE=>'EBGCFE'
   	);


select
    COUNTRY,
    SALES_ORG,	
    SALES_OFFICE
  into  	
 	aCountry,
 	aSalesorg_org,
 	aSalesorg_office
  from :newInfo;
  
  
  delete from "EBGCFE"."UI_COUNTRY_SALESORG_MAPPING"
  	WHERE COUNTRY = :aCountry          
      AND SALES_ORG = :aSalesorg_org
      AND SALES_OFFICE = :aSalesorg_office;
          
/*put operation to log table*/     	
 insert into "EBGCFE"."UI_COUNTRY_SALESORG_MAPPING_LOG"
    (
    	COUNTRY,	
	    SALES_ORG,
    	SALES_OFFICE,     	
    	SYS_LAST_MODIFIED_DATE,   	
    	ACTION,
    	SYS_LAST_MODIFIED_BY,
    	AT_MODIFIED_ON,
    	AT_MILLIS    	
    )
    select 
        a.COUNTRY,	
	    a.SALES_ORG,	
    	a.SALES_OFFICE, 	    
    	current_date,    	
    	'delete',
    	session_user,
    	current_date,
    	TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
    FROM :newInfo a;  	  
                 	
aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_country_salesorg_mapping::deleteUiCountrySalesorgMapping successfully deleted . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_country_salesorg_mapping::deleteUiCountrySalesorgMapping'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);
END;