PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::deleteUiCostFlag" 
(
	IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_COSTFLAG_T"
	,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	 --READS SQL DATA 
	AS
	
	   aI_DETAIL NVARCHAR(300) :='';
	   alogide INTEGER :=0;
	   v_sbb_type       NVARCHAR(30); 
	   v_cost_flag      NVARCHAR(10);
	   v_vk             NVARCHAR(30);
  	   privilegeExists  NVARCHAR(300)  ; 
BEGIN
/************************************************************************
*name      :                     deleteUiCostFlag
*function    :               
*input     ï¼š               oldInfo
*output     :    errorInfo            
*author     :                     chenwh3
*DeleteDate    :                  2015.07.23
*UpdateDate  :        
*************************************************************************/ 

	DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION   
	BEGIN
		aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::deleteUiCostFlag error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
		
		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::deleteUiCostFlag'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
	END;
	call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_cost_flag::deleteable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
    
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::deleteUiCostFlag'
       ,I_MODULE=>'EBGCFE'
   	); 
   
 	SELECT SBB_TYPE,VK  INTO  v_sbb_type,v_vk
 		FROM :OLDINFO;
--DELETE RECORD FROM TABLE
	DELETE FROM "EBGCFE"."UI_COSTFLAG" WHERE SBB_TYPE = :v_sbb_type AND VK = :v_vk;
	
	IF ::ROWCOUNT < 0
	THEN
	 	SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record do not exists';
	END IF;	
	
	--INSERT INTO UI_COSTFLAG_LOG TABLE
insert into "EBGCFE"."UI_COSTFLAG_LOG"(PRODUCT_GROUP,SBB_TYPE,VK,COST_FLAG,AT_ACTION,AT_MODIFIED_BY,AT_MODIFIED_ON,AT_MILLIS)SELECT 
		    'EBG',
		    a.SBB_TYPE,
		    a.VK,
		    a.COST_FLAG,
		    'delete',
	 		SESSION_USER,
	 		CURRENT_TIMESTAMP,
	 		TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3')) FROM :oldInfo a; 	
	 		
	 		
aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::deleteUiCostFlag successfully deleted . ';
  		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::deleteUiCostFlag'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);	      
END;
