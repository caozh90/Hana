PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_region::updateUiRegion" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_REGION_T"
		,IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_REGION_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER  
	--DEFAULT SCHEMA <default_schema_name>
	AS
/************************************************************************
*name      :                     updateUiRegion
*function    :               
*input     ï¼š               
*output     :                
*author     :                     shangqian
*CreateDate    :                  2014.12.2
*UpdateDate  :        
*************************************************************************/
        aProduct_group NVARCHAR(10); 	
		aGeo NVARCHAR(40);
		aSubgeo NVARCHAR(20);
		aCountry NVARCHAR(20);
		aCountryName NVARCHAR(40);
		
		resourceExists BIGINT;
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui::updateUiRegion error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateUiRegion'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_region::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
    
 --START
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateUiRegion'
       ,I_MODULE=>'EBGCFE'
   	); 
   	
 select    
    COUNTRY_NAME   
  into  		
	aCountryName	
  from :newInfo;
 
 
 select
    PRODUCT_GROUP,
    GEO,
    SUBGEO,
    COUNTRY
  into  	
 	aProduct_group,
 	aGeo,
 	aSubgeo,
 	aCountry
  from :oldInfo;
  
  	SELECT top 1 count(1) into resourceExists FROM "EBGCFE"."UI_REGION" A    
     WHERE A.GEO = :aGeo
          AND A.SUBGEO = :aSubgeo 
          AND A.COUNTRY = :aCountry
          AND A.COUNTRY_NAME = :aCountryName;
   
    if  :resourceExists > 0 
    then
	    /*errorInfo = select 400 as http_status_code, 
	     		'the record is same as before' error_message, 
	     		'the record is same as before' DETAIL from dummy;
	     		
	     	return;*/
	    --SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record is same as before'; 
	    return;
    end if;
     
    update "EBGCFE"."UI_REGION" set    	
    	COUNTRY_NAME = :aCountryName,
    	SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP,
    	SYS_LAST_MODIFIED_BY = session_user
    where
    	GEO = :aGeo
    	and SUBGEO = :aSubgeo
    	and COUNTRY = :aCountry
    	and PRODUCT_GROUP = :aProduct_group;
    	
 /*put operation to log table*/
    insert into "EBGCFE"."UI_REGION_LOG"
    (
    	GEO,
    	SUBGEO,
    	COUNTRY,
    	COUNTRY_NAME,   	
    	SYS_LAST_MODIFIED_DATE,   	
    	ACTION,
    	SYS_LAST_MODIFIED_BY,
    	AT_MODIFIED_ON,
    	AT_MILLIS    	
    )
    values
    (
    	:aGeo,
    	:aSubgeo,
    	:aCountry,
    	:aCountryName,    	
    	current_date,    	
    	'update',
    	current_user,
    	current_date,
    	TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
    );  	    	    	
/*END*/
 	    aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui::updateUiRegion ('||:aGeo||' ,) successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui::updateUiRegion'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);
END;