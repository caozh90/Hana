<?xml version="1.0" encoding="UTF-8"?>
<UDE:Procedure xmlns:UDE="http://www.sap.com/ndb/SQLCoreModelUDE.ecore" xmlns:DataTypes="http://www.sap.com/ndb/SQLCoreModelDataTypes.ecore" xmlns:procedureTemplate="http://www.sap.com/ndb/SQLCoreModelProcedureTemplate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="2" procedureType="procedureTemplate" runWithInvokerPrivileges="true" language="SQLSCRIPT" accessMode="ReadOnly">
<descriptions defaultDescription="proceduretemplate"/>
<metadata changedAt ="2017-02-24 15:01:36.304" createdAt="2017-02-24 15:01:36.304"/>
<origin/>
<schema id="_SYS_BIC"/>
<definition> 
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
END;</definition>
<defaultSchema schemaName="CAOZH4"/>
<localTableType>/*
You can create new table types and use them as input and output parameters in a procedure.
To do this, define the table types using SQL syntax, for example:
CREATE TYPE &lt;Type Name&gt; AS TABLE (&lt;Field Name1&gt; &lt;Field Type1&gt;, &lt;Field Name2&gt; &lt;Field Type2&gt;,...);
*/
</localTableType>
<header>CREATE PROCEDURE proceduretemplate ( ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA &lt;default_schema_name&gt;
	READS SQL DATA AS</header>
<templateParameter key="KEY_0"/>
</UDE:Procedure>