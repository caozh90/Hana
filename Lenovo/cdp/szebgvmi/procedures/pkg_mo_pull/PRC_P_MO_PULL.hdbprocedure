PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_mo_pull::PRC_P_MO_PULL" ( IN iv_id VARCHAR(10)
, OUT on_exitcode NUMBER) 
    LANGUAGE SQLSCRIPT
    SQL SECURITY DEFINER 
    DEFAULT SCHEMA "SZEBGVMI"
    --READS SQL DATA 
    /************************************************************************
    *name      : PRC_P_MO_PULL              --函数名
    *function  :                --函数功能 
    *input     ：  iv_id       --输入参数
    *output     :          --输出参数
    *author     : FangYuan               --作者
    *CreateDate : 20141215                  --创建时间
    *UpdateDate :        --函数更改信息（包括作者、时间、更改内容等）

    * update  by xwu 2015/9/18
    * 针对zpcdw_mo_bom, 如果供应商vendor包含 '!='字符串，
    * 在取SOI 库存的时候，要排除该供应商.    
    *************************************************************************/
    AS         
     gv_logic_name    VARCHAR2 (40)  := 'PKG_MO_PULL';    
     v_logic_proc_name   VARCHAR2 (40) := 'PRC_P_MO_PULL';
     logidi integer:=0;
     logidj integer:=0;
     
     
      v_mo_id                VARCHAR(12) := ' ';
      v_pre_mo_id            VARCHAR(12) := ' ';
      --Previous MO_ID
      n_qty                  DECIMAL(13,3);
      n_qty_a                DECIMAL(13,3);
      n_qty_c                DECIMAL(13,3);
      n_qty_c2               DECIMAL(13,3);
      n_count                SMALLINT;
      n_vendors              SMALLINT;
      n_lot_size             NUMBER;
      n_old_records          NUMBER;
      n_count_rows           NUMBER;
      v_lack_flag            CHAR (1);            --Lack of Material Flag, Y/N
      v_cancel_flag          CHAR (1);                   --Cancel MO Flag, Y/N
      v_pull_line_id         VARCHAR(10);
      v_pull_header_id       VARCHAR(10);
      n_qty_left             DECIMAL(13,3);
      n_qty_used             DECIMAL(13,3);
      n_qty_sum              DECIMAL(13,3);
      n_sum_qty              DECIMAL(13,3);
      v_bomname              VARCHAR(18);
      v_matnr                VARCHAR(18);
      v_werks                VARCHAR(18);
      v_lifnr                VARCHAR(10);
      v_bom_lifnr            VARCHAR(20);   -- modify by xwu 2015/9/23 from varchar10 to varchar20
      v_plant                VARCHAR(40);
      v_is_active            VARCHAR(5);
      v_is_cqe               VARCHAR(5);
      v_prd_line             VARCHAR(40);
      n_pulled_qty           DECIMAL(13,3);
      n_priority             DECIMAL(38);
      v_whs_no               VARCHAR(40);
      v_sloc                 VARCHAR(40);
      v_sbin                 VARCHAR(40);
      v_stype                VARCHAR(40);
      v_hld_type             CHAR (1);
      v_pull_type            VARCHAR(20);
      v_mo_type              VARCHAR(3);
      v_owner                NVARCHAR(40);
      v_inv_type             NVARCHAR(40); 
      v_item_type            NVARCHAR(30);
      v_dest_loc             VARCHAR(40);
      v_dest_bin             VARCHAR(40);
      v_dest_type            VARCHAR(40);
      v_line_supplierid       VARCHAR(40);
      v_header_supplierid     VARCHAR(40);
      v_header_id             VARCHAR(40);
      v_date                 TIMESTAMP;
      v_msg                  VARCHAR2 (255);
      n_vendor               NUMBER;
      n_box_size_count       NUMBER;
      n_box_size             NUMBER;
      n_full_box_qty         NUMBER;
      n_remain_qty           NUMBER;
      full_box_flag          VARCHAR (40);
      n_old_remain_qty       NUMBER;
      n_inv                  NUMBER;
      n_row_cnt              NUMBER;                           -- add by cuixz
      max_mo_cycle_cnt       NUMBER;                           -- add by cuixz
      v_pre_no_cut_back      DECIMAL(1);
      -- add by zhaoliang
      v_pre_process_count    DECIMAL(8);
      -- add by zhaoliang
      n_compositor_cnt       NUMBER;                       -- add by zhaoliang
      n_compositor_cur_cnt   NUMBER;                       -- add by zhaoliang
      v_sa_num               VARCHAR2 (255); --2013.07.17 MEX  CSE Project baiying Added
      v_itemdesc             VARCHAR2 (255); --2013.07.17 MEX  CSE Project baiying Added
      v_sa_line_id           VARCHAR2 (5); --2013.07.17 MEX  CSE Project baiying Added
      n_temp_count           NUMBER;
      n_ui_supplier_cnt      NUMBER; 
      
      
      v_inventory_type      NVARCHAR(40);
      v_owner2               NVARCHAR(40);
      v_logical_plant       NVARCHAR(40);
      v_mo_type2             NVARCHAR(40);
      v_storage_location    NVARCHAR(40);
      v_storage_type        NVARCHAR(40);
     

	   gv_sys_source       VARCHAR2 (40) := 'FP';
	   gv_dept             VARCHAR2 (40) := 'SZEBG';     -- updated 2015/8/26 from MEX to SZEBG
	   gv_status           VARCHAR2 (100) := 'IN_PROCESS';
	   
	   v_sysdate  timestamp:=current_timestamp;
	   v_pre_BUILD_ENTITY varchar(12):='';
	   n_on_hold_cnt integer;
	   
	    ms_arr decimal array;
	    be_arr varchar(12) array;
	    vmisq_arr decimal array;
	    i integer;

        v_bom_lifnr_new          VARCHAR(20);     -- add by xwu 2015/9/18
        
BEGIN

       DECLARE no_data_found CONDITION FOR SQL_ERROR_CODE 1299;    --no data found 
       DECLARE more_than_req CONDITION FOR SQL_ERROR_CODE 1300;    --Fetch returns more than requested number of rows /-1427
       
       DECLARE next_mo CONDITION FOR SQL_ERROR_CODE 10000;    --user defined exception for goto next loop;
       DECLARE next_vendor CONDITION FOR SQL_ERROR_CODE 10001;    --user defined exception for goto next loop;
       DECLARE next_loi CONDITION FOR SQL_ERROR_CODE 10002;    --user defined exception for goto next loop;      
       DECLARE next_soi CONDITION FOR SQL_ERROR_CODE 10002;    --user defined exception for goto next loop;   
       
       
   -- exception
  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN  
    on_exitcode := ::SQL_ERROR_CODE;           
        CALL "EX_LOG"."cdp.log.procedures::logProc"
                (I_TYPE=>'PROC_ERROR',I_LOGSID=>:logidi,
                I_EVENT_NAME=>:gv_logic_name||'.'||v_logic_proc_name, I_MODULE=>'SZEBGVMI',
                I_MESSAGE=>'ERROR', I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||
                                        substr(::SQL_ERROR_MESSAGE, 1, 1000) );    
    END; 
    
  -- process logic  
   CALL "EX_LOG"."cdp.log.procedures::logProc"
        (I_TYPE=>'PROC_START',I_LOGSID=>:logidi,
        I_EVENT_NAME=>:gv_logic_name||'.'||v_logic_proc_name,I_MODULE=>'SZEBGVMI'); 
        
  call "cdp.szebgvmi.procedures.pkg_mo_pull::PRC_MO_BOM_UPDATE"();
  call "cdp.szebgvmi.procedures.pkg_mo_pull::PRC_P_DATA_BACKUP"(:v_sysdate);         
  --pre check
  CALL "cdp.szebgvmi.procedures.pkg_mo_pull::PRC_P_MO_PULL_CHECK"(:v_sysdate);         
       
       
      v_line_supplierid := '3PL';
      v_header_supplierid := 'SZA';
      n_qty_sum := 0;
      n_qty_left := 0;
      n_qty_used := 0;
      n_count := 0;
      n_count_rows := 0;

      /*
                                                                                                                                     * ====== ITEM_TYPE Description ======
       * S1: Ship group material(Or puchase)
         SF: Kanban materials
         SD: CandyMan manterials
         S6: Packaging materials(or bulk)
         00: Normal part
      */

      /* Step 1:
                         * Cancel the MOs that exist inactive material(s).
       */
      BEGIN
         -- add by zhaoliang, Date: 2008-12-4
/*         SELECT   pvalue
           INTO   max_mo_cycle_cnt
           FROM   conf_cfg_parameter
          WHERE   pdomain = 'VMI' AND pname = 'MAX_MO_CYCLE_COUNT';
*/
         -- end add

         /* Modify 1:
                                     * Manual MO CR
          * Date: 2008-12-4    Author: zhaoliang
          * Calculate the VMI_SEQ_NUM
          */
        -- n_compositor_cnt := 0;--comment by FangYuan
        -- n_compositor_cur_cnt := 0; --comment by FangYuan

         /*
                                     * compositor 1
          */
      /*   UPDATE   z_pcdw_ds_mo rpt
            SET   rpt.vmi_seq_num =
                     (SELECT   vmi_seq_num
                        FROM   (SELECT   fcility_name,
                                         res_name,
                                         work_ord_num,
                                         seq_num,
                                         ROW_NUMBER ()
                                            OVER (ORDER BY seq_num)
                                            vmi_seq_num
                                  FROM   z_pcdw_ds_mo
                                 WHERE   IFNULL (is_urgent, 99999) = 1
                                         AND status = 'IN_PROCESS') rpt2
                       WHERE       rpt.fcility_name = rpt2.fcility_name
                               AND rpt.res_name = rpt2.res_name
                               AND rpt.work_ord_num = rpt2.work_ord_num
                               AND rpt.seq_num = rpt2.seq_num)
          WHERE   IFNULL (rpt.is_urgent, 99999) = 1
                  AND rpt.status = 'IN_PROCESS';

         SELECT   COUNT (1)
           INTO   n_compositor_cur_cntc
           FROM   z_pcdw_ds_mo
          WHERE   IFNULL (is_urgent, 99999) = 1 AND status = 'IN_PROCESS';

         n_compositor_cnt := n_compositor_cnt + n_compositor_cur_cnt;*/ --comment by FangYuan

         /*
                                     * compositor 2
          */
      /*   UPDATE   z_pcdw_ds_mo rpt
            SET   rpt.vmi_seq_num =
                     (SELECT   vmi_seq_num
                        FROM   (SELECT   fcility_name,
                                         res_name,
                                         work_ord_num,
                                         seq_num,
                                         (ROW_NUMBER ()
                                             OVER (
                                                ORDER BY
                                                   IFNULL (delivery_priority,
                                                        99999),
                                                   seq_num
                                             ))
                                         + n_compositor_cnt
                                            vmi_seq_num
                                  FROM   z_pcdw_ds_mo
                                 WHERE   IFNULL (is_urgent, 99999) <> 1
                                         AND delivery_priority IS NOT NULL
                                         AND IFNULL (delivery_priority, 99999) IN
                                                  (SELECT   delivery_priority
                                                     FROM   ui_nocut_so_priority)
                                         AND status = 'IN_PROCESS') rpt2
                       WHERE       rpt.fcility_name = rpt2.fcility_name
                               AND rpt.res_name = rpt2.res_name
                               AND rpt.work_ord_num = rpt2.work_ord_num
                               AND rpt.seq_num = rpt2.seq_num)
          WHERE   IFNULL (rpt.is_urgent, 99999) <> 1
                  AND rpt.delivery_priority IS NOT NULL
                  AND IFNULL (rpt.delivery_priority, 99999) IN
                           (SELECT   delivery_priority
                              FROM   ui_nocut_so_priority)
                  AND rpt.status = 'IN_PROCESS';

         SELECT   COUNT (1)
           INTO   n_compositor_cur_cnt
           FROM   z_pcdw_ds_mo
          WHERE   IFNULL (is_urgent, 99999) <> 1
                  AND delivery_priority IS NOT NULL
                  AND IFNULL (delivery_priority, 99999) IN
                           (SELECT   delivery_priority
                              FROM   ui_nocut_so_priority)
                  AND status = 'IN_PROCESS';

         n_compositor_cnt := n_compositor_cnt + n_compositor_cur_cnt;*/--comment by FangYuan

         /*
                                     * compositor 3
          */
       /*  UPDATE   z_pcdw_ds_mo rpt
            SET   rpt.vmi_seq_num =
                     (SELECT   vmi_seq_num
                        FROM   (SELECT   fcility_name,
                                         res_name,
                                         work_ord_num,
                                         seq_num,
                                         (ROW_NUMBER ()
                                             OVER (ORDER BY seq_num))
                                         + n_compositor_cnt
                                            vmi_seq_num
                                  FROM   z_pcdw_ds_mo
                                 WHERE   IFNULL (is_urgent, 99999) <> 1
                                         AND IFNULL (delivery_priority, 99999) NOT IN
                                                  (SELECT   delivery_priority
                                                     FROM   ui_nocut_so_priority)
                                         AND status = 'IN_PROCESS') rpt2
                       WHERE       rpt.fcility_name = rpt2.fcility_name
                               AND rpt.res_name = rpt2.res_name
                               AND rpt.work_ord_num = rpt2.work_ord_num
                               AND rpt.seq_num = rpt2.seq_num)
          WHERE   IFNULL (rpt.is_urgent, 99999) <> 1
                  AND IFNULL (rpt.delivery_priority, 99999) NOT IN
                           (SELECT   delivery_priority
                              FROM   ui_nocut_so_priority)
                  AND rpt.status = 'IN_PROCESS';*/ --comment by FangYuan

         /* Modify 2:
                                     * Manual MO CR
          * Date: 2008-12-4    Author: zhaoliang
          * Set no_cut_back = 1
          */
        /* UPDATE   z_pcdw_ds_mo
            SET   no_cut_back = 1
          WHERE   (delivery_priority IN
                         (SELECT   delivery_priority
                            FROM   ui_nocut_so_priority)
                   OR is_urgent = 1)
                  AND status = 'IN_PROCESS';*/ --comment by FangYuan
 
         /* Modify 3 and 4:
                                     * Manual MO CR
          * Date: 2008-12-4    Author: zhaoliang
          * Calculate the new VMI_SEQ_NUM, where status equals ON_HOLD
          */
         --Modified by yuansheng1 MEX ON HOLD MO SR WO0000000075857
         
         /*added by FangYuan*/
         
    --status 'IN_PROCESS', for one WERKS has multiple WORK_ORD_NUM ,choose the latest DS_CREATED_DATE, set others 'IGNORE'
	UPDATE Z_PCDW_DS_MO A
	SET A.STATUS='IGNORE'
	FROM (
    SELECT WERKS,WORK_ORD_NUM,MAX(DS_CREATED_DATE) MAX_DS_CREATED_DATE
    FROM Z_PCDW_DS_MO
    where STATUS='IN_PROCESS'
    GROUP BY WERKS,WORK_ORD_NUM
    HAVING COUNT(*)>1) B
    WHERE A.STATUS='IN_PROCESS' AND A.WERKS=B.WERKS AND A.WORK_ORD_NUM=B.WORK_ORD_NUM
    AND (A.DS_CREATED_DATE IS NULL OR A.DS_CREATED_DATE!=B.MAX_DS_CREATED_DATE); 

    --modify build_entity is null
   update Z_PCDW_MO set BUILD_ENTITY=PRODUCTIONORDID
   where BUILD_ENTITY is null or length(BUILD_ENTITY)=0;
         
   tab_buildentity=
    (select BUILD_ENTITY,MIN(SEQ_NUM) MIN_SEQ from(
    select build_entity,SEQ_NUM from z_pcdw_ds_mo ds ,Z_PCDW_MO  mo 
    where MO.PRODUCTIONORDID=ds.WORK_ORD_NUM and MO.WERKS=ds.WERKS
    and ds.status='IN_PROCESS' and ds.WORK_ORD_NUM LIKE '%00')
    group by BUILD_ENTITY
    order by MIN_SEQ)
    union all
    (select a.build_entity,a.min_seq from
    (select BUILD_ENTITY,MIN(SEQ_NUM) MIN_SEQ from(
    select build_entity,SEQ_NUM from z_pcdw_ds_mo ds ,Z_PCDW_MO  mo 
    where MO.PRODUCTIONORDID=ds.WORK_ORD_NUM and MO.WERKS=ds.WERKS
    and ds.status='IN_PROCESS')
    group by BUILD_ENTITY) a left outer join
    (select BUILD_ENTITY,MIN(SEQ_NUM) MIN_SEQ from(
    select build_entity,SEQ_NUM from z_pcdw_ds_mo ds ,Z_PCDW_MO  mo 
    where MO.PRODUCTIONORDID=ds.WORK_ORD_NUM and MO.WERKS=ds.WERKS
    and ds.status='IN_PROCESS'and ds.WORK_ORD_NUM LIKE '%00')
    group by BUILD_ENTITY) b
    on a.build_entity=b.build_entity and a.min_seq=b.min_seq
    where b.build_entity is null and b.min_seq is null order by min_seq );
    
    ms_arr:=array_agg(:tab_buildentity.min_seq);
    be_arr:=array_agg(:tab_buildentity.build_entity);
    
    vmisq_arr[1]:=:ms_arr[1];
    
    for i in 2..CARDINALITY(:ms_arr) do
       vmisq_arr[:i]:= :vmisq_arr[:i-1]+1;
           
    end for; 
   
    tab_vmiseq=UNNEST(:be_arr,:vmisq_arr) AS ("BUILD_ENTITY","VMI_SEQ"); 
    
    tab_vmiseq2=
    SELECT B.*,a.vmi_seq from 
    :tab_vmiseq a,
    (select build_entity,WORK_ORD_NUM,ds.WERKS from z_pcdw_ds_mo ds ,Z_PCDW_MO  mo 
    where MO.PRODUCTIONORDID=ds.WORK_ORD_NUM and MO.WERKS=ds.WERKS
    and ds.status='IN_PROCESS')b
    where a.build_entity=b.build_entity;
    
    update z_pcdw_ds_mo a set a.vmi_seq_num=b.vmi_seq
    from :tab_vmiseq2 b
    where a.WORK_ORD_NUM=b.WORK_ORD_NUM and a.WERKS=b.WERKS;          
           
         /*added by FangYuan*/
/* ----------------------------------------------------------------
    update by xwu, 2015/8/12
    func: X86_MO_PULL.docx 24.  for asn.      

         SELECT   COUNT (1)
           INTO   n_row_cnt
           FROM   z_pcdw_ds_mo
          WHERE   status = 'RELEASE';

         UPDATE   z_pcdw_ds_mo rpt
            SET   rpt.vmi_seq_num =
                     (SELECT   vmi_seq_num - n_row_cnt - 1
                        FROM   (SELECT   werks,
                                         res_name,
                                         work_ord_num,
                                         seq_num,
                                         ROW_NUMBER ()
                                            OVER (ORDER BY vmi_seq_num)
                                            vmi_seq_num
                                  FROM   z_pcdw_ds_mo
                                 WHERE   status = 'RELEASE') rpt2
                       WHERE       rpt.werks = rpt2.werks
                               AND rpt.res_name = rpt2.res_name
                               AND rpt.work_ord_num = rpt2.work_ord_num
                               AND rpt.seq_num = rpt2.seq_num),
                  status = 'IN_PROCESS'
          WHERE   status = 'RELEASE';
*/-------------------------------------------------------------------

         -- end modify
         -- cancel by yuansheng1 EX ON HOLD MO SR WO0000000075857
         /*
                                    INSERT INTO mid_cancel_mo_line
                     (productionordid, werks, matnr, bomname, mo_type,
                      physical_plant, src_storage_type, src_storage_loc,
                      src_storage_bin, dest_storage_type, dest_storage_loc,
                      dest_storage_bin, pull_type, inventory_type,
                      line_supplierid, header_supplierid, pull_qty, is_cqe,
                      is_active_line, production_line, status, cancel_reason,
                      sys_source, dept)
            SELECT bom.productionordid, bom.werks, matnr, bom.bomname, NULL,
                   NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
                   NULL, NULL, bom.qty, 'N', 'N', NULL, 'IN_PROCESS',
                   --'ITEM_INACTIVE',
                   CASE (itm.mmsta)
                      WHEN '99'
                         THEN 'ITEM_INACTIVE'
                      WHEN '98'
                         THEN 'ITEM_INACTIVE'
                      WHEN '97'
                         THEN 'ITEM_INACTIVE'
                      WHEN '04'
                         THEN 'ITEM_INACTIVE'
                      ELSE ''
                   END,
                   gv_sys_source, gv_dept
              FROM r3_mo_bom bom,
                   z_pcdw_ds_mo upr,
                   mst_itemsitemaster itm,
                   r3_mo mo
             WHERE bom.productionordid = upr.work_ord_num
               AND bom.matnr = itm.item
               AND bom.productionordid = mo.productionordid
               AND bom.bomname = mo.bomname
               AND bom.werks = itm.siteid
               AND bom.werks = mo.werks
               AND UPPER (mo.status) <> 'DELETED'        --Added on 2007-11-19
               AND EXISTS (
                      SELECT bom2.productionordid, bom2.matnr
                        FROM mst_itemsitemaster itm2,
                             z_pcdw_ds_mo upr2,
                             r3_mo_bom bom2
                       WHERE itm2.item = bom2.matnr
                         AND upr2.work_ord_num = bom2.productionordid
                         AND bom2.productionordid = bom.productionordid
                         AND upr2.status = 'IN_PROCESS'
                         AND bom.werks = itm2.siteid
                         --AND bom.werks = bom2.werks
                         AND itm2.mmsta IN ('99', '98', '97', '04'));
                         */
         --end modify  by yuansheng1 EX ON HOLD MO SR WO0000000075857

         INSERT INTO on_hold_mo_line (productionordid,
                                      werks,
                                      bomname,
                                      src_storage_type,
                                      src_storage_loc,
                                      src_storage_bin,
                                      dest_storage_type,
                                      dest_storage_loc,
                                      dest_storage_bin,
                                      pull_type,
                                      inventory_type,
                                      line_supplierid,
                                      header_supplierid,
                                      pull_qty,
                                      is_cqe,
                                      is_active_line,
                                      production_line,
                                      delivery_date,
                                      sys_source,
                                      matnr,
                                      status,
                                      physical_plant,
                                      sys_timestamp,
                                      cancel_reason,
                                      whs_no,
                                      BUILD_ENTITY)
            SELECT   bom.productionordid,
                     bom.werks,
                     bom.bomname,
                     NULL,
                     bom.LOCATION,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     bom.qty,
                     'N',
                     'N',
                     RES_NAME ,--add production line info --comment by FangYuan 
                     NULL,
                     gv_sys_source,
                     matnr,
                     gv_status,
                     NULL,
                     :v_sysdate,
                     CASE (itm.mmsta)
                        WHEN '99' THEN 'ITEM_INACTIVE'
                        WHEN '98' THEN 'ITEM_INACTIVE'
                        WHEN '97' THEN 'ITEM_INACTIVE'
                        WHEN '04' THEN 'ITEM_INACTIVE'
                        ELSE ''
                     END,
                     NULL,
                     BUILD_ENTITY
              FROM   z_pcdw_mo_bom bom,
                     z_pcdw_ds_mo upr,
                     itemsitemaster itm,
                     z_pcdw_mo mo
             WHERE       bom.productionordid = upr.work_ord_num
                     AND bom.matnr = itm.item
                     AND bom.productionordid = mo.productionordid
                     AND bom.bomname = mo.bomname
                     AND bom.werks = itm.siteid
                     AND bom.werks = mo.werks
                     AND UPPER (mo.status) <> 'DELETED'  --Added on 2007-11-19
                     AND upr.status = 'IN_PROCESS' -- added by FangYuan
                     AND EXISTS
                           (SELECT   bom2.productionordid, bom2.matnr
                              FROM   itemsitemaster itm2,
                                     z_pcdw_ds_mo upr2,
                                     z_pcdw_mo_bom bom2
                             WHERE   itm2.item = bom2.matnr
                                     AND upr2.work_ord_num =
                                           bom2.productionordid
                                     AND bom2.productionordid =
                                           bom.productionordid
                                     AND upr2.status = 'IN_PROCESS'
                                     AND bom.werks = itm2.siteid
                                     --AND bom.werks = bom2.werks
                                     AND itm2.mmsta IN
                                              ('99', '98', '97', '04'));                  
     END;
     
      /* Step 2:
                                                                                                                      * Cancel the MOs which MO BOM Item qtyper is not multiple of MO qty (this should be data issue)
       * when ItemType is NORMAL or SHIPPING.
      */
      BEGIN
         -- cancel by yuansheng1 EX ON HOLD MO SR WO0000000075857
         /*
                          INSERT INTO mid_cancel_mo_line (productionordid,
                                        werks,
                                        matnr,
                                        bomname,
                                        mo_type,
                                        physical_plant,
                                        src_storage_type,
                                        src_storage_loc,
                                        src_storage_bin,
                                        dest_storage_type,
                                        dest_storage_loc,
                                        dest_storage_bin,
                                        pull_type,
                                        inventory_type,
                                        line_supplierid,
                                        header_supplierid,
                                        pull_qty,
                                        is_cqe,
                                        is_active_line,
                                        production_line,
                                        status,
                                        cancel_reason,
                                        sys_source,
                                        dept)
           SELECT   bom.productionordid,
                    bom.werks,
                    matnr,
                    bom.bomname,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    bom.qty,
                    'N',
                    'N',
                    NULL,
                    'IN_PROCESS',
                    '',
                    --'NOT_MULTIPLE',
                    gv_sys_source,
                    gv_dept
             FROM   r3_mo_bom bom, z_pcdw_ds_mo upr, r3_mo mo
            WHERE       bom.productionordid = upr.work_ord_num
                    AND bom.productionordid = mo.productionordid
                    AND bom.bomname = mo.bomname
                    AND bom.werks = mo.werks
                    AND upr.status = 'IN_PROCESS'
                    AND UPPER (mo.status) <> 'DELETED'  --Added on 2007-11-19
                    AND bom.productionordid IN
                             (SELECT   DISTINCT productionordid
                                FROM   (SELECT   bom2.productionordid
                                                    productionordid,
                                                 bom2.matnr matnr,
                                                 mo2.qty mo_qty,
                                                 SUM(bom2.qty)
                                                    OVER (
                                                       PARTITION BY bom2.productionordid,
                                                                    bom2.matnr
                                                    )
                                                    sum_bom_qty
                                          FROM   r3_mo_bom bom2,
                                                 r3_mo mo2,
                                                 mst_itemsitemaster itm2,
                                                 z_pcdw_ds_mo upr2
                                         WHERE   bom2.productionordid =
                                                    mo2.productionordid
                                                 AND upr2.work_ord_num =
                                                       bom2.productionordid
                                                 AND bom2.matnr = itm2.item
                                                 AND bom2.werks =
                                                       itm2.siteid
                                                 AND itm2.ud_back_flush =
                                                       '1'
                                                 AND itm2.ud_storage_condition IN
                                                          (SELECT   DISTINCT
                                                                    material_code
                                                             FROM   ud_material_map
                                                            WHERE   material_type IN
                                                                          ('NORMAL')
                                                                    AND status =
                                                                          'ACTIVE'))
                                       tmp
                               WHERE   MOD (sum_bom_qty, mo_qty) > 0)
                    AND bom.productionordid IN
                             (SELECT   work_ord_num
                                FROM   z_pcdw_ds_mo
                               WHERE   status = 'IN_PROCESS');
                               */
         -- end modify by yuansheng1 MEX ON HOLD MO SR WO0000000075857

         INSERT INTO on_hold_mo_line (productionordid,
                                      werks,
                                      bomname,
                                      src_storage_type,
                                      src_storage_loc,
                                      src_storage_bin,
                                      dest_storage_type,
                                      dest_storage_loc,
                                      dest_storage_bin,
                                      pull_type,
                                      inventory_type,
                                      line_supplierid,
                                      header_supplierid,
                                      pull_qty,
                                      is_cqe,
                                      is_active_line,
                                      production_line,
                                      delivery_date,
                                      sys_source,
                                      matnr,
                                      status,
                                      physical_plant,
                                      sys_timestamp,
                                      cancel_reason,
                                      whs_no,
                                      BUILD_ENTITY)
            SELECT   bom.productionordid,
                     bom.werks,
                     bom.bomname,
                     NULL,
                     bom.location,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     NULL,
                     bom.qty,
                     'N',
                     'N',
                     RES_NAME ,--add production line info --comment by FangYuan 
                     NULL,
                     gv_sys_source,
                     matnr,
                     gv_status,
                     NULL,
                     :v_sysdate,
                     '',
                     NULL,
                     BUILD_ENTITY
              FROM   z_pcdw_mo_bom bom, z_pcdw_ds_mo upr, z_pcdw_mo mo
             WHERE       bom.productionordid = upr.work_ord_num
                     AND bom.productionordid = mo.productionordid
                     AND bom.bomname = mo.bomname
                     AND bom.werks = mo.werks
                     AND upr.status = 'IN_PROCESS'
                     AND UPPER (mo.status) <> 'DELETED'  --Added on 2007-11-19
                     AND bom.productionordid IN
                              (SELECT   DISTINCT productionordid
                                 FROM   (SELECT   bom2.productionordid
                                                     productionordid,
                                                  bom2.matnr matnr,
                                                  mo2.qty mo_qty,
                                                  SUM(bom2.qty)
                                                     OVER (
                                                        PARTITION BY bom2.productionordid,
                                                                     bom2.matnr
                                                     )
                                                     sum_bom_qty
                                           FROM   z_pcdw_mo_bom bom2,
                                                  z_pcdw_mo mo2,
                                                  itemsitemaster itm2,
                                                  z_pcdw_ds_mo upr2
                                          WHERE   bom2.productionordid =  mo2.productionordid
                                                  AND upr2.work_ord_num = bom2.productionordid
                                                  AND bom2.matnr = itm2.item
                                                  AND bom2.werks = itm2.siteid
                                                  AND upr2.status = 'IN_PROCESS' --added by FangYuan
                                                  AND itm2.ud_back_flush =  '1'
                                                  AND itm2.ud_storage_condition IN
                                                           (SELECT   DISTINCT
                                                                     material_code
                                                              FROM   conf_material_map
                                                             WHERE   material_type IN ('NORMAL')
                                                                     AND status = 'ACTIVE'))
                                        tmp
                                WHERE   MOD (sum_bom_qty, mo_qty) > 0)
                     AND bom.productionordid IN
                              (SELECT   work_ord_num
                                 FROM   z_pcdw_ds_mo
                                WHERE   status = 'IN_PROCESS');

         --Update CANCEL_REASON for those NOT_MULTIPLE items
         UPDATE   ON_HOLD_MO_LINE -- MODIFY BY yuansheng1 MEX ON HOLD MO SR WO0000000075857
            SET   cancel_reason = 'NOT_MULTIPLE'
          WHERE   (productionordid, matnr) IN
                        (SELECT   DISTINCT productionordid, matnr
                           FROM   (SELECT   bom2.productionordid
                                               productionordid,
                                            bom2.matnr matnr,
                                            mo2.qty mo_qty,
                                            SUM(bom2.qty)
                                               OVER (
                                                  PARTITION BY bom2.productionordid,
                                                               bom2.matnr
                                               )
                                               sum_bom_qty
                                     FROM   z_pcdw_mo_bom bom2,
                                            z_pcdw_mo mo2,
                                            itemsitemaster itm2,
                                            z_pcdw_ds_mo upr2
                                    WHERE   bom2.productionordid =
                                               mo2.productionordid
                                            AND upr2.work_ord_num =
                                                  bom2.productionordid
                                            AND bom2.matnr = itm2.item
                                            AND bom2.werks = itm2.siteid
                                            AND itm2.ud_back_flush = '1'
                                            AND upr2.status = 'IN_PROCESS' --2011.03.09  baiying  PB201103030001
                                            AND itm2.ud_storage_condition IN
                                                     (SELECT   DISTINCT
                                                               material_code
                                                        FROM   conf_material_map
                                                       WHERE   material_type IN
                                                                     ('NORMAL')
                                                               AND status =
                                                                     'ACTIVE'))
                                  tmp
                          WHERE   MOD (sum_bom_qty, mo_qty) > 0);
      --AND productionordid IN (SELECT work_ord_num                     --2011.03.09  baiying  PB201103030001
      --                          FROM z_pcdw_ds_mo
      --                         WHERE status = 'IN_PROCESS');
      END;     

    INSERT INTO on_hold_mo_line (productionordid,--added by FangYuan
                             werks,
                             bomname,
                             src_storage_type,
                             src_storage_loc,
                             src_storage_bin,
                             dest_storage_type,
                             dest_storage_loc,
                             dest_storage_bin,
                             pull_type,
                             inventory_type,
                             line_supplierid,
                             header_supplierid,
                             pull_qty,
                             is_cqe,
                             is_active_line,
                             production_line,
                             delivery_date,
                             sys_source,
                             matnr,
                             status,
                             physical_plant,
                             sys_timestamp,
                             cancel_reason,
                             whs_no,
                             BUILD_ENTITY)
   SELECT bom.productionordid,
          bom.werks,
          bom.bomname,
          NULL,
          bom.LOCATION,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          bom.qty,
          'N',
          'N',
          NULL,
          NULL,
          gv_sys_source,
          matnr,
          gv_status,
          NULL,
          :v_sysdate,
          CASE (itm.mmsta)
             WHEN '99' THEN 'ITEM_INACTIVE'
             WHEN '98' THEN 'ITEM_INACTIVE'
             WHEN '97' THEN 'ITEM_INACTIVE'
             WHEN '04' THEN 'ITEM_INACTIVE'
             ELSE 'BUILD_ENTITY_ITEM_INACTIVE'
          END,
          NULL,
          mo.BUILD_ENTITY
     FROM Z_PCDW_MO_BOM bom,
          Z_PCDW_MO mo,
          itemsitemaster itm,
          z_pcdw_ds_mo upr
    WHERE     bom.productionordid = upr.work_ord_num
          AND bom.matnr = itm.item
          AND bom.productionordid = mo.productionordid
          AND bom.bomname = mo.bomname
          AND bom.werks = itm.siteid
          AND bom.werks = mo.werks
          AND upr.status = 'IN_PROCESS'
          AND UPPER (mo.status) <> 'DELETED'
          AND (bom.productionordid, bom.werks) IN (SELECT productionordid,
                                                          werks
                                                     FROM z_pcdw_mo
                                                    WHERE (BUILD_ENTITY,
                                                           WERKS) IN (SELECT BUILD_ENTITY,
                                                                             WERKS
                                                                        FROM on_hold_mo_line
                                                                       WHERE     sys_timestamp =
                                                                                    v_sysdate
                                                                             AND status =
                                                                                    'IN_PROCESS' AND cancel_reason IN ('ITEM_INACTIVE')))
          AND (bom.productionordid, bom.werks) NOT IN (SELECT productionordid,
                                                              WERKS
                                                         FROM on_hold_mo_line
                                                        WHERE     sys_timestamp =
                                                                     v_sysdate
                                                              AND status =
                                                                     'IN_PROCESS');
                                                                     
                                                                     
    INSERT INTO on_hold_mo_line (productionordid,--added by FangYuan
                             werks,
                             bomname,
                             src_storage_type,
                             src_storage_loc,
                             src_storage_bin,
                             dest_storage_type,
                             dest_storage_loc,
                             dest_storage_bin,
                             pull_type,
                             inventory_type,
                             line_supplierid,
                             header_supplierid,
                             pull_qty,
                             is_cqe,
                             is_active_line,
                             production_line,
                             delivery_date,
                             sys_source,
                             matnr,
                             status,
                             physical_plant,
                             sys_timestamp,
                             cancel_reason,
                             whs_no,
                             BUILD_ENTITY)
   SELECT bom.productionordid,
          bom.werks,
          bom.bomname,
          NULL,
          bom.location,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          bom.qty,
          'N',
          'N',
          NULL,
          NULL,
          gv_sys_source,
          matnr,
          gv_status,
          NULL,
          v_sysdate,
          'BUILD_ENTITY_NOT_MULTIPLE',
          NULL,
          mo.BUILD_ENTITY
     FROM Z_PCDW_MO_BOM bom, z_pcdw_ds_mo upr, Z_PCDW_MO mo
    WHERE     bom.productionordid = upr.work_ord_num
          AND bom.productionordid = mo.productionordid
          AND bom.bomname = mo.bomname
          AND bom.werks = mo.werks
          AND upr.status = 'IN_PROCESS'
          AND UPPER (mo.status) <> 'DELETED'
          AND (bom.productionordid, bom.werks) IN (SELECT productionordid,
                                                          werks
                                                     FROM z_pcdw_mo
                                                    WHERE (BUILD_ENTITY,
                                                           WERKS) IN (SELECT BUILD_ENTITY,
                                                                             WERKS
                                                                        FROM on_hold_mo_line
                                                                       WHERE     sys_timestamp =
                                                                                    v_sysdate
                                                                             AND status =
                                                                                    'IN_PROCESS'
                                                                             AND cancel_reason IN ('NOT_MULTIPLE')))
          AND (bom.productionordid, bom.werks) NOT IN (SELECT productionordid,
                                                              WERKS
                                                         FROM on_hold_mo_line
                                                        WHERE     sys_timestamp =
                                                                     v_sysdate
                                                              AND status =
                                                                     'IN_PROCESS');


      /* Step 3:
                         * Loop each MO BOM Item to generate pulls, or cancel MO.
       */ 
      BEGIN
      DECLARE CURSOR cur_step3 FOR 
      (  SELECT   mo.productionordid mo_id,
                     mo.bomname bomname,
                     mo.mo_type mo_type,
                     mo.qty mo_qty,
                     itm.ud_storage_condition item_type,
                     upr.res_name production_line,
                     mo.releasedate releasedate,
                     bom.itemcategory itemcategory,
                     bom.werks werks,
                     bom.matnr matnr,
                     bom.qty qty,
                     bom.LOCATION storage_location,
                     flr.physical_plant physical_plant,
                     bom.remark remark,
                     bom.vendor lifnr,
                     bom.posnr,
                     upr.no_cut_back,
                     upr.process_count,
                     mo.BUILD_ENTITY 
              -- modify by cuixz, add no_cut_back process_count
              FROM   z_pcdw_mo mo,
                     z_pcdw_mo_bom bom,
                     itemsitemaster itm,
                     z_pcdw_ds_mo upr,
                     ui_line_floor_mapping flr
             WHERE       bom.productionordid = mo.productionordid
                     AND bom.bomname = mo.bomname
                     AND bom.matnr = itm.item
                     AND bom.werks = itm.siteid
                     AND upr.res_name = flr.ds_line
                     AND bom.werks = flr.sys_auth_id
                     AND upr.work_ord_num = bom.productionordid
                     AND upr.status = 'IN_PROCESS'
                     AND UPPER (mo.status) <> 'DELETED'  --Added on 2007-11-19
                     AND ( (bom.LOCATION IS NOT NULL
                            AND itm.ud_back_flush = '1'
                            AND itm.ud_storage_condition IN
                                     (SELECT   DISTINCT material_code
                                        FROM   conf_material_map
                                       WHERE   material_type IN ('NORMAL')
                                               AND status = 'ACTIVE')
                            AND bom.productionordid NOT IN
                                     (SELECT   productionordid
                                        FROM   (SELECT   bom2.productionordid
                                                            productionordid,
                                                         bom2.matnr matnr,
                                                         mo2.qty mo_qty,
                                                         SUM(bom2.qty)
                                                            OVER (
                                                               PARTITION BY bom2.productionordid,
                                                                            bom2.matnr
                                                            )
                                                            sum_bom_qty
                                                  FROM   z_pcdw_mo_bom bom2,
                                                         z_pcdw_mo mo2,
                                                         itemsitemaster itm2,
                                                         z_pcdw_ds_mo upr2
                                                 WHERE   bom2.productionordid =
                                                            mo2.productionordid
                                                         AND upr2.work_ord_num =   bom2.productionordid
                                                         AND bom2.matnr = itm2.item
                                                         AND bom2.werks =  itm2.siteid
                                                         AND mo2.werks = itm2.siteid
                                                         AND itm2.ud_back_flush = '1'
                                                         AND upr2.status = 'IN_PROCESS' --added by FangYuan
                                                         AND itm2.ud_storage_condition IN
                                                                  (SELECT   DISTINCT
                                                                            material_code
                                                                     FROM   conf_material_map
                                                                    WHERE   material_type IN
                                                                                  ('NORMAL')
                                                                            AND status =
                                                                                  'ACTIVE'))
                                               tmp
                                       WHERE   MOD (sum_bom_qty, mo_qty) > 0))
                          OR itm.ud_storage_condition IN
                                  (SELECT   DISTINCT material_code
                                     FROM   conf_material_map
                                    WHERE   material_type IN
                                                  ('CANDYMAN',
                                                   'KANBAN',
                                                   'PACKAGING')
                                            AND status = 'ACTIVE'))
                     AND bom.qty > 0
                     AND NOT EXISTS
                           (SELECT   'x'
                              FROM   mid_mo_line mid
                             WHERE   mid.productionordid = bom.productionordid
                                     AND mid.matnr = bom.matnr)
                     AND NOT EXISTS
                           (SELECT   'x'
                              FROM   mid_cancel_mo_line mid
                             WHERE   mid.productionordid = bom.productionordid
                                     AND mid.matnr = bom.matnr)
                     AND NOT EXISTS
                           (SELECT   bom2.matnr
                              FROM   itemsitemaster itm2,
                                     z_pcdw_mo_bom bom2,
                                     z_pcdw_ds_mo upr2
                             WHERE   itm2.item = bom2.matnr --AND bom.matnr = bom2.matnr
                                     AND bom2.werks = itm.siteid
                                     AND upr2.work_ord_num =
                                           bom2.productionordid
                                     AND bom2.productionordid =
                                           bom.productionordid
                                     AND bom.werks = itm2.siteid
                                     AND upr2.status = 'IN_PROCESS'
                                     AND itm2.mmsta IN ('99', '98', '97', '04'))
                     AND (upr.WORK_ORD_NUM , upr.werks) NOT IN (SELECT productionordid , werks --added by FangYuan 
                                          FROM z_pcdw_mo
                                         WHERE (BUILD_ENTITY, WERKS) IN (SELECT BUILD_ENTITY, WERKS
                                                                           FROM on_hold_mo_line 
                                                                          WHERE sys_timestamp = v_sysdate
                                                                                AND status = 'IN_PROCESS'))
          ORDER BY   upr.vmi_seq_num,
                     upr.WORK_ORD_NUM --added by FangYuan
                     -- Modify 7:
                     -- Manual MO CR sort by VMI_SEQ_NUM instead of SEQ_NUM
                     /*mo_id,
                     bomname,
                     werks,
                     matnr */); --comment by FangYuan 
      FOR cur_mo as cur_step3
      DO
      DECLARE EXIT HANDLER FOR NEXT_MO
      BEGIN
         v_pre_mo_id := cur_mo.mo_id;
         v_pre_BUILD_ENTITY := cur_mo.BUILD_ENTITY; --add by FangYuan
         --v_pre_no_cut_back := IFNULL (cur_mo.no_cut_back, 0); -- add by zhaoliang --comment by FangYuan
         --v_pre_process_count := IFNULL (cur_mo.process_count, 0); -- add by zhaoliang --comment by FangYuan
         n_count_rows := n_count_rows + 1;    
           
      END;
      
         v_line_supplierid := '3PL';
         v_header_supplierid := 'SZA';
         v_is_active := 'Y';
         n_qty_left := 0;

         --remove by sky 20080819
         --moved the calculating proportion logic here by wenfei
         /*INSERT INTO mid_mo_bom
                                                (productionordid,
                      matnr,
                      qty_per,
                      werks
                     )
            SELECT cur_mo.mo_id,
                   cur_mo.matnr,
                   cur_mo.qty / cur_mo.mo_qty,
                   cur_mo.werks
              FROM DUAL
             WHERE NOT EXISTS (SELECT 'x'
                                 FROM mid_mo_bom
                                WHERE productionordid = cur_mo.mo_id
                                  AND matnr = cur_mo.matnr);
         IF SQL%ROWCOUNT = 0
         THEN
            UPDATE mid_mo_bom mb
               SET mb.qty_per = cur_mo.qty / cur_mo.mo_qty
             WHERE mb.productionordid = v_mo_id
               AND mb.matnr = v_matnr
               AND mb.werks = v_werks;
         END IF;*/
         IF (v_pre_mo_id <> cur_mo.mo_id)
         THEN
            /* Step 3.1:
                                        * MO cancellation. This code will be triggered when loop is going to process a new MO.
             * It check if the previous MO processed need to be cancelled or not.
             * If cancellation is needed, the Inventory and Full BOX status need to be recovered.
             */
            IF (v_cancel_flag = 'Y')
            THEN   --Need to cancel the previous MO due to insufficient supply
               BEGIN
                  /* Modify 8 - 1:
                                                               * Manual MO CR
               * Date: 2008-12-4    Author: zhaoliang
               * where MO has NO_CUT_BACK = 1 and process_count < MAX_MO_CYCLE_COUNT-1,
               * move the records to on_hold_mo_line
               */
               --2014.08.20 WO0000000075857 yuansheng1 added AB
                  BEGIN
                     DECLARE EXIT HANDLER FOR  no_data_found
                     BEGIN
                        n_ui_supplier_cnt := -1;
                     END;
                     n_ui_supplier_cnt := 0;

                     SELECT   COUNT (1)
                       INTO   n_ui_supplier_cnt
                       FROM   mid_supplier_priority
                      WHERE   (MATNR, WERKS, LIFNR) IN
                                    (SELECT   DISTINCT
                                              MATNR, WERKS, LINE_SUPPLIERID
                                       FROM   mid_mo_line mo
                                      WHERE   mo.productionordid =
                                                 v_pre_mo_id
                                              AND mo.inventory_type = 'SOI'
                                              AND mo.pull_type = 'NORMAL'
                                              AND mo.pull_qty < 0);

                  END;
                  
                  --2014.08.20 WO0000000075857 yuansheng1 added AB
                /*
                  IF (ifnull(v_pre_process_count, 0) < max_mo_cycle_cnt)       --NVL (v_pre_no_cut_back, 0) 2014.08.20 WO0000000075857 yuansheng1 added AB

                  THEN*/ --comment by FangYuan
                     INSERT INTO on_hold_mo_line (productionordid,
                                                  werks,
                                                  bomname,
                                                  src_storage_type,
                                                  src_storage_loc,
                                                  src_storage_bin,
                                                  dest_storage_type,
                                                  dest_storage_loc,
                                                  dest_storage_bin,
                                                  pull_type,
                                                  inventory_type,
                                                  line_supplierid,
                                                  header_supplierid,
                                                  pull_qty,
                                                  is_cqe,
                                                  is_active_line,
                                                  production_line,
                                                  delivery_date,
                                                  sys_source,
                                                  matnr,
                                                  status,
                                                  physical_plant,
                                                  sys_timestamp,
                                                  cancel_reason,
                                                  whs_no,
                                                  BUILD_ENTITY)
                        SELECT   mo.productionordid,
                                 mo.werks,
                                 mo.bomname,
                                 mo.src_storage_type,
                                 mo.src_storage_loc,
                                 mo.src_storage_bin,
                                 mo.dest_storage_type,
                                 mo.dest_storage_loc,
                                 mo.dest_storage_bin,
                                 mo.pull_type,
                                 mo.inventory_type,
                                 mo.line_supplierid,
                                 mo.header_supplierid,
                                 mo.pull_qty,
                                 mo.is_cqe,
                                 mo.is_active_line,
                                 mo.production_line,
                                 mo.delivery_date,
                                 mo.sys_source,
                                 mo.matnr,
                                 NULL,
                                 mo.physical_plant,
                                 v_sysdate,
                                     CASE
                                    WHEN mo.pull_qty < 0
                                         AND (    mo.pull_type = 'NORMAL'
                                              AND mo.inventory_type = 'SOI'
                                              AND n_ui_supplier_cnt = 0)   --2014.08.20 WO0000000075857 yuansheng1 added AB
                                    THEN
                                       'INVENTORY_SHORT'    -- changed NO_SUPPLIER_MAPPING  --> INVENTORY_SHORT by xwu 2016/3/3
                                    WHEN     mo.pull_qty < 0
                                         AND mo.pull_type = 'NORMAL'
                                         AND n_box_size > 0
                                    THEN
                                       'FULL_BOX_SIZE_INVENTORY_SHORT'
                                    WHEN mo.pull_qty < 0
                                    THEN
                                       'INVENTORY_SHORT'
                                    ELSE
                                       ''
                                 END,
                                 mo.whs_no,
                                 BUILD_ENTITY
                          FROM   mid_mo_line mo
                         WHERE   mo.productionordid = v_pre_mo_id;
                  /*
                  ELSE
                     UPDATE   inventory i
                        SET   qty_available = qty_init,
                              qty_consumed =
                                 qty_consumed - (qty_init - qty_available)
                      WHERE   (matnr,
                               werks,
                               storage_location,
                               storage_type,
                               storage_bin,
                               MAP (lifnr, 'NONE', '3PL', lifnr)) IN
                                    (SELECT   matnr,
                                              werks,
                                              src_storage_loc,
                                              src_storage_type,
                                              src_storage_bin,
                                              line_supplierid
                                       FROM   mid_mo_line m
                                      WHERE   m.productionordid = v_pre_mo_id)
                              AND hold_type = 'A';                  

                     UPDATE   full_box_remain f
                        SET   remain_qty = old_remain_qty
                      WHERE   EXISTS
                                 (SELECT   1
                                    FROM   mid_mo_line m
                                   WHERE   f.matnr = m.matnr
                                           AND f.werks = m.werks
                                           AND f.src_storage_loc =
                                                 m.src_storage_loc
                                           AND f.src_storage_type =
                                                 m.src_storage_type
                                           AND f.src_storage_bin =
                                                 m.src_storage_bin
                                           AND f.production_line =
                                                 m.production_line
                                           AND f.line_supplierid =
                                                 m.line_supplierid
                                           AND m.productionordid =
                                                 v_pre_mo_id);

                     DELETE FROM   full_box_remain
                           WHERE   remain_qty <= 0;

                     INSERT INTO mid_cancel_mo_line (productionordid,
                                                     werks,
                                                     matnr,
                                                     bomname,
                                                     mo_type,
                                                     physical_plant,
                                                     src_storage_type,
                                                     src_storage_loc,
                                                     src_storage_bin,
                                                     dest_storage_type,
                                                     dest_storage_loc,
                                                     dest_storage_bin,
                                                     pull_type,
                                                     inventory_type,
                                                     line_supplierid,
                                                     header_supplierid,
                                                     pull_qty,
                                                     is_cqe,
                                                     is_active_line,
                                                     production_line,
                                                     cancel_reason,
                                                     sys_source,
                                                     dept,
                                                     whs_no)
                        SELECT   productionordid,
                                 werks,
                                 matnr,
                                 bomname,
                                 mo_type,
                                 physical_plant,
                                 src_storage_type,
                                 src_storage_loc,
                                 src_storage_bin,
                                 dest_storage_type,
                                 dest_storage_loc,
                                 dest_storage_bin,
                                 pull_type,
                                 inventory_type,
                                 line_supplierid,
                                 header_supplierid,
                                 pull_qty,
                                 is_cqe,
                                 is_active_line,
                                 production_line,
                                 CASE
                                    WHEN pull_qty < 0 THEN 'INVENTORY_SHORT'
                                    ELSE ''
                                 END,
                                 sys_source,
                                 dept,
                                 whs_no
                          FROM   mid_mo_line
                         WHERE   productionordid = v_pre_mo_id;
                  END IF;*/ --comment by FangYuan
                                    
                  -- end modify
                  DELETE FROM   mid_mo_line
                        WHERE   productionordid = v_pre_mo_id;

                   logidj:=0;
                   CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'MO ['
                                || v_pre_mo_id
                                || '] was canceled due to insufficient supply!');  
 
                  v_cancel_flag := 'N';
               END;
            END IF;

           /* Step 3.2:
                                                                                        * Output log if inventory qty available <0.
             */
            SELECT   COUNT (1)
              INTO   n_inv
              FROM   inventory
             WHERE   qty_available < 0;

            IF n_inv > 0
            THEN

                   logidj:=0;
                   CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'MO [' || v_pre_mo_id || '] invnetory is less 0');  
                                
            END IF;            
            
            /* Step 3.3:
                                                                               * Set INVENTORY.QTY_INIT and FULL_BOX_REMAIN.OLD_REMAIN_QTY.
             */
           /* UPDATE   inventory i
               SET   qty_init = qty_available
             WHERE   EXISTS
                        (SELECT   1
                           FROM   z_pcdw_mo_bom m
                          WHERE       i.matnr = m.matnr
                                  AND i.werks = m.werks
                                  AND i.storage_location = m.LOCATION
                                  AND m.productionordid = cur_mo.mo_id)
                     AND hold_type = 'A';

            UPDATE   full_box_remain f
               SET   old_remain_qty = remain_qty
             WHERE   EXISTS
                        (SELECT   1
                           FROM   z_pcdw_mo_bom m
                          WHERE       m.matnr = f.matnr
                                  AND m.werks = f.werks
                                  AND m.productionordid = cur_mo.mo_id);*/ --comment by FangYuan
         END IF;

		IF v_pre_BUILD_ENTITY <> cur_mo.BUILD_ENTITY AND v_pre_BUILD_ENTITY<>'' then --added by FangYuan 
		  SELECT count(1) into n_on_hold_cnt 
		  from on_hold_mo_line where sys_timestamp=v_sysdate and BUILD_ENTITY = v_pre_BUILD_ENTITY;
		  
		  IF n_on_hold_cnt>0 then  
		
		      INSERT INTO on_hold_mo_line (productionordid,
		                             werks,
		                             bomname,
		                             src_storage_type,
		                             src_storage_loc,
		                             src_storage_bin,
		                             dest_storage_type,
		                             dest_storage_loc,
		                             dest_storage_bin,
		                             pull_type,
		                             inventory_type,
		                             line_supplierid,
		                             header_supplierid,
		                             pull_qty,
		                             is_cqe,
		                             is_active_line,
		                             production_line,
		                             delivery_date,
		                             sys_source,
		                             matnr,
		                             status,
		                             physical_plant,
		                             sys_timestamp,
		                             cancel_reason,
		                             whs_no,
		                             BUILD_ENTITY)
		   SELECT mo.productionordid,
		          mo.werks,
		          mo.bomname,
		          mo.src_storage_type,
		          mo.src_storage_loc,
		          mo.src_storage_bin,
		          mo.dest_storage_type,
		          mo.dest_storage_loc,
		          mo.dest_storage_bin,
		          mo.pull_type,
		          mo.inventory_type,
		          mo.line_supplierid,
		          mo.header_supplierid,
		          mo.pull_qty,
		          mo.is_cqe,
		          mo.is_active_line,
		          mo.production_line,
		          mo.delivery_date,
		          mo.sys_source,
		          mo.matnr,
		          NULL,
		          mo.physical_plant,
		          v_sysdate,
		          'BUILD_ENTITY_INVENTORY_SHORT',
		          mo.whs_no,
		          mo.BUILD_ENTITY
		     FROM mid_mo_line mo
		    WHERE mo.BUILD_ENTITY = v_pre_BUILD_ENTITY AND sys_timestamp = v_sysdate;
		    
              DELETE FROM   mid_mo_line a
              WHERE BUILD_ENTITY=v_pre_BUILD_ENTITY and sys_timestamp=v_sysdate;           
            --truncate full_box_remain;              
            --insert into  full_box_remain                       
            --select * from full_box_remain_copy;

            END IF;
        END IF;

        
         
         v_mo_id := cur_mo.mo_id;
         v_mo_type := cur_mo.mo_type;
         v_bomname := cur_mo.bomname;
         v_matnr := cur_mo.matnr;
         v_werks := cur_mo.werks;
         n_qty := cur_mo.qty;
         v_sloc := cur_mo.storage_location;
         v_item_type := cur_mo.item_type;
         v_prd_line := cur_mo.production_line;
         v_plant := cur_mo.physical_plant;
         v_msg := 'PRODUCTION_LINE=' || v_prd_line;
         v_msg := v_msg || ', PHYSICAL_PLANT=' || v_plant;
         v_bom_lifnr := cur_mo.lifnr; 
         
         --  DBMS_OUTPUT.PUT_LINE(V_MSG);

         /* Step 3.4:
                                     * Set PullType by ItemType.
          */
         BEGIN
         
         DECLARE EXIT HANDLER FOR NO_DATA_FOUND  --no MO Lines
         BEGIN
            --NULL
         END;
         DECLARE EXIT HANDLER FOR SQLEXCEPTION-- Consider logging the error
         BEGIN
               --n_sqlcode := ::SQL_ERROR_CODE;
              -- v_sqlerrm := SUBSTR (::SQL_ERROR_MESSAGE, 1, 512);
               -- dbms_output.put_line(SQLERRM);
               /* comment by xwu 2016/3/3 
               logidj:=0;
               CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'Cur_MO:' || cur_mo.werks || '_' || cur_mo.matnr,
                     I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||SUBSTR(::SQL_ERROR_MESSAGE,1,512));  
                 */
                 
         END;         
         
            IF (v_item_type = 'CM')
            THEN
               v_pull_type := 'CANDYMAN';
            ELSEIF (v_item_type = 'KB')
            THEN
               v_pull_type := 'KANBANREPORT';
            ELSEIF (v_item_type = 'PG')
            THEN
               v_pull_type := 'PACKAGING';
            ELSE
               v_pull_type := 'NORMAL';
            END IF;

            /* Step 3.5:
                                        * Generate pulls for different ItemType. Two switches:
             * 1. CANDYMAN/KANBAN/PACKAGING ItemType
             * 2. NORMAL ItemType
             */
            IF (   v_item_type = 'CM'
                OR v_item_type = 'KB'
                OR v_item_type = 'PG')
            /* 1. CANDYMAN/KANBAN/PACKAGING ItemType */
            THEN
               INSERT INTO mid_mo_line (productionordid,
                                        werks,
                                        matnr,
                                        bomname,
                                        mo_type,
                                        physical_plant,
                                        src_storage_type,
                                        src_storage_loc,
                                        src_storage_bin,
                                        dest_storage_type,
                                        dest_storage_loc,
                                        dest_storage_bin,
                                        pull_type,
                                        inventory_type,
                                        line_supplierid,
                                        header_supplierid,
                                        pull_qty,
                                        is_cqe,
                                        is_active_line,
                                        production_line,
                                        sys_source,
                                        dept,
                                        remark,
                                        posnr,
                                        BUILD_ENTITY,
                                        sys_timestamp)
                 VALUES   (v_mo_id,
                           v_werks,
                           v_matnr,
                           cur_mo.bomname,
                           cur_mo.mo_type,
                           v_plant,
                           'DUMMY',
                           'DUMMY',
                           'DUMMY',
                           'DUMMY',
                           'DUMMY',
                           'DUMMY',
                           v_pull_type,
                           'SOI',
                           '3PL',
                           'SZA',
                           n_qty,
                           'N',
                           'Y',
                           v_prd_line,
                           gv_sys_source,
                           gv_dept,
                           cur_mo.remark,
                           cur_mo.posnr,
                           cur_mo.BUILD_ENTITY,
                           :v_sysdate);

               /*************************************************************************/
               /*Add it by Sky at 20080116 for make sure header_supplierid is SZA*/
               /*************************************************************************/
               UPDATE   mid_mo_line
                  SET   header_supplierid =
                           (SELECT   DISTINCT owner
                              FROM   ui_sourcing_priority
                             WHERE       logical_plant = v_werks
                                     AND storage_type = 'DUMMY'
                                     AND storage_location = 'DUMMY'),
                        whs_no =
                           (SELECT   DISTINCT warehouse_number
                              FROM   ui_sourcing_priority
                             WHERE       logical_plant = v_werks
                                     AND storage_type = 'DUMMY'
                                     AND storage_location = 'DUMMY')
                WHERE       productionordid = v_mo_id
                        AND werks = v_werks
                        AND matnr = v_matnr;

               UPDATE   mid_mo_line
                  SET   header_supplierid = 'MFGLS'
                WHERE       productionordid = v_mo_id
                        AND werks = v_werks
                        AND matnr = v_matnr
                        AND matnr IN
                                 (SELECT   item
                                    FROM   itemsitemaster
                                   WHERE   item = matnr AND siteid = werks
                                           AND ud_storage_condition IN
                                                    ('KB', 'CM', 'PG'));
            ELSE 
               /* 2. NORMAL ItemType */
               n_qty_left := n_qty;
               n_qty_c2 := 0;

               --if vendor has 1 more,it willl check inventory from vendor
               /*SELECT COUNT (1)
                                                              INTO n_vendor
                 FROM r3_mo_bom bom,
                      r3_inventory i,
                      mst_ui_sourcing_priority pri
                WHERE bom.vendor = i.lifnr
                  AND bom.werks = i.werks
                  AND bom.matnr = i.matnr
                  AND bom.LOCATION = i.storage_location
                  AND i.storage_location = pri.storage_location
                  AND i.storage_type = pri.storage_type
                  AND i.werks = pri.logical_plant
                  AND bom.vendor <> NULL;*/
               /*SELECT COUNT (1)
                                                              INTO n_vendor
                 FROM r3_mo_bom bom
                WHERE bom.vendor = v_bom_lifnr
                  AND bom.werks = v_werks
                  AND bom.matnr = v_matnr
                  AND bom.LOCATION = v_sloc
                  AND bom.vendor <> NULL;*/

               /* MO BOM Item specified supplier check. Two Switches:
                * 2.1. Normal ItemType, MO BOM Item has supplier id specified.
                * 2.2. Normal ItemType, No supplier id is specified.
                */
               IF ( v_bom_lifnr IS NOT NULL  AND locate(v_bom_lifnr, '!=') =0 )   -- modify by xwu 2015/9/18 add not like
               /* 2.1. Normal ItemType, MO BOM Item has supplier id specified. */
               THEN
               BEGIN
                 DECLARE CURSOR cursor_priority_vendor FOR
                   (  SELECT   pri.priority,
                                 pri.inventory_type,
                                 pri.storage_type,
                                 pri.storage_location,
                                 pri.logical_plant,
                                 pri.mo_type,
                                 pri.owner
                          FROM   ui_sourcing_priority pri
                         WHERE   pri.storage_location = :v_sloc
                                 AND pri.logical_plant = :v_werks
                      ORDER BY   pri.priority);
                  FOR cur_priority_vendor AS cursor_priority_vendor DO
                     /* Is Full box material? Two switches:
                                                                   * 2.1.1. Normal ItemType, MO BOM Item has supplier id specified, Non-full box.
                      * 2.1.2. Normal ItemType, MO BOM Item has supplier id specified, Full box.
                      */
                     BEGIN
                     DECLARE EXIT HANDLER FOR no_data_found
                     BEGIN      --no record in full_box_remain
                           n_box_size := -1;                     
                     END;
                     
                        SELECT   box_size
                          INTO   n_box_size
                          FROM   ui_item_full_box
                         WHERE   item = v_matnr --   AND logical_plant = v_werks
                                 AND vendorid = v_bom_lifnr;

                     END;                  

                     IF n_box_size = -1
                     /* 2.1.1. Normal ItemType, MO BOM Item has supplier id specified, Non-full box. */
                     THEN
				      v_inventory_type:=cur_priority_vendor.inventory_type;  
				      v_owner2:=cur_priority_vendor.owner;          
				      v_logical_plant:=cur_priority_vendor.logical_plant;   
				      v_mo_type2 := cur_priority_vendor.mo_type;       
				      v_storage_location := cur_priority_vendor.storage_location;
				      v_storage_type :=cur_priority_vendor.storage_type ;                       
                     BEGIN
                        DECLARE CURSOR cursor_vendor FOR
                         (SELECT     inv.matnr matnr,
                                     inv.werks werks,
                                     inv.lifnr lifnr,
                                     qty_available,
                                     qty_consumed,
                                     :v_inventory_type as inventory_type,
                                     inv.storage_type storage_type,
                                     storage_bin,
                                     whs_no,
                                     :v_owner2 as owner,
                                     hold_type
                              FROM   inventory inv
                             WHERE   inv.werks = :v_logical_plant 
                                     AND inv.matnr = :v_matnr
                                     AND inv.werks = :v_werks
                                     AND inv.lifnr = :v_bom_lifnr
                                     AND inv.qty_available > 0
                                     AND inv.hold_type = 'A'
                                     AND IFNULL (:v_mo_type2, 'MO') = 'MO'
                                     AND inv.storage_location = :v_storage_location
                                     AND inv.storage_type =:v_storage_type  --FOR UPDATE OF inv.QTY_AVAILABLE, inv.QTY_CONSUMED
                                                                           ) ;                    
                     
                     FOR cur_vendor AS cursor_vendor DO
                        DECLARE EXIT HANDLER FOR  next_vendor
                            BEGIN
            
                            END;
                            
                           v_lifnr := cur_vendor.lifnr;
                           v_owner := cur_vendor.owner;
                           n_qty_a := cur_vendor.qty_available;
                           n_qty_c := cur_vendor.qty_consumed;
                           v_stype := cur_vendor.storage_type;
                           v_sbin := cur_vendor.storage_bin;
                           v_whs_no := cur_vendor.whs_no;
                           v_inv_type := cur_vendor.inventory_type;
                           v_hld_type := cur_vendor.hold_type;
                           v_line_supplierid := cur_vendor.lifnr;

                           IF (v_owner = 'MFGLS')
                           THEN
                              v_pull_type := 'EXCESS';
                           ELSEIF (v_owner = '1000045410' AND v_stype = 'HFU')
                           THEN
                              v_pull_type := 'SHIPPING';
                           ELSE
                              v_pull_type := 'NORMAL';
                           END IF;

                           IF (v_pull_type = 'SHIPPING')
                           THEN
                              v_header_supplierid := v_lifnr;
                           END IF;

                           IF (n_qty_left > 0)
                           THEN
                              v_is_cqe := 'N';

                              IF (n_qty_left > n_qty_a)
                              THEN
                                 n_qty_c2 := n_qty_a;
                                 n_qty_left := n_qty_left - n_qty_a;
                              ELSE
                                 n_qty_c2 := n_qty_left;
                                 n_qty_left := 0;
                              END IF;


                              INSERT INTO mid_mo_line (productionordid,
                                                       bomname,
                                                       mo_type,
                                                       matnr,
                                                       werks,
                                                       physical_plant,
                                                       src_storage_type,
                                                       src_storage_loc,
                                                       src_storage_bin,
                                                       dest_storage_type,
                                                       dest_storage_loc,
                                                       dest_storage_bin,
                                                       pull_type,
                                                       inventory_type,
                                                       line_supplierid,
                                                       header_supplierid,
                                                       pull_qty,
                                                       is_cqe,
                                                       is_active_line,
                                                       production_line,
                                                       sys_source,
                                                       dept,
                                                       whs_no,
                                                       remark,
                                                       posnr,
                                                       BUILD_ENTITY,
                                                       sys_timestamp)
                                VALUES   (cur_mo.mo_id,
                                          cur_mo.bomname,
                                          v_mo_type,
                                          v_matnr,
                                          v_werks,
                                          v_plant,
                                          v_stype,
                                          v_sloc,
                                          v_sbin,
                                          'DUMMY',
                                          'DUMMY',
                                          'DUMMY',
                                          v_pull_type,
                                          v_inv_type,
                                          v_line_supplierid,
                                          v_header_supplierid,
                                          n_qty_c2,
                                          v_is_cqe,
                                          'Y',
                                          v_prd_line,
                                          gv_sys_source,
                                          gv_dept,
                                          v_whs_no,
                                          cur_mo.remark,
                                          cur_mo.posnr,
                                          cur_mo.BUILD_ENTITY,
                                          :v_sysdate);

                              /*************************************************************************/
                              /*Add it by Sky at 20080116 for make sure header_supplierid is SZA*/
                              /*************************************************************************/
                              UPDATE   mid_mo_line
                                 SET   header_supplierid =
                                          (SELECT   DISTINCT owner
                                             FROM   ui_sourcing_priority
                                            WHERE   logical_plant = v_werks
                                                    AND storage_type = v_stype
                                                    AND storage_location = v_sloc
                                                    AND mo_type = 'MO')		--2015.11.30  INC000002673742 added by baiying)
                               WHERE       productionordid = v_mo_id
                                       AND werks = v_werks
                                       AND matnr = v_matnr
                                       AND src_storage_type = v_stype
                                       AND src_storage_loc = v_sloc
                                       AND src_storage_bin = v_sbin
                                       AND pull_type = v_pull_type;

                              UPDATE   inventory
                                 SET   qty_available = qty_available - n_qty_c2,
                                       qty_consumed = IFNULL (qty_consumed, 0) + n_qty_c2
                               WHERE       werks = v_werks
                                       AND matnr = v_matnr
                                       AND lifnr = v_lifnr
                                       AND storage_type = v_stype
                                       AND storage_bin = v_sbin
                                       AND storage_location = v_sloc
                                       AND sys_source = gv_sys_source
                                       AND dept = gv_dept
                                       AND hold_type = 'A';

                              IF (n_qty_left = 0)
                              THEN
                                SIGNAL next_mo;
                                -- GOTO next_mo;
                              ELSE
                                 SIGNAL next_vendor;
                                 --GOTO next_vendor;
                              END IF;
                           ELSE
                              SIGNAL next_mo;
                              --GOTO next_mo;
                           END IF;

                         -- <<next_vendor>>
                         --  NULL;
                     END FOR; 
                     END;
                     ELSE
                      v_inventory_type:=cur_priority_vendor.inventory_type;  
                      v_owner2:=cur_priority_vendor.owner;          
                      v_logical_plant:=cur_priority_vendor.logical_plant;   
                      v_mo_type2 := cur_priority_vendor.mo_type;       
                      v_storage_location := cur_priority_vendor.storage_location;
                      v_storage_type :=cur_priority_vendor.storage_type ;                        
                     BEGIN
                        /* 2.1.2. Normal ItemType, MO BOM Item has supplier id specified, Full box. */
                        DECLARE CURSOR cursor_vendor FOR
                         (SELECT   inv.matnr matnr,
                                     inv.werks werks,
                                     inv.lifnr lifnr,
                                     qty_available,
                                     qty_consumed,
                                     :v_inventory_type inventory_type,
                                     inv.storage_type storage_type,
                                     storage_bin,
                                     storage_location,
                                     whs_no,
                                     :v_owner2 owner,
                                     hold_type
                              FROM   inventory inv
                             WHERE   inv.werks = :v_logical_plant
                                     AND inv.matnr = :v_matnr
                                     AND inv.werks = :v_werks
                                     AND inv.lifnr = :v_bom_lifnr
                                     AND (inv.qty_available > 0
                                          OR EXISTS
                                               (SELECT   1
                                                  FROM   full_box_remain remain
                                                 WHERE   inv.storage_location = remain.src_storage_loc
                                                         AND inv.storage_type = remain.src_storage_type
                                                         AND inv.storage_bin = remain.src_storage_bin
                                                         AND inv.matnr = remain.matnr
                                                         AND inv.werks = remain.werks
                                                         AND remain.production_line = :v_prd_line
                                                         AND remain.remain_qty > 0))
                                     AND inv.hold_type = 'A'
                                     AND IFNULL (:v_mo_type2, 'MO') = 'MO'
                                     AND inv.storage_location = :v_storage_location
                                     AND inv.storage_type = :v_storage_type);
                     
                     FOR cur_vendor AS cursor_vendor DO
                        DECLARE EXIT HANDLER FOR next_vendor
                        BEGIN
                        
                        END;
                     
                           v_lifnr := cur_vendor.lifnr;
                           v_owner := cur_vendor.owner;
                           n_qty_a := cur_vendor.qty_available;
                           n_qty_c := cur_vendor.qty_consumed;
                           v_stype := cur_vendor.storage_type;
                           v_sbin := cur_vendor.storage_bin;
                           v_whs_no := cur_vendor.whs_no;
                           v_inv_type := cur_vendor.inventory_type;
                           v_hld_type := cur_vendor.hold_type;
                           v_line_supplierid := cur_vendor.lifnr;

                           IF (v_owner = 'MFGLS')
                           THEN
                              v_pull_type := 'EXCESS';
                           ELSEIF (v_owner = '1000045410' AND v_stype = 'HFU')
                           THEN
                              v_pull_type := 'SHIPPING';
                           ELSE
                              v_pull_type := 'NORMAL';
                           END IF;

                           IF (v_pull_type = 'SHIPPING')
                           THEN
                              v_header_supplierid := v_lifnr;
                           END IF;

                           BEGIN
                           DECLARE EXIT HANDLER FOR  no_data_found
                           BEGIN            --no record in full_box_remain
                                 n_box_size := 1;
                                 n_full_box_qty := n_qty_left;
                                 n_remain_qty := 0;                           
                           END;
                           
                              SELECT   box_size,
                                       CEIL (n_qty_left / box_size)
                                       * box_size,
                                       CEIL (n_qty_left / box_size)
                                       * box_size
                                       - n_qty_left
                                INTO   n_box_size,
                                       n_full_box_qty,
                                       n_remain_qty
                                FROM   ui_item_full_box
                               WHERE   item = v_matnr --   AND logical_plant = v_werks
                                       AND vendorid = v_line_supplierid;
                           --  AND cur_vendor.matnr = item
                           --   AND cur_vendor.werks = logical_plant
                           --   AND cur_vendor.storage_bin = v_sbin
                           --  AND cur_vendor.storage_type = v_stype;
                           END;
                           /* Does FULL_BOX_REMAIN has such record? Two Switches:
                                                                                                                                  * 2.1.2.1. Normal ItemType, MO BOM Item has supplier id specified, Full box, No full box remain.
                            * 2.1.2.2. Normal ItemType, MO BOM Item has supplier id specified, Full box, Has full box remain.
                            */
                           BEGIN
                           DECLARE EXIT HANDLER FOR  no_data_found
                           BEGIN            --no record in full_box_remain
                                 full_box_flag := 'N';                        
                           END;
                              SELECT   DISTINCT 'Y'
                                INTO   full_box_flag
                                FROM   full_box_remain remain
                               WHERE   remain.matnr = cur_vendor.matnr
                                       AND remain.werks = cur_vendor.werks
                                       AND remain.production_line = v_prd_line
                                       AND remain.src_storage_type = cur_vendor.storage_type
                                       AND remain.src_storage_bin = cur_vendor.storage_bin
                                       AND remain.src_storage_loc = cur_vendor.storage_location
                                       AND remain.line_supplierid = v_lifnr;

                           END;
                           
                           IF full_box_flag = 'N'
                           /* 2.1.2.1. Normal ItemType, MO BOM Item has supplier id specified, Full box, No full box remain. */
                           THEN
                              IF n_qty_a >= n_full_box_qty
                              THEN
                                 --if item not exists in full_box_remain,it will insert into full_box_main
                                 INSERT INTO full_box_remain (
                                                                 matnr,
                                                                 werks,
                                                                 physical_plant,
                                                                 header_supplierid,
                                                                 production_line,
                                                                 src_storage_type,
                                                                 src_storage_bin,
                                                                 src_storage_loc,
                                                                 line_supplierid,
                                                                 remain_qty,
                                                                 old_remain_qty
                                            )
                                   VALUES   (v_matnr,
                                             v_werks,
                                             v_plant,
                                             v_header_supplierid,
                                             v_prd_line,
                                             v_stype,
                                             v_sbin,
                                             v_sloc,
                                             v_lifnr,
                                             n_remain_qty,
                                             0);

                                 INSERT INTO mid_mo_line (productionordid,
                                                          bomname,
                                                          mo_type,
                                                          matnr,
                                                          werks,
                                                          physical_plant,
                                                          src_storage_type,
                                                          src_storage_loc,
                                                          src_storage_bin,
                                                          dest_storage_type,
                                                          dest_storage_loc,
                                                          dest_storage_bin,
                                                          pull_type,
                                                          inventory_type,
                                                          line_supplierid,
                                                          header_supplierid,
                                                          pull_qty,
                                                          is_cqe,
                                                          is_active_line,
                                                          production_line,
                                                          sys_source,
                                                          dept,
                                                          whs_no,
                                                          remark,
                                                          posnr,
                                                          BUILD_ENTITY,
                                                          sys_timestamp)
                                   VALUES   (cur_mo.mo_id,
                                             cur_mo.bomname,
                                             v_mo_type,
                                             v_matnr,
                                             v_werks,
                                             v_plant,
                                             v_stype,
                                             v_sloc,
                                             v_sbin,
                                             'DUMMY',
                                             'DUMMY',
                                             'DUMMY',
                                             v_pull_type,
                                             v_inv_type,
                                             v_line_supplierid,
                                             v_header_supplierid,
                                             n_qty_left,
                                             v_is_cqe,
                                             'Y',
                                             v_prd_line,
                                             gv_sys_source,
                                             gv_dept,
                                             v_whs_no,
                                             cur_mo.remark,
                                             cur_mo.posnr,
                                             cur_mo.BUILD_ENTITY,
                                             :v_sysdate);

                                 UPDATE   inventory
                                    SET   qty_available = qty_available - n_full_box_qty,
                                          qty_consumed =  IFNULL (qty_consumed, 0)  + n_full_box_qty
                                  WHERE       werks = v_werks
                                          AND matnr = v_matnr
                                          AND lifnr = v_lifnr
                                          AND storage_type = v_stype
                                          AND storage_bin = v_sbin
                                          AND storage_location = v_sloc
                                          AND sys_source = gv_sys_source
                                          AND dept = gv_dept
                                          AND hold_type = 'A';

                                 n_qty_left := 0;
                                 
                                 SIGNAL next_mo;
                                 --GOTO next_mo;
                              ELSEIF n_qty_a >= FLOOR (n_qty_a / n_box_size) * n_box_size AND n_full_box_qty > n_qty_a
                              THEN
                                 INSERT INTO mid_mo_line (
                                                             productionordid,
                                                             bomname,
                                                             mo_type,
                                                             matnr,
                                                             werks,
                                                             physical_plant,
                                                             src_storage_type,
                                                             src_storage_loc,
                                                             src_storage_bin,
                                                             dest_storage_type,
                                                             dest_storage_loc,
                                                             dest_storage_bin,
                                                             pull_type,
                                                             inventory_type,
                                                             line_supplierid,
                                                             header_supplierid,
                                                             pull_qty,
                                                             is_cqe,
                                                             is_active_line,
                                                             production_line,
                                                             sys_source,
                                                             dept,
                                                             whs_no,
                                                             remark,
                                                             posnr,
                                                             BUILD_ENTITY,
                                                             sys_timestamp
                                            )
                                   VALUES   (
                                                cur_mo.mo_id,
                                                cur_mo.bomname,
                                                v_mo_type,
                                                v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_stype,
                                                v_sloc,
                                                v_sbin,
                                                'DUMMY',
                                                'DUMMY',
                                                'DUMMY',
                                                v_pull_type,
                                                v_inv_type,
                                                v_line_supplierid,
                                                v_header_supplierid,
                                                FLOOR (n_qty_a / n_box_size)
                                                * n_box_size,
                                                v_is_cqe,
                                                'Y',
                                                v_prd_line,
                                                gv_sys_source,
                                                gv_dept,
                                                v_whs_no,
                                                cur_mo.remark,
                                                cur_mo.posnr,
                                                cur_mo.BUILD_ENTITY,
                                                :v_sysdate
                                            );

                                 UPDATE   inventory
                                    SET   qty_available = qty_available - FLOOR (n_qty_a / n_box_size) * n_box_size,
                                          qty_consumed = IFNULL (qty_consumed, 0) + FLOOR (n_qty_a / n_box_size) * n_box_size
                                  WHERE       werks = v_werks
                                          AND matnr = v_matnr
                                          AND lifnr = v_lifnr
                                          AND storage_type = v_stype
                                          AND storage_bin = v_sbin
                                          AND storage_location = v_sloc
                                          AND sys_source = gv_sys_source
                                          AND dept = gv_dept
                                          AND hold_type = 'A';

                                 n_qty_left :=  n_qty_left - FLOOR (n_qty_a / n_box_size) * n_box_size;
                                 
                                 SIGNAL next_vendor;
                                 --GOTO next_vendor;
                              END IF;
                     ELSE
                     BEGIN
                              /* 2.1.2.2. Normal ItemType, MO BOM Item has supplier id specified, Full box, Has full box remain. */
                              DECLARE CURSOR cursor_i FOR
                               (SELECT   *
                                    FROM   full_box_remain
                                   WHERE       matnr = :v_matnr
                                           AND werks = :v_werks
                                           AND production_line = :v_prd_line
                                           AND physical_plant = :v_plant
                                           AND src_storage_type = :v_stype
                                           AND src_storage_bin =:v_sbin
                                           AND src_storage_loc = :v_sloc
                                           --AND line_supplierid = :v_line_supplierid
                                           AND remain_qty > 0);
                              
                                FOR cur_i as cursor_i DO
                                 IF n_qty_left > cur_i.remain_qty
                                 THEN
                                    n_qty_left := n_qty_left - cur_i.remain_qty;

                                    INSERT INTO mid_mo_line (
                                                                productionordid,
                                                                bomname,
                                                                mo_type,
                                                                matnr,
                                                                werks,
                                                                physical_plant,
                                                                src_storage_type,
                                                                src_storage_loc,
                                                                src_storage_bin,
                                                                dest_storage_type,
                                                                dest_storage_loc,
                                                                dest_storage_bin,
                                                                pull_type,
                                                                inventory_type,
                                                                line_supplierid,
                                                                header_supplierid,
                                                                pull_qty,
                                                                is_cqe,
                                                                is_active_line,
                                                                production_line,
                                                                sys_source,
                                                                dept,
                                                                whs_no,
                                                                remark,
                                                                posnr,
                                                                BUILD_ENTITY,
                                                                sys_timestamp
                                               )
                                      VALUES   (cur_mo.mo_id,
                                                cur_mo.bomname,
                                                v_mo_type,
                                                v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_stype,
                                                v_sloc,
                                                v_sbin,
                                                'DUMMY',
                                                'DUMMY',
                                                'DUMMY',
                                                v_pull_type,
                                                v_inv_type,
                                                v_line_supplierid,
                                                v_header_supplierid,
                                                cur_i.remain_qty,
                                                v_is_cqe,
                                                'Y',
                                                v_prd_line,
                                                gv_sys_source,
                                                gv_dept,
                                                v_whs_no,
                                                cur_mo.remark,
                                                cur_mo.posnr,
                                                cur_mo.BUILD_ENTITY,
                                                :v_sysdate);

                                    UPDATE   full_box_remain
                                       SET   remain_qty = 0
                                     WHERE   matnr = cur_i.matnr
                                             AND werks = cur_i.werks
                                             AND physical_plant = cur_i.physical_plant
                                             AND production_line = v_prd_line
                                             AND header_supplierid = cur_i.header_supplierid
                                             AND src_storage_type = cur_i.src_storage_type
                                             AND src_storage_bin = cur_i.src_storage_bin
                                             AND src_storage_loc = cur_i.src_storage_loc
                                             AND line_supplierid = cur_i.line_supplierid;

                                    UPDATE   mid_mo_line
                                       SET   header_supplierid =
                                                (SELECT   DISTINCT owner
                                                   FROM   ui_sourcing_priority
                                                  WHERE   logical_plant = v_werks
                                                          AND storage_type =  v_stype
                                                          AND storage_location = v_sloc
                                                          AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying)
                                     WHERE       productionordid = v_mo_id
                                             AND werks = v_werks
                                             AND matnr = v_matnr
                                             AND src_storage_type = v_stype
                                             AND src_storage_loc = v_sloc
                                             AND src_storage_bin = v_sbin
                                             AND pull_type = v_pull_type;
                                 ELSE
                                    INSERT INTO mid_mo_line (
                                                                productionordid,
                                                                bomname,
                                                                mo_type,
                                                                matnr,
                                                                werks,
                                                                physical_plant,
                                                                src_storage_type,
                                                                src_storage_loc,
                                                                src_storage_bin,
                                                                dest_storage_type,
                                                                dest_storage_loc,
                                                                dest_storage_bin,
                                                                pull_type,
                                                                inventory_type,
                                                                line_supplierid,
                                                                header_supplierid,
                                                                pull_qty,
                                                                is_cqe,
                                                                is_active_line,
                                                                production_line,
                                                                sys_source,
                                                                dept,
                                                                whs_no,
                                                                remark,
                                                                posnr,
                                                                BUILD_ENTITY,
                                                                sys_timestamp
                                               )
                                      VALUES   (cur_mo.mo_id,
                                                cur_mo.bomname,
                                                v_mo_type,
                                                v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_stype,
                                                v_sloc,
                                                v_sbin,
                                                'DUMMY',
                                                'DUMMY',
                                                'DUMMY',
                                                v_pull_type,
                                                v_inv_type,
                                                v_line_supplierid,
                                                v_header_supplierid,
                                                n_qty_left,
                                                v_is_cqe,
                                                'Y',
                                                v_prd_line,
                                                gv_sys_source,
                                                gv_dept,
                                                v_whs_no,
                                                cur_mo.remark,
                                                cur_mo.posnr,
                                                cur_mo.BUILD_ENTITY,
                                                :v_sysdate);

                                    UPDATE   full_box_remain
                                       SET   remain_qty =
                                                remain_qty - n_qty_left
                                     WHERE   matnr = cur_i.matnr
                                             AND werks = cur_i.werks
                                             AND physical_plant =cur_i.physical_plant
                                             AND production_line = v_prd_line
                                             AND header_supplierid =cur_i.header_supplierid
                                             AND src_storage_type =cur_i.src_storage_type
                                             AND src_storage_bin =cur_i.src_storage_bin
                                             AND src_storage_loc =cur_i.src_storage_loc
                                             AND line_supplierid =cur_i.line_supplierid;

                                    UPDATE   mid_mo_line
                                       SET   header_supplierid =
                                                (SELECT   DISTINCT owner
                                                   FROM   ui_sourcing_priority
                                                  WHERE   logical_plant =  v_werks
                                                          AND storage_type = v_stype
                                                          AND storage_location = v_sloc
                                                          AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying)
                                     WHERE       productionordid = v_mo_id
                                             AND werks = v_werks
                                             AND matnr = v_matnr
                                             AND src_storage_type = v_stype
                                             AND src_storage_loc = v_sloc
                                             AND src_storage_bin = v_sbin
                                             AND pull_type = v_pull_type;

                                    n_qty_left := 0;
                                    
                                    SIGNAL next_mo;
                                    --GOTO next_mo;
                                 END IF;                                
                                
                                END FOR;  
                     END; 


                              IF (n_qty_left > 0)
                              THEN
                                 v_is_cqe := 'N';
                                 -- Addition start by Zhang Lu, 2008-11-12
                                 -- Update n_full_box_qty and n_remain_qty based on current n_qty_left.
                                 n_full_box_qty := CEIL (n_qty_left / n_box_size) * n_box_size;
                                 n_remain_qty := CEIL (n_qty_left / n_box_size) * n_box_size - n_qty_left;

                                 -- Addition end by Zhang Lu, 2008-11-12

                                 IF (CEIL (n_qty_left / n_box_size) * n_box_size > n_qty_a)
                                    AND n_qty_a >= (FLOOR (n_qty_a / n_box_size) * n_box_size)
                                 THEN
                                    n_qty_c2 :=  FLOOR (n_qty_a / n_box_size) * n_box_size;
                                    n_qty_left :=  n_qty_left - FLOOR (n_qty_a / n_box_size) * n_box_size;

                                    INSERT INTO mid_mo_line (
                                                                productionordid,
                                                                bomname,
                                                                mo_type,
                                                                matnr,
                                                                werks,
                                                                physical_plant,
                                                                src_storage_type,
                                                                src_storage_loc,
                                                                src_storage_bin,
                                                                dest_storage_type,
                                                                dest_storage_loc,
                                                                dest_storage_bin,
                                                                pull_type,
                                                                inventory_type,
                                                                line_supplierid,
                                                                header_supplierid,
                                                                pull_qty,
                                                                is_cqe,
                                                                is_active_line,
                                                                production_line,
                                                                sys_source,
                                                                dept,
                                                                whs_no,
                                                                remark,
                                                                posnr,
                                                                BUILD_ENTITY,
                                                                sys_timestamp
                                               )
                                      VALUES   (cur_mo.mo_id,
                                                cur_mo.bomname,
                                                v_mo_type,
                                                v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_stype,
                                                v_sloc,
                                                v_sbin,
                                                'DUMMY',
                                                'DUMMY',
                                                'DUMMY',
                                                v_pull_type,
                                                v_inv_type,
                                                v_line_supplierid,
                                                v_header_supplierid,
                                                n_qty_c2,
                                                v_is_cqe,
                                                'Y',
                                                v_prd_line,
                                                gv_sys_source,
                                                gv_dept,
                                                v_whs_no,
                                                cur_mo.remark,
                                                cur_mo.posnr,
                                                cur_mo.BUILD_ENTITY,
                                                :v_sysdate);
                                 ELSE
                                    n_qty_c2 := CEIL (n_qty_left / n_box_size) * n_box_size;

                                    INSERT INTO mid_mo_line (
                                                                productionordid,
                                                                bomname,
                                                                mo_type,
                                                                matnr,
                                                                werks,
                                                                physical_plant,
                                                                src_storage_type,
                                                                src_storage_loc,
                                                                src_storage_bin,
                                                                dest_storage_type,
                                                                dest_storage_loc,
                                                                dest_storage_bin,
                                                                pull_type,
                                                                inventory_type,
                                                                line_supplierid,
                                                                header_supplierid,
                                                                pull_qty,
                                                                is_cqe,
                                                                is_active_line,
                                                                production_line,
                                                                sys_source,
                                                                dept,
                                                                whs_no,
                                                                remark,
                                                                posnr,
                                                                BUILD_ENTITY,
                                                                sys_timestamp
                                               )
                                      VALUES   (cur_mo.mo_id,
                                                cur_mo.bomname,
                                                v_mo_type,
                                                v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_stype,
                                                v_sloc,
                                                v_sbin,
                                                'DUMMY',
                                                'DUMMY',
                                                'DUMMY',
                                                v_pull_type,
                                                v_inv_type,
                                                v_line_supplierid,
                                                v_header_supplierid,
                                                n_qty_left,
                                                v_is_cqe,
                                                'Y',
                                                v_prd_line,
                                                gv_sys_source,
                                                gv_dept,
                                                v_whs_no,
                                                cur_mo.remark,
                                                cur_mo.posnr,
                                                cur_mo.BUILD_ENTITY,
                                                :v_sysdate);

                                    INSERT INTO full_box_remain (
                                                                    matnr,
                                                                    werks,
                                                                    physical_plant,
                                                                    header_supplierid,
                                                                    production_line,
                                                                    src_storage_type,
                                                                    src_storage_bin,
                                                                    src_storage_loc,
                                                                    line_supplierid,
                                                                    remain_qty,
                                                                    old_remain_qty
                                               )
                                      VALUES   (v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_header_supplierid,
                                                v_prd_line,
                                                v_stype,
                                                v_sbin,
                                                v_sloc,
                                                v_lifnr,
                                                n_remain_qty,
                                                0);

                                    n_qty_left := 0;
                                 END IF;
                                 UPDATE   inventory
                                    SET   qty_available = qty_available - n_qty_c2,
                                          qty_consumed = IFNULL (qty_consumed, 0) + n_qty_c2
                                  WHERE       werks = v_werks
                                          AND matnr = v_matnr
                                          AND lifnr = v_lifnr
                                          AND storage_type = v_stype
                                          AND storage_bin = v_sbin
                                          AND storage_location = v_sloc
                                          AND sys_source = gv_sys_source
                                          AND dept = gv_dept
                                          AND hold_type = 'A';

                                 UPDATE   mid_mo_line
                                    SET   header_supplierid =
                                             (SELECT   DISTINCT owner
                                                FROM   ui_sourcing_priority
                                               WHERE   logical_plant = v_werks
                                                       AND storage_type = v_stype
                                                       AND storage_location =  v_sloc
                                                       AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                                  WHERE       productionordid = v_mo_id
                                          AND werks = v_werks
                                          AND matnr = v_matnr
                                          AND src_storage_type = v_stype
                                          AND src_storage_loc = v_sloc
                                          AND src_storage_bin = v_sbin
                                          AND pull_type = v_pull_type;

                                 IF (n_qty_left = 0)
                                 THEN
                                    SIGNAL next_mo;
                                    --GOTO next_mo;
                                 ELSE
                                    SIGNAL next_vendor;
                                    --GOTO next_vendor;
                                 END IF;
                              ELSE
                                 SIGNAL next_mo;
                                 --GOTO next_mo;
                              END IF;
                             
                     END IF;
                     --<<next_vendor>>
                     -- NULL;                     
                     END FOR;
                     
                     END;
                     END IF;
                  END FOR;
               END;  
               ELSE
                  /* 2.2. Normal ItemType, No supplier id is specified. */
                  --Start by sky 20080107
                  DECLARE CURSOR cursor_priority FOR
                     (  SELECT   pri.priority,
                                 pri.inventory_type,
                                 pri.storage_type,
                                 pri.storage_location,
                                 pri.logical_plant,
                                 pri.owner
                          FROM   ui_sourcing_priority pri
                         WHERE       pri.storage_location = :v_sloc
                                 AND pri.logical_plant = :v_werks
                                 AND pri.mo_type = 'MO'
                      ORDER BY   pri.priority);
                  
                  FOR cur_priority AS cursor_priority DO
                     /* Inventory type check. Two switches:
                                                                            * 2.2.1. Normal ItemType, No supplier id is specified, LOI.
                      * 2.2.2. Normal ItemType, No supplier id is specified, SOI.
                      */
                      v_inventory_type:=cur_priority.inventory_type;  
                      v_logical_plant:=cur_priority.logical_plant;   
                      v_storage_location := cur_priority.storage_location;
                      v_storage_type :=cur_priority.storage_type ;
                      v_owner2:= cur_priority.owner;
                                             
                     IF cur_priority.inventory_type = 'LOI'
                     /* 2.2.1. Normal ItemType, No supplier id is specified, LOI. */
                     THEN 
                        DECLARE CURSOR cursor_loi
                        FOR (SELECT  matnr,
                                     werks,
                                     lifnr,
                                     qty_available,
                                     qty_consumed,
                                     :v_inventory_type inventory_type,
                                     inv.storage_type storage_type,
                                     storage_bin,
                                     whs_no,
                                     hold_type
                              FROM   inventory inv
                             WHERE   inv.storage_type = :v_storage_type
                                     AND inv.storage_location = :v_storage_location
                                     AND inv.werks = :v_logical_plant
                                     AND inv.matnr = :v_matnr
                                     AND inv.werks = :v_werks
                                     AND inv.storage_location = :v_sloc
                                     AND inv.qty_available > 0
                                     AND inv.hold_type = 'A');
                      
                      FOR cur_loi AS cursor_loi DO
	                     DECLARE EXIT HANDLER FOR  next_loi
	                     BEGIN

	                     END;                          

                           v_lifnr := cur_loi.lifnr;
                           v_owner := cur_priority.owner;
                           n_qty_a := cur_loi.qty_available;
                           n_qty_c := cur_loi.qty_consumed;
                           v_stype := cur_loi.storage_type;
                           v_sbin := cur_loi.storage_bin;
                           v_whs_no := cur_loi.whs_no;
                           v_inv_type := cur_loi.inventory_type;
                           v_hld_type := cur_loi.hold_type;
                           v_line_supplierid := '3PL';

                           IF (v_owner = 'MFGLS')
                           THEN
                              v_pull_type := 'EXCESS';
                           ELSEIF (v_owner = '1000045410' AND v_stype = 'HFU')
                           THEN
                              v_pull_type := 'SHIPPING';
                           ELSE
                              v_pull_type := 'NORMAL';
                           END IF;

                           IF (v_pull_type = 'SHIPPING')
                           THEN
                              IF (v_inv_type = 'SOI')
                              THEN
                                 v_header_supplierid := v_lifnr;
                              ELSE
                                 v_header_supplierid := 'SZA';
                              END IF;
                           END IF;

                           --DBMS_OUTPUT.PUT_LINE('N_QTY_LEFT=' || N_QTY_LEFT || ', N_QTY_A=' || N_QTY_A);
                           IF (n_qty_left > 0)
                           THEN
                              IF (n_qty_left > n_qty_a)
                              THEN
                                 n_qty_c2 := n_qty_a;
                                 n_qty_left := n_qty_left - n_qty_a;
                              ELSE
                                 n_qty_c2 := n_qty_left;
                                 n_qty_left := 0;
                              END IF;

                              /*
                                                                                                                   INSERT INTO MID_INVENTORY(
                                      MATNR,            WERKS,         WHS_NO,
                                      STORAGE_LOCATION, STORAGE_TYPE,  STORAGE_BIN,
                                      QTY,              HOLD_TYPE ,    LIFNR,
                                      SYS_SOURCE,       DEPT
                                  ) VALUES (
                                      V_MATNR,          V_WERKS,       V_WHS_NO,
                                      V_SLOC,           V_STYPE,       V_SBIN,
                                      N_QTY_C2,         V_HLD_TYPE,    V_LIFNR,
                                      gv_sys_source,    gv_dept
                                  );
                                  V_MSG := 'LOI: Vendor ' || V_LIFNR || ' has ' || N_QTY_A || ' ' || V_MATNR;
                                  V_MSG := V_MSG || ', MO [' || V_MO_ID || '] consumed ' || N_QTY_C2 || '! ';
                                  V_MSG := V_MSG || 'from TYPE [' || V_STYPE || '], BIN [' || V_SBIN || ']';
                                  DBMS_OUTPUT.PUT_LINE(V_MSG);
                              */
                              INSERT INTO mid_mo_line (productionordid,
                                                       bomname,
                                                       mo_type,
                                                       matnr,
                                                       werks,
                                                       physical_plant,
                                                       src_storage_type,
                                                       src_storage_loc,
                                                       src_storage_bin,
                                                       dest_storage_type,
                                                       dest_storage_loc,
                                                       dest_storage_bin,
                                                       pull_type,
                                                       inventory_type,
                                                       line_supplierid,
                                                       header_supplierid,
                                                       pull_qty,
                                                       is_cqe,
                                                       is_active_line,
                                                       production_line,
                                                       sys_source,
                                                       dept,
                                                       remark,
                                                       whs_no,
                                                       posnr,
                                                       BUILD_ENTITY,
                                                       sys_timestamp)
                                VALUES   (cur_mo.mo_id,
                                          cur_mo.bomname,
                                          v_mo_type,
                                          v_matnr,
                                          v_werks,
                                          v_plant,
                                          v_stype,
                                          v_sloc,
                                          v_sbin,
                                          'DUMMY',
                                          'DUMMY',
                                          'DUMMY',
                                          v_pull_type,
                                          v_inv_type,
                                          v_line_supplierid,
                                          v_header_supplierid,
                                          n_qty_c2,
                                          'N',
                                          'Y',
                                          v_prd_line,
                                          gv_sys_source,
                                          gv_dept,
                                          cur_mo.remark,
                                          v_whs_no,
                                          cur_mo.posnr,
                                          cur_mo.BUILD_ENTITY,
                                          :v_sysdate);

                              /*************************************************************************/
                              /*Add it by Sky at 20080116 for make sure header_supplierid is SZA*/
                              /*************************************************************************/
                              UPDATE   mid_mo_line
                                 SET   header_supplierid =
                                          (SELECT   DISTINCT owner
                                             FROM   ui_sourcing_priority
                                            WHERE   logical_plant = v_werks
                                                    AND storage_type = v_stype
                                                    AND storage_location = v_sloc
                                                    AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                               WHERE       productionordid = v_mo_id
                                       AND werks = v_werks
                                       AND matnr = v_matnr
                                       AND src_storage_type = v_stype
                                       AND src_storage_loc = v_sloc
                                       AND src_storage_bin = v_sbin
                                       AND pull_type = v_pull_type;

                              UPDATE   inventory
                                 SET   qty_available =  qty_available - n_qty_c2,
                                       qty_consumed = IFNULL (qty_consumed, 0) + n_qty_c2
                               WHERE       werks = v_werks
                                       AND matnr = v_matnr
                                       -- AND lifnr = v_lifnr    -- --2015.11.30  INC000002673742 deleted by baiying
                                       AND storage_type = v_stype
                                       AND storage_bin = v_sbin
                                       AND storage_location = v_sloc
                                       AND sys_source = gv_sys_source
                                       AND dept = gv_dept
                                       AND hold_type = 'A';

                              IF (n_qty_left = 0)
                              THEN
                                 SIGNAL next_mo;
                                 --GOTO next_mo;
                              ELSE
                                 SIGNAL next_loi;
                                 --GOTO next_loi;
                              END IF;
                           ELSE
                              SIGNAL next_mo;
                              --GOTO next_mo;
                           END IF;

                          --<<next_loi>>
                           --NULL;
                      
                      END FOR;                    

                     ELSEIF cur_priority.inventory_type = 'SOI'
                     /* 2.2.2. Normal ItemType, No supplier id is specified, SOI. */
                     THEN
	                   --------* SOI 如果供应商包含!=, 截取新供应商编码 2015/9/17 by xwu */ -------------------
	                   if ( locate( v_bom_lifnr, '!=' ) > 0 ) then 
	                        select trim(substring(v_bom_lifnr, locate(v_bom_lifnr, '!=') + 2, length(v_bom_lifnr) -2 )) 
	                        into v_bom_lifnr_new
	                        from dummy;
	                   else
	                        v_bom_lifnr_new := '';
	                   end if;
	                   ---------------------------------------------------------------------------------------------	                   
                        n_box_size_count := 0;

                        BEGIN
                        DECLARE EXIT HANDLER FOR no_data_found --no record in full_box_remain
                        BEGIN
                            n_box_size_count := 0;
                        END;

                           SELECT   COUNT (1)
                             INTO   n_box_size_count
                             FROM   ui_item_full_box
                            WHERE   item = v_matnr;
                        -- AND logical_plant = v_werks;

                        END;     
                        v_owner := cur_priority.owner;
                        IF n_box_size_count = 0
                        /* 2.2.2.1. Normal ItemType, No supplier id is specified, SOI, Non-full box. */
                        THEN
                           DECLARE CURSOR cursor_soi FOR
                             (  SELECT   inv.matnr matnr,
                                          inv.werks werks,
                                          inv.lifnr lifnr,
                                          qty_available,
                                          qty_consumed,
                                          :v_inventory_type inventory_type,
                                          :v_storage_type
                                             storage_type,
                                          storage_bin,
                                          whs_no,
                                          :v_owner owner,
                                          hold_type
                                   FROM   inventory inv, mid_supplier_priority ud
                                  WHERE   inv.storage_type =  :v_storage_type
                                          AND inv.storage_location = :v_storage_location
                                          AND inv.werks =  :v_logical_plant
                                          AND inv.matnr = ud.matnr
                                          AND inv.werks = ud.werks
                                          AND inv.lifnr = ud.lifnr
                                          AND inv.qty_available > 0
                                          AND inv.hold_type = 'A'
                                          AND ( inv.lifnr <> :v_bom_lifnr_new or inv.lifnr is null )  -- add by xwu 2015/9/18
                                          AND inv.werks = :v_werks
                                          AND inv.matnr = :v_matnr
                                          AND inv.storage_location = :v_sloc
                               ORDER BY   ud.priority);
                               
                           FOR cur_soi AS cursor_soi DO
		                        DECLARE EXIT HANDLER FOR next_soi 
		                        BEGIN
 
 		                        END;                           
                           
                              v_lifnr := cur_soi.lifnr;
                              v_owner := cur_soi.owner;
                              n_qty_a := cur_soi.qty_available;
                              n_qty_c := cur_soi.qty_consumed;
                              v_stype := cur_soi.storage_type;
                              v_sbin := cur_soi.storage_bin;
                              v_whs_no := cur_soi.whs_no;
                              v_inv_type := cur_soi.inventory_type;
                              v_hld_type := cur_soi.hold_type;
                              v_line_supplierid := cur_soi.lifnr;

                              IF (v_owner = 'MFGLS')
                              THEN
                                 v_pull_type := 'EXCESS';
                              ELSEIF (v_owner = '1000045410' AND v_stype = 'HFU')
                              THEN
                                 v_pull_type := 'SHIPPING';
                              ELSE
                                 v_pull_type := 'NORMAL';
                              END IF;

                              IF (v_pull_type = 'SHIPPING')
                              THEN
                                 v_header_supplierid := v_lifnr;
                              END IF;

                              IF (n_qty_left > 0)
                              THEN
                                 v_is_cqe := 'N';

                                 IF (n_qty_left > n_qty_a)
                                 THEN
                                    n_qty_c2 := n_qty_a;
                                    n_qty_left := n_qty_left - n_qty_a;
                                 ELSE
                                    n_qty_c2 := n_qty_left;
                                    n_qty_left := 0;
                                 END IF;

                                 INSERT INTO mid_mo_line (productionordid,
                                                          bomname,
                                                          mo_type,
                                                          matnr,
                                                          werks,
                                                          physical_plant,
                                                          src_storage_type,
                                                          src_storage_loc,
                                                          src_storage_bin,
                                                          dest_storage_type,
                                                          dest_storage_loc,
                                                          dest_storage_bin,
                                                          pull_type,
                                                          inventory_type,
                                                          line_supplierid,
                                                          header_supplierid,
                                                          pull_qty,
                                                          is_cqe,
                                                          is_active_line,
                                                          production_line,
                                                          sys_source,
                                                          dept,
                                                          whs_no,
                                                          remark,
                                                          posnr,
                                                          BUILD_ENTITY,
                                                          sys_timestamp)
                                   VALUES   (cur_mo.mo_id,
                                             cur_mo.bomname,
                                             v_mo_type,
                                             v_matnr,
                                             v_werks,
                                             v_plant,
                                             v_stype,
                                             v_sloc,
                                             v_sbin,
                                             'DUMMY',
                                             'DUMMY',
                                             'DUMMY',
                                             v_pull_type,
                                             v_inv_type,
                                             v_line_supplierid,
                                             v_header_supplierid,
                                             n_qty_c2,
                                             v_is_cqe,
                                             'Y',
                                             v_prd_line,
                                             gv_sys_source,
                                             gv_dept,
                                             v_whs_no,
                                             cur_mo.remark,
                                             cur_mo.posnr,
                                             cur_mo.BUILD_ENTITY,
                                             :v_sysdate);

                                 /*************************************************************************/
                                 /*Add it by Sky at 20080116 for make sure header_supplierid is SZA*/
                                 /*************************************************************************/
                                 UPDATE   mid_mo_line
                                    SET   header_supplierid =
                                             (SELECT   DISTINCT owner
                                                FROM   ui_sourcing_priority
                                               WHERE   logical_plant =  v_werks
                                                       AND storage_type =  v_stype
                                                       AND storage_location =  v_sloc
                                                       AND mo_type = 'MO')			--2015.11.30  INC000002673742 added by baiying
                                  WHERE       productionordid = v_mo_id
                                          AND werks = v_werks
                                          AND matnr = v_matnr
                                          AND src_storage_type = v_stype
                                          AND src_storage_loc = v_sloc
                                          AND src_storage_bin = v_sbin
                                          AND pull_type = v_pull_type;

                                 UPDATE   inventory
                                    SET   qty_available = qty_available - n_qty_c2,
                                          qty_consumed = IFNULL (qty_consumed, 0) + n_qty_c2
                                  WHERE       werks = v_werks
                                          AND matnr = v_matnr
                                          AND lifnr = v_lifnr    
                                          AND storage_type = v_stype
                                          AND storage_bin = v_sbin
                                          AND storage_location = v_sloc
                                          AND sys_source = gv_sys_source
                                          AND dept = gv_dept
                                          AND hold_type = 'A';

                                 IF (n_qty_left = 0)
                                 THEN
                                    SIGNAL next_mo;
                                    --GOTO next_mo;
                                 ELSE
                                    SIGNAL next_soi;
                                    --GOTO next_soi;
                                 END IF;
                              ELSE
                                 SIGNAL next_mo;
                                 --GOTO next_mo;
                              END IF;

                             --<<next_soi>>
                              --NULL;
                           END FOR;                        
                     ELSE

                           /* 2.2.2.2. Normal ItemType, No supplier id is specified, SOI, Full box. */
                           DECLARE CURSOR cursor_soi FOR
                            (  SELECT   inv.matnr matnr,
                                          inv.werks werks,
                                          inv.lifnr lifnr,
                                          qty_available,
                                          qty_consumed,
                                          :v_inventory_type inventory_type,
                                          :v_storage_type  storage_type,
                                          storage_bin,
                                          storage_location,
                                          whs_no,
                                          :v_owner2 owner,
                                          hold_type
                                   FROM   inventory inv, mid_supplier_priority ud
                                  WHERE   inv.storage_type = :v_storage_type
                                          AND inv.storage_location = :v_storage_location
                                          AND inv.werks = :v_logical_plant
                                          AND inv.matnr = ud.matnr
                                          AND inv.werks = ud.werks
                                          AND inv.lifnr = ud.lifnr
                                          AND inv.hold_type = 'A'
                                          AND ( inv.lifnr <> :v_bom_lifnr_new or inv.lifnr is null )  -- add by xwu 2015/9/18
                                          AND inv.werks = :v_werks
                                          AND inv.matnr = :v_matnr
                                          AND inv.storage_location = :v_sloc
                                          AND (inv.qty_available > 0
                                               OR EXISTS
                                                    (SELECT   1
                                                       FROM   full_box_remain remain
                                                      WHERE   inv.storage_location =  remain.src_storage_loc
                                                              AND inv.storage_type = remain.src_storage_type
                                                              AND inv.storage_bin =  remain.src_storage_bin
                                                              AND inv.matnr =  remain.matnr
                                                              AND inv.werks = remain.werks
                                                              AND remain.production_line =  :v_prd_line
                                                              AND remain.remain_qty >  0))
                               ORDER BY   ud.priority --FOR UPDATE OF inv.QTY_AVAILABLE, inv.QTY_CONSUMED
                                                     ); 
                                                     
                               FOR cur_soi AS cursor_soi DO
                               
                               DECLARE EXIT HANDLER FOR next_soi
                               BEGIN
                               
                               END;


                              v_lifnr := cur_soi.lifnr;
                              v_owner := cur_soi.owner;
                              n_qty_a := cur_soi.qty_available;
                              n_qty_c := cur_soi.qty_consumed;
                              v_stype := cur_soi.storage_type;
                              v_sbin := cur_soi.storage_bin;
                              v_whs_no := cur_soi.whs_no;
                              v_inv_type := cur_soi.inventory_type;
                              v_hld_type := cur_soi.hold_type;
                              v_line_supplierid := cur_soi.lifnr;
                              full_box_flag := 'N';

                              IF (v_owner = 'MFGLS')
                              THEN
                                 v_pull_type := 'EXCESS';
                              ELSEIF (v_owner = '1000045410' AND v_stype = 'HFU')
                              THEN
                                 v_pull_type := 'SHIPPING';
                              ELSE
                                 v_pull_type := 'NORMAL';
                              END IF;

                              IF (v_pull_type = 'SHIPPING')
                              THEN
                                 v_header_supplierid := v_lifnr;
                              END IF;

                              BEGIN
                              
                              DECLARE EXIT HANDLER FOR no_data_found--no record in full_box_remain
                              BEGIN
                                    n_box_size := 1;
                                    n_full_box_qty := n_qty_left;
                                    n_remain_qty := 0;                              
                              END;
                                 SELECT   box_size,
                                          CEIL (n_qty_left / box_size)  * box_size,
                                          CEIL (n_qty_left / box_size) * box_size - n_qty_left
                                   INTO   n_box_size,
                                          n_full_box_qty,
                                          n_remain_qty
                                   FROM   ui_item_full_box
                                  WHERE   item = v_matnr --   AND logical_plant = v_werks
                                          AND vendorid = v_line_supplierid;
                              --  AND cur_soi.matnr = item
                              --  AND cur_soi.werks = logical_plant
                              --  AND cur_soi.storage_bin = v_sbin
                              --  AND cur_soi.storage_type = v_stype;

                              END;

                              BEGIN
                              DECLARE EXIT HANDLER FOR no_data_found--no record in full_box_remain
                              BEGIN
                                    full_box_flag := 'N';
                            
                              END;                              
                                 SELECT   DISTINCT 'Y'
                                   INTO   full_box_flag
                                   FROM   full_box_remain remain
                                  WHERE   remain.matnr = cur_soi.matnr
                                          AND remain.werks = cur_soi.werks
                                          AND remain.production_line =  v_prd_line
                                          AND remain.src_storage_type =  cur_soi.storage_type
                                          AND remain.src_storage_bin = cur_soi.storage_bin
                                          AND remain.src_storage_loc =  cur_soi.storage_location
                                          AND remain.line_supplierid =  v_lifnr;
                              END;

                              IF full_box_flag = 'N'
                              /* 2.2.2.2.1. Normal ItemType, No supplier id is specified, SOI, Full box, No full box remain. */
                              THEN
                                 IF n_qty_a >= n_full_box_qty
                                 THEN
                                    --if item not exists in full_box_remain,it will insert into full_box_main
                                    INSERT INTO full_box_remain (
                                                                    matnr,
                                                                    werks,
                                                                    physical_plant,
                                                                    header_supplierid,
                                                                    production_line,
                                                                    src_storage_type,
                                                                    src_storage_bin,
                                                                    src_storage_loc,
                                                                    line_supplierid,
                                                                    remain_qty,
                                                                    old_remain_qty
                                               )
                                      VALUES   (cur_soi.matnr,
                                                cur_soi.werks,
                                                v_plant,
                                                v_header_supplierid,
                                                v_prd_line,
                                                v_stype,
                                                v_sbin,
                                                v_sloc,
                                                v_lifnr,
                                                n_remain_qty,
                                                0);

                                    INSERT INTO mid_mo_line (
                                                                productionordid,
                                                                bomname,
                                                                mo_type,
                                                                matnr,
                                                                werks,
                                                                physical_plant,
                                                                src_storage_type,
                                                                src_storage_loc,
                                                                src_storage_bin,
                                                                dest_storage_type,
                                                                dest_storage_loc,
                                                                dest_storage_bin,
                                                                pull_type,
                                                                inventory_type,
                                                                line_supplierid,
                                                                header_supplierid,
                                                                pull_qty,
                                                                is_cqe,
                                                                is_active_line,
                                                                production_line,
                                                                sys_source,
                                                                dept,
                                                                whs_no,
                                                                remark,
                                                                posnr,
                                                                BUILD_ENTITY,
                                                                sys_timestamp
                                               )
                                      VALUES   (cur_mo.mo_id,
                                                cur_mo.bomname,
                                                v_mo_type,
                                                v_matnr,
                                                v_werks,
                                                v_plant,
                                                v_stype,
                                                v_sloc,
                                                v_sbin,
                                                'DUMMY',
                                                'DUMMY',
                                                'DUMMY',
                                                v_pull_type,
                                                v_inv_type,
                                                v_line_supplierid,
                                                v_header_supplierid,
                                                n_qty_left,
                                                v_is_cqe,
                                                'Y',
                                                v_prd_line,
                                                gv_sys_source,
                                                gv_dept,
                                                v_whs_no,
                                                cur_mo.remark,
                                                cur_mo.posnr,
                                                cur_mo.BUILD_ENTITY,
                                                :v_sysdate);

                                    UPDATE   mid_mo_line
                                       SET   header_supplierid =
                                                (SELECT   DISTINCT owner
                                                   FROM   ui_sourcing_priority
                                                  WHERE   logical_plant =  v_werks
                                                          AND storage_type = v_stype
                                                          AND storage_location = v_sloc
                                                          AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                                     WHERE       productionordid = v_mo_id
                                             AND werks = v_werks
                                             AND matnr = v_matnr
                                             AND src_storage_type = v_stype
                                             AND src_storage_loc = v_sloc
                                             AND src_storage_bin = v_sbin
                                             AND pull_type = v_pull_type;

                                    UPDATE   inventory
                                       SET   qty_available = qty_available - n_full_box_qty,
                                             qty_consumed = IFNULL (qty_consumed, 0) + n_full_box_qty
                                     WHERE       werks = v_werks
                                             AND matnr = v_matnr
                                             AND lifnr = v_lifnr
                                             AND storage_type = v_stype
                                             AND storage_bin = v_sbin
                                             AND storage_location = v_sloc
                                             AND sys_source = gv_sys_source
                                             AND dept = gv_dept
                                             AND hold_type = 'A';

                                    n_qty_left := 0;
                                    
                                    SIGNAL next_mo;
                                    --GOTO next_mo;
                                 ELSEIF FLOOR (n_qty_a / n_box_size) * n_box_size <= n_qty_a AND n_full_box_qty > n_qty_a /*Added by Fred Wan 20100316 to fix issue of zero pull qty -INC000000250171*/
                                        AND FLOOR (n_qty_a / n_box_size) * n_box_size > 0
                                 THEN
                                    INSERT INTO mid_mo_line (
                                                                productionordid,
                                                                bomname,
                                                                mo_type,
                                                                matnr,
                                                                werks,
                                                                physical_plant,
                                                                src_storage_type,
                                                                src_storage_loc,
                                                                src_storage_bin,
                                                                dest_storage_type,
                                                                dest_storage_loc,
                                                                dest_storage_bin,
                                                                pull_type,
                                                                inventory_type,
                                                                line_supplierid,
                                                                header_supplierid,
                                                                pull_qty,
                                                                is_cqe,
                                                                is_active_line,
                                                                production_line,
                                                                sys_source,
                                                                dept,
                                                                whs_no,
                                                                remark,
                                                                posnr,
                                                                BUILD_ENTITY,
                                                                sys_timestamp
                                               )
                                      VALUES   (
                                                   cur_mo.mo_id,
                                                   cur_mo.bomname,
                                                   v_mo_type,
                                                   v_matnr,
                                                   v_werks,
                                                   v_plant,
                                                   v_stype,
                                                   v_sloc,
                                                   v_sbin,
                                                   'DUMMY',
                                                   'DUMMY',
                                                   'DUMMY',
                                                   v_pull_type,
                                                   v_inv_type,
                                                   v_line_supplierid,
                                                   v_header_supplierid,
                                                   FLOOR (
                                                      n_qty_a / n_box_size
                                                   )
                                                   * n_box_size,
                                                   v_is_cqe,
                                                   'Y',
                                                   v_prd_line,
                                                   gv_sys_source,
                                                   gv_dept,
                                                   v_whs_no,
                                                   cur_mo.remark,
                                                   cur_mo.posnr,
                                                   cur_mo.BUILD_ENTITY,
                                                   :v_sysdate
                                               );

                                    UPDATE   mid_mo_line
                                       SET   header_supplierid =
                                                (SELECT   DISTINCT owner
                                                   FROM   ui_sourcing_priority
                                                  WHERE   logical_plant = v_werks
                                                          AND storage_type = v_stype
                                                          AND storage_location = v_sloc
                                                          AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                                     WHERE       productionordid = v_mo_id
                                             AND werks = v_werks
                                             AND matnr = v_matnr
                                             AND src_storage_type = v_stype
                                             AND src_storage_loc = v_sloc
                                             AND src_storage_bin = v_sbin
                                             AND pull_type = v_pull_type;

                                    UPDATE   inventory
                                       SET   qty_available = qty_available - FLOOR ( n_qty_a / n_box_size ) * n_box_size,
                                             qty_consumed = IFNULL (qty_consumed, 0) + FLOOR (  n_qty_a / n_box_size )  * n_box_size
                                     WHERE       werks = v_werks
                                             AND matnr = v_matnr
                                             AND lifnr = v_lifnr
                                             AND storage_type = v_stype
                                             AND storage_bin = v_sbin
                                             AND storage_location = v_sloc
                                             AND sys_source = gv_sys_source
                                             AND dept = gv_dept
                                             AND hold_type = 'A';

                                    n_qty_left := n_qty_left - FLOOR (n_qty_a / n_box_size) * n_box_size;
                                    SIGNAL next_soi;
                                    --GOTO next_soi;
                                 END IF;
                              ELSE
                                        /* 2.2.2.2.2. Normal ItemType, No supplier id is specified, SOI, Full box, Has full box remain. */
                                 DECLARE CURSOR cursor_i FOR
                                   (SELECT   *
                                       FROM   full_box_remain
                                      WHERE   matnr = :v_matnr
                                              AND werks = :v_werks
                                              AND production_line =  :v_prd_line
                                              AND physical_plant = :v_plant
                                              AND src_storage_type = :v_stype
                                              AND src_storage_bin = :v_sbin
                                              AND src_storage_loc = :v_sloc
                                              AND remain_qty > 0);
                                FOR cur_i AS cursor_i DO
                                    IF n_qty_left > cur_i.remain_qty
                                    THEN
                                       INSERT INTO mid_mo_line (
                                                                   productionordid,
                                                                   bomname,
                                                                   mo_type,
                                                                   matnr,
                                                                   werks,
                                                                   physical_plant,
                                                                   src_storage_type,
                                                                   src_storage_loc,
                                                                   src_storage_bin,
                                                                   dest_storage_type,
                                                                   dest_storage_loc,
                                                                   dest_storage_bin,
                                                                   pull_type,
                                                                   inventory_type,
                                                                   line_supplierid,
                                                                   header_supplierid,
                                                                   pull_qty,
                                                                   is_cqe,
                                                                   is_active_line,
                                                                   production_line,
                                                                   sys_source,
                                                                   dept,
                                                                   whs_no,
                                                                   remark,
                                                                   posnr,
                                                                   BUILD_ENTITY,
                                                                   sys_timestamp
                                                  )
                                         VALUES   (cur_mo.mo_id,
                                                   cur_mo.bomname,
                                                   v_mo_type,
                                                   cur_i.matnr,
                                                   cur_i.werks,
                                                   cur_i.physical_plant,
                                                   cur_i.src_storage_type,
                                                   cur_i.src_storage_loc,
                                                   cur_i.src_storage_bin,
                                                   'DUMMY',
                                                   'DUMMY',
                                                   'DUMMY',
                                                   v_pull_type,
                                                   cur_soi.inventory_type,
                                                   cur_i.line_supplierid,
                                                   v_header_supplierid,
                                                   cur_i.remain_qty,
                                                   v_is_cqe,
                                                   'Y',
                                                   cur_i.production_line,
                                                   gv_sys_source,
                                                   gv_dept,
                                                   v_whs_no,
                                                   cur_mo.remark,
                                                   cur_mo.posnr,
                                                   cur_mo.BUILD_ENTITY,
                                                   :v_sysdate);

                                       n_qty_left := n_qty_left - cur_i.remain_qty;

                                       UPDATE   full_box_remain
                                          SET   remain_qty = 0
                                        WHERE   matnr = cur_i.matnr
                                                AND werks = cur_i.werks
                                                AND physical_plant = cur_i.physical_plant
                                                AND production_line = v_prd_line
                                                AND src_storage_type = cur_i.src_storage_type
                                                AND src_storage_bin = cur_i.src_storage_bin
                                                AND src_storage_loc =  cur_i.src_storage_loc
                                                AND line_supplierid = cur_i.line_supplierid;

                                       UPDATE   mid_mo_line
                                          SET   header_supplierid =
                                                   (SELECT   DISTINCT owner
                                                      FROM   ui_sourcing_priority
                                                     WHERE   logical_plant = v_werks
                                                             AND storage_type = v_stype
                                                             AND storage_location =  v_sloc
                                                             AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                                        WHERE       productionordid = v_mo_id
                                                AND werks = v_werks
                                                AND matnr = v_matnr
                                                AND src_storage_type = v_stype
                                                AND src_storage_loc = v_sloc
                                                AND src_storage_bin = v_sbin
                                                AND pull_type = v_pull_type;

                                       BEGIN
                                       
                                       DECLARE EXIT HANDLER FOR no_data_found--no record in full_box_remain
                                       BEGIN
                                        n_old_remain_qty := 0;
                                       END;
                                       DECLARE EXIT HANDLER FOR SQLEXCEPTION 
                                       BEGIN
                                        n_old_remain_qty := 0;
                                       END;                                       
                                       
                                          SELECT   DISTINCT old_remain_qty
                                            INTO   n_old_remain_qty
                                            FROM   full_box_remain remain
                                           WHERE   matnr = cur_i.matnr
                                                   AND werks = cur_i.werks
                                                   AND src_storage_bin =cur_i.src_storage_bin
                                                   AND src_storage_loc =cur_i.src_storage_loc
                                                   AND src_storage_type =cur_i.src_storage_type
                                                   AND production_line =cur_i.production_line
                                                   AND line_supplierid =cur_i.line_supplierid;
                                       END;
                                    ELSE
                                       INSERT INTO mid_mo_line (
                                                                   productionordid,
                                                                   bomname,
                                                                   mo_type,
                                                                   matnr,
                                                                   werks,
                                                                   physical_plant,
                                                                   src_storage_type,
                                                                   src_storage_loc,
                                                                   src_storage_bin,
                                                                   dest_storage_type,
                                                                   dest_storage_loc,
                                                                   dest_storage_bin,
                                                                   pull_type,
                                                                   inventory_type,
                                                                   line_supplierid,
                                                                   header_supplierid,
                                                                   pull_qty,
                                                                   is_cqe,
                                                                   is_active_line,
                                                                   production_line,
                                                                   sys_source,
                                                                   dept,
                                                                   whs_no,
                                                                   remark,
                                                                   posnr,
                                                                   BUILD_ENTITY,
                                                                   sys_timestamp
                                                  )
                                         VALUES   (cur_mo.mo_id,
                                                   cur_mo.bomname,
                                                   v_mo_type,
                                                   v_matnr,
                                                   v_werks,
                                                   v_plant,
                                                   v_stype,
                                                   v_sloc,
                                                   v_sbin,
                                                   'DUMMY',
                                                   'DUMMY',
                                                   'DUMMY',
                                                   v_pull_type,
                                                   v_inv_type,
                                                   v_line_supplierid,
                                                   v_header_supplierid,
                                                   n_qty_left,
                                                   v_is_cqe,
                                                   'Y',
                                                   v_prd_line,
                                                   gv_sys_source,
                                                   gv_dept,
                                                   v_whs_no,
                                                   cur_mo.remark,
                                                   cur_mo.posnr,
                                                   cur_mo.BUILD_ENTITY,
                                                   :v_sysdate);

                                       UPDATE   mid_mo_line
                                          SET   header_supplierid =
                                                   (SELECT   DISTINCT owner
                                                      FROM   ui_sourcing_priority
                                                     WHERE   logical_plant = v_werks
                                                             AND storage_type =  v_stype
                                                             AND storage_location =  v_sloc
                                                             AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                                        WHERE       productionordid = v_mo_id
                                                AND werks = v_werks
                                                AND matnr = v_matnr
                                                AND src_storage_type = v_stype
                                                AND src_storage_loc = v_sloc
                                                AND src_storage_bin = v_sbin
                                                AND pull_type = v_pull_type;

                                       UPDATE   full_box_remain
                                          SET   remain_qty =  remain_qty - n_qty_left
                                        WHERE   matnr = cur_i.matnr
                                                AND werks = cur_i.werks
                                                AND physical_plant =  cur_i.physical_plant
                                                AND production_line = v_prd_line
                                                AND src_storage_type = cur_i.src_storage_type
                                                AND src_storage_bin = cur_i.src_storage_bin
                                                AND src_storage_loc = cur_i.src_storage_loc
                                                AND line_supplierid = cur_i.line_supplierid;

                                       n_qty_left := 0;
                                       SIGNAL next_mo;
                                       --GOTO next_mo;
                                    END IF;                                
                                END FOR;

                                 IF (n_qty_left > 0)
                                 THEN
                                    v_is_cqe := 'N';
                                    -- Addition start by Zhang Lu, 2008-11-12
                                    -- Update n_full_box_qty and n_remain_qty based on current n_qty_left.
                                    n_full_box_qty := CEIL (n_qty_left / n_box_size) * n_box_size;
                                    n_remain_qty :=  CEIL (n_qty_left / n_box_size)  * n_box_size - n_qty_left;

                                    -- Addition end by Zhang Lu, 2008-11-12

                                    IF (CEIL (n_qty_left / n_box_size) * n_box_size > n_qty_a)
                                       AND n_qty_a >= FLOOR (n_qty_a / n_box_size) * n_box_size
                                    THEN
                                       n_qty_c2 :=  FLOOR (n_qty_a / n_box_size) * n_box_size;
                                       n_qty_left :=  n_qty_left - FLOOR (n_qty_a / n_box_size) * n_box_size;


                                       INSERT INTO mid_mo_line (
                                                                   productionordid,
                                                                   bomname,
                                                                   mo_type,
                                                                   matnr,
                                                                   werks,
                                                                   physical_plant,
                                                                   src_storage_type,
                                                                   src_storage_loc,
                                                                   src_storage_bin,
                                                                   dest_storage_type,
                                                                   dest_storage_loc,
                                                                   dest_storage_bin,
                                                                   pull_type,
                                                                   inventory_type,
                                                                   line_supplierid,
                                                                   header_supplierid,
                                                                   pull_qty,
                                                                   is_cqe,
                                                                   is_active_line,
                                                                   production_line,
                                                                   sys_source,
                                                                   dept,
                                                                   whs_no,
                                                                   remark,
                                                                   posnr,
                                                                   BUILD_ENTITY,
                                                                   sys_timestamp
                                                  )
                                         VALUES   (cur_mo.mo_id,
                                                   cur_mo.bomname,
                                                   v_mo_type,
                                                   v_matnr,
                                                   v_werks,
                                                   v_plant,
                                                   v_stype,
                                                   v_sloc,
                                                   v_sbin,
                                                   'DUMMY',
                                                   'DUMMY',
                                                   'DUMMY',
                                                   v_pull_type,
                                                   v_inv_type,
                                                   v_line_supplierid,
                                                   v_header_supplierid,
                                                   n_qty_c2,
                                                   v_is_cqe,
                                                   'Y',
                                                   v_prd_line,
                                                   gv_sys_source,
                                                   gv_dept,
                                                   v_whs_no,
                                                   cur_mo.remark,
                                                   cur_mo.posnr,
                                                   cur_mo.BUILD_ENTITY,
                                                   :v_sysdate);
                                    ELSE
                                       n_qty_c2 := CEIL (n_qty_left / n_box_size) * n_box_size;

                                       UPDATE   full_box_remain
                                          SET   remain_qty = n_qty_c2 - n_qty_left
                                        WHERE       matnr = cur_soi.matnr
                                                AND werks = cur_soi.werks
                                                AND physical_plant = v_plant
                                                AND header_supplierid =  v_header_supplierid
                                                AND production_line = v_prd_line
                                                AND src_storage_type =  v_stype
                                                AND src_storage_bin = v_sbin
                                                AND src_storage_loc = v_sloc
                                                AND line_supplierid = v_lifnr;

                                       INSERT INTO mid_mo_line (
                                                                   productionordid,
                                                                   bomname,
                                                                   mo_type,
                                                                   matnr,
                                                                   werks,
                                                                   physical_plant,
                                                                   src_storage_type,
                                                                   src_storage_loc,
                                                                   src_storage_bin,
                                                                   dest_storage_type,
                                                                   dest_storage_loc,
                                                                   dest_storage_bin,
                                                                   pull_type,
                                                                   inventory_type,
                                                                   line_supplierid,
                                                                   header_supplierid,
                                                                   pull_qty,
                                                                   is_cqe,
                                                                   is_active_line,
                                                                   production_line,
                                                                   sys_source,
                                                                   dept,
                                                                   whs_no,
                                                                   remark,
                                                                   posnr,
                                                                   BUILD_ENTITY,
                                                                   sys_timestamp
                                                  )
                                         VALUES   (cur_mo.mo_id,
                                                   cur_mo.bomname,
                                                   v_mo_type,
                                                   v_matnr,
                                                   v_werks,
                                                   v_plant,
                                                   v_stype,
                                                   v_sloc,
                                                   v_sbin,
                                                   'DUMMY',
                                                   'DUMMY',
                                                   'DUMMY',
                                                   v_pull_type,
                                                   v_inv_type,
                                                   v_line_supplierid,
                                                   v_header_supplierid,
                                                   n_qty_left,
                                                   v_is_cqe,
                                                   'Y',
                                                   v_prd_line,
                                                   gv_sys_source,
                                                   gv_dept,
                                                   v_whs_no,
                                                   cur_mo.remark,
                                                   cur_mo.posnr,
                                                   cur_mo.BUILD_ENTITY,
                                                   :v_sysdate);

                                       n_qty_left := 0;
                                    END IF;

                                    UPDATE   mid_mo_line
                                       SET   header_supplierid =
                                                (SELECT   DISTINCT owner
                                                   FROM   ui_sourcing_priority
                                                  WHERE   logical_plant = v_werks
                                                          AND storage_type =  v_stype
                                                          AND storage_location = v_sloc
                                                          AND mo_type = 'MO')	--2015.11.30  INC000002673742 added by baiying
                                     WHERE       productionordid = v_mo_id
                                             AND werks = v_werks
                                             AND matnr = v_matnr
                                             AND src_storage_type = v_stype
                                             AND src_storage_loc = v_sloc
                                             AND src_storage_bin = v_sbin
                                             AND pull_type = v_pull_type;

                                    UPDATE   inventory
                                       SET   qty_available =  qty_available - n_qty_c2,
                                             qty_consumed =  IFNULL (qty_consumed, 0) + n_qty_c2
                                     WHERE       werks = v_werks
                                             AND matnr = v_matnr
                                             AND lifnr = v_lifnr
                                             AND storage_type = v_stype
                                             AND storage_bin = v_sbin
                                             AND storage_location = v_sloc
                                             AND sys_source = gv_sys_source
                                             AND dept = gv_dept
                                             AND hold_type = 'A';

                                    IF (n_qty_left = 0)
                                    THEN
                                       SIGNAL next_mo;
                                       --GOTO next_mo;
                                    ELSE
                                       SIGNAL next_soi;
                                       --GOTO next_soi;
                                    END IF;
                                 ELSE
                                    SIGNAL next_mo;
                                    --GOTO next_mo;
                                 END IF;                              
                              END IF;-- 2.2.2.2.1 and 2.2.2.2.2 ends.

                              --<<next_soi>>
                              --NULL;
                               
                              END FOR;                                          
                     END IF;    -- 2.2.2.1 and 2.2.2.2 ends.                                       
                     END IF;   -- 2.2.1 and 2.2.2 ends              
                  END FOR;      
               END IF; -- 2.1 and 2.2 ends.


               IF (n_qty_left > 0)
               THEN                        --The supply for MO is insufficient
                  v_lack_flag := 'Y';
                  v_cancel_flag := 'Y';

                  IF (v_owner = 'MFGLS')
                  THEN
                     v_pull_type := 'EXCESS';
                  ELSEIF (v_owner = '1000045410' AND v_stype = 'HFU')
                  THEN
                     v_pull_type := 'SHIPPING';
                  ELSE
                     v_pull_type := 'NORMAL';
                  END IF;

                  IF (v_pull_type = 'SHIPPING')
                  THEN
                     v_header_supplierid := v_lifnr;
                  END IF;

                  /* Modify 8 - 2:
                                                                           * Manual MO CR
                  * Date: 2008-12-4    Author: zhaoliang
                  * where MO has NO_CUT_BACK = 1 and process_count < MAX_MO_CYCLE_COUNT-1,
                  * move the records to on_hold_mo_line
                  */
                  --2014.08.20 WO0000000075857 yuansheng1 added AB
                  BEGIN
                  DECLARE EXIT HANDLER FOR NO_DATA_FOUND
                  BEGIN
                    n_ui_supplier_cnt := -1; 
                  END;
                     n_ui_supplier_cnt := 0;

                     SELECT   COUNT (1)
                       INTO   n_ui_supplier_cnt
                       FROM   mid_supplier_priority
                      WHERE       MATNR = v_matnr
                              AND WERKS = v_werks
                              AND LIFNR = v_line_supplierid;

                  END;

                 --2014.08.20 WO0000000075857 yuansheng1 added AB

                 /*
                 IF (IFNULL (cur_mo.process_count, 0) < max_mo_cycle_cnt)      --NVL (cur_mo.no_cut_back, 0) = 1  2014.08.20 WO0000000075857 yuansheng1 added AB

                  THEN*/ --comment by FangYuan 
                  
                  	--注意：：在SQL中不能使用-(:n_qty_left)；数据会出错；因此使用了这种预处理的方法！
                  	 n_qty_left := :n_qty_left*(-1); 
                  
                     INSERT INTO on_hold_mo_line (productionordid,
                                                  werks,
                                                  bomname,
                                                  src_storage_type,
                                                  src_storage_loc,
                                                  src_storage_bin,
                                                  dest_storage_type,
                                                  dest_storage_loc,
                                                  dest_storage_bin,
                                                  pull_type,
                                                  inventory_type,
                                                  line_supplierid,
                                                  header_supplierid,
                                                  pull_qty,
                                                  is_cqe,
                                                  is_active_line,
                                                  production_line,
                                                  delivery_date,
                                                  sys_source,
                                                  matnr,
                                                  status,
                                                  physical_plant,
                                                  sys_timestamp,
                                                  cancel_reason,
                                                  whs_no,
                                                  BUILD_ENTITY)
                       VALUES   (cur_mo.mo_id,
                                 v_werks,
                                 cur_mo.bomname,
                                 v_stype,
                                 v_sloc,
                                 v_sbin,
                                 'DUMMY',
                                 'DUMMY',
                                 'DUMMY',
                                 v_pull_type,
                                 v_inv_type,
                                 v_line_supplierid,
                                 v_header_supplierid,
                                 :n_qty_left,
                                 v_is_cqe,
                                 'N',
                                 v_prd_line,
                                 NULL,
                                 gv_sys_source,
                                 v_matnr,
                                 gv_status,
                                 v_plant,
                                 v_sysdate,
                                  CASE
                                       WHEN  v_pull_type = 'NORMAL'
                                            AND v_inv_type = 'SOI'
                                            AND n_ui_supplier_cnt = 0   --2014.08.20 WO0000000075857 yuansheng1 added AB
                                       THEN
                                          'INVENTORY_SHORT'  -- changed NO_SUPPLIER_MAPPING  --> INVENTORY_SHORT by xwu 2016/3/3
                                       WHEN v_pull_type = 'NORMAL'
                                            AND n_box_size_count > 0
                                       THEN
                                          'FULL_BOX_SIZE_INVENTORY_SHORT'
                                       ELSE
                                          'INVENTORY_SHORT'
                                    END,
                                 v_whs_no,
                                 cur_mo.BUILD_ENTITY);
                  /*           
                  ELSE
                     INSERT INTO mid_cancel_mo_line (productionordid,
                                                     bomname,
                                                     mo_type,
                                                     matnr,
                                                     werks,
                                                     physical_plant,
                                                     src_storage_type,
                                                     src_storage_loc,
                                                     src_storage_bin,
                                                     dest_storage_type,
                                                     dest_storage_loc,
                                                     dest_storage_bin,
                                                     pull_type,
                                                     inventory_type,
                                                     line_supplierid,
                                                     header_supplierid,
                                                     pull_qty,
                                                     is_cqe,
                                                     is_active_line,
                                                     production_line,
                                                     cancel_reason,
                                                     status,
                                                     sys_source,
                                                     dept,
                                                     whs_no)
                       VALUES   (cur_mo.mo_id,
                                 cur_mo.bomname,
                                 cur_mo.mo_type,
                                 v_matnr,
                                 v_werks,
                                 v_plant,
                                 v_stype,
                                 v_sloc,
                                 v_sbin,
                                 'DUMMY',
                                 'DUMMY',
                                 'DUMMY',
                                 v_pull_type,
                                 v_inv_type,
                                 v_line_supplierid,
                                 v_header_supplierid,
                                 - (:n_qty_left),
                                 v_is_cqe,
                                 'N',
                                 v_prd_line,
                                 'INVENTORY_SHORT',
                                 gv_status,
                                 gv_sys_source,
                                 gv_dept,
                                 v_whs_no);
                  END IF;*/--comment by FangYuan

                  -- end modify

                  --  DELETE FROM MID_INVENTORY;

                  --V_MSG := 'MO [' || V_MO_ID || '] BOM [' || V_BOMNAME || '], Needs ' || N_QTY || ' ' || V_MATNR || ', but Missing ' || N_QTY_LEFT;
                  --DBMS_OUTPUT.PUT_LINE(V_MSG);
                
                   /* comment by xwu 2016/3/3 
                   logidj:=0;
                   CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI');  
                  */
                
               /*
                                                                                                                                                                  ELSE --The supply for MO is sufficient
                   DELETE FROM MID_INVENTORY;
               */
               END IF;               
            END IF;-- 1 and 2 ends.
            
        END; 
        
         --<<next_mo>>
         --  DELETE FROM MID_INVENTORY; 
         v_pre_mo_id := cur_mo.mo_id;
         v_pre_BUILD_ENTITY := cur_mo.BUILD_ENTITY; --add by FangYuan
         --v_pre_no_cut_back := IFNULL (cur_mo.no_cut_back, 0); -- add by zhaoliang --comment by FangYuan
         --v_pre_process_count := IFNULL (cur_mo.process_count, 0); -- add by zhaoliang --comment by FangYuan
         n_count_rows := n_count_rows + 1;                
      END FOR;
      END;
      
      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF loop Cur_MO, total ' || n_count_rows || ' MO line(s)');  
      

      IF (n_count_rows = 0)
      THEN

      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'There is no contented MO for Cursor Cur_MO, please check data carefully!');        
      
         --GOTO done;
      ELSE


      /* Step 4:
                                                       * Need to cancel the Last MO due to insufficient supply.
       */
      BEGIN
         IF (v_cancel_flag = 'Y')
         THEN          --Need to cancel the Last MO due to insufficient supply
            BEGIN
               /* Modify 8 - 3:
                                                       # Manual MO CR
                * Date: 2008-12-4    Author: zhaoliang
                * where MO has NO_CUT_BACK = 1 and process_count < MAX_MO_CYCLE_COUNT-1,
                * move the records to on_hold_mo_line
                */

                --2014.08.20 WO0000000075857 yuansheng1 added AB
             BEGIN
             DECLARE EXIT HANDLER FOR NO_DATA_FOUND
             BEGIN
                n_ui_supplier_cnt := -1;
             END;
                  n_ui_supplier_cnt := 0;

                  SELECT   COUNT (1)
                    INTO   n_ui_supplier_cnt
                    FROM   mid_supplier_priority
                   WHERE   (MATNR, WERKS, LIFNR) IN
                                 (SELECT   DISTINCT MATNR, WERKS, LINE_SUPPLIERID
                                    FROM   mid_mo_line mo
                                   WHERE   mo.productionordid = v_pre_mo_id
                                           AND mo.inventory_type = 'SOI'
                                           AND mo.pull_type = 'NORMAL'
                                           AND mo.matnr = v_matnr
                                           AND mo.pull_qty < 0);

               END;

                 --2014.08.20 WO0000000075857 yuansheng1 added AB

               /*
               IF (IFNULL(v_pre_process_count, 0) < max_mo_cycle_cnt)--NVL (v_pre_no_cut_back, 0) = 1  2014.08.20 WO0000000075857 yuansheng1 added AB

               THEN*/--comment by FangYuan
                  INSERT INTO on_hold_mo_line (productionordid,
                                               werks,
                                               bomname,
                                               src_storage_type,
                                               src_storage_loc,
                                               src_storage_bin,
                                               dest_storage_type,
                                               dest_storage_loc,
                                               dest_storage_bin,
                                               pull_type,
                                               inventory_type,
                                               line_supplierid,
                                               header_supplierid,
                                               pull_qty,
                                               is_cqe,
                                               is_active_line,
                                               production_line,
                                               delivery_date,
                                               sys_source,
                                               matnr,
                                               status,
                                               physical_plant,
                                               sys_timestamp,
                                               cancel_reason,
                                               whs_no,
                                               BUILD_ENTITY)
                     SELECT   mo.productionordid,
                              mo.werks,
                              mo.bomname,
                              mo.src_storage_type,
                              mo.src_storage_loc,
                              mo.src_storage_bin,
                              mo.dest_storage_type,
                              mo.dest_storage_loc,
                              mo.dest_storage_bin,
                              mo.pull_type,
                              mo.inventory_type,
                              mo.line_supplierid,
                              mo.header_supplierid,
                              mo.pull_qty,
                              mo.is_cqe,
                              mo.is_active_line,
                              mo.production_line,
                              mo.delivery_date,
                              mo.sys_source,
                              mo.matnr,
                              NULL,
                              mo.physical_plant,
                              v_sysdate,
                               CASE
                                 WHEN mo.pull_qty < 0
                                      AND (    mo.pull_type = 'NORMAL'
                                           AND mo.matnr = v_matnr
                                           AND mo.inventory_type = 'SOI'
                                           AND n_ui_supplier_cnt = 0) --2014.08.20 WO0000000075857 yuansheng1 added AB
                                 THEN
                                    'INVENTORY_SHORT'   -- changed NO_SUPPLIER_MAPPING  --> INVENTORY_SHORT by xwu 2016/3/3
                                 WHEN     mo.pull_qty < 0
                                      AND mo.pull_type = 'NORMAL'
                                      AND n_box_size > 0
                                 THEN
                                    'FULL_BOX_SIZE_INVENTORY_SHORT'
                                 WHEN mo.pull_qty < 0
                                 THEN
                                    'INVENTORY_SHORT'
                                 ELSE
                                    ''
                              END,
                              mo.whs_no,
                              BUILD_ENTITY
                       FROM   mid_mo_line mo
                      WHERE   mo.productionordid = v_pre_mo_id;
               /*
               ELSE
                  UPDATE   inventory i
                     SET   qty_available = qty_init,
                           qty_consumed = qty_consumed - (qty_init - qty_available)
                   WHERE   (matnr,
                            werks,
                            storage_location,
                            storage_type,
                            storage_bin,
                            MAP (lifnr, 'NONE', '3PL', lifnr)) IN
                                 (SELECT   matnr,
                                           werks,
                                           src_storage_loc,
                                           src_storage_type,
                                           src_storage_bin,
                                           line_supplierid
                                    FROM   mid_mo_line m
                                   WHERE   m.productionordid = v_pre_mo_id)
                           AND hold_type = 'A';

                  UPDATE   full_box_remain f
                     SET   remain_qty = old_remain_qty
                   WHERE   EXISTS
                              (SELECT   1
                                 FROM   mid_mo_line m
                                WHERE   f.matnr = m.matnr
                                        AND f.werks = m.werks
                                        AND f.src_storage_loc = m.src_storage_loc
                                        AND f.src_storage_type =  m.src_storage_type
                                        AND f.src_storage_bin = m.src_storage_bin
                                        AND f.production_line = m.production_line
                                        AND f.line_supplierid = m.line_supplierid
                                        AND m.productionordid = v_pre_mo_id);

                  DELETE FROM   full_box_remain
                        WHERE   remain_qty <= 0;

                  INSERT INTO mid_cancel_mo_line (productionordid,
                                                  werks,
                                                  matnr,
                                                  bomname,
                                                  mo_type,
                                                  physical_plant,
                                                  src_storage_type,
                                                  src_storage_loc,
                                                  src_storage_bin,
                                                  dest_storage_type,
                                                  dest_storage_loc,
                                                  dest_storage_bin,
                                                  pull_type,
                                                  inventory_type,
                                                  line_supplierid,
                                                  header_supplierid,
                                                  pull_qty,
                                                  is_cqe,
                                                  is_active_line,
                                                  production_line,
                                                  cancel_reason,
                                                  sys_source,
                                                  dept,
                                                  whs_no)
                     SELECT   productionordid,
                              werks,
                              matnr,
                              bomname,
                              mo_type,
                              physical_plant,
                              src_storage_type,
                              src_storage_loc,
                              src_storage_bin,
                              dest_storage_type,
                              dest_storage_loc,
                              dest_storage_bin,
                              pull_type,
                              inventory_type,
                              line_supplierid,
                              header_supplierid,
                              pull_qty,
                              is_cqe,
                              is_active_line,
                              production_line,
                              CASE
                                 WHEN pull_qty < 0 THEN 'INVENTORY_SHORT'
                                 ELSE ''
                              END,
                              sys_source,
                              dept,
                              whs_no
                       FROM   mid_mo_line
                      WHERE   productionordid = v_pre_mo_id;
               END IF;*/--comment by FangYuan

               -- end modify

               DELETE FROM   mid_mo_line
                     WHERE   productionordid = v_pre_mo_id;

			      logidj:=0;
			      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'MO ['
                                || v_pre_mo_id
                                || '] was canceled due to insufficient supply!');  

               v_cancel_flag := 'N';
            END;
         END IF;
      END;


      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF cancellation for mo line');  
                     
		SELECT count(1) into n_on_hold_cnt  --add by FangYuan
		from on_hold_mo_line where sys_timestamp=v_sysdate and BUILD_ENTITY = v_pre_BUILD_ENTITY;
		
		IF n_on_hold_cnt>0 then  

		
		
		INSERT INTO on_hold_mo_line (productionordid,
		                             werks,
		                             bomname,
		                             src_storage_type,
		                             src_storage_loc,
		                             src_storage_bin,
		                             dest_storage_type,
		                             dest_storage_loc,
		                             dest_storage_bin,
		                             pull_type,
		                             inventory_type,
		                             line_supplierid,
		                             header_supplierid,
		                             pull_qty,
		                             is_cqe,
		                             is_active_line,
		                             production_line,
		                             delivery_date,
		                             sys_source,
		                             matnr,
		                             status,
		                             physical_plant,
		                             sys_timestamp,
		                             cancel_reason,
		                             whs_no,
		                             BUILD_ENTITY)
		   SELECT mo.productionordid,
		          mo.werks,
		          mo.bomname,
		          mo.src_storage_type,
		          mo.src_storage_loc,
		          mo.src_storage_bin,
		          mo.dest_storage_type,
		          mo.dest_storage_loc,
		          mo.dest_storage_bin,
		          mo.pull_type,
		          mo.inventory_type,
		          mo.line_supplierid,
		          mo.header_supplierid,
		          mo.pull_qty,
		          mo.is_cqe,
		          mo.is_active_line,
		          mo.production_line,
		          mo.delivery_date,
		          mo.sys_source,
		          mo.matnr,
		          NULL,
		          mo.physical_plant,
		          v_sysdate,
		          'BUILD_ENTITY_INVENTORY_SHORT',
		          mo.whs_no,
		          mo.BUILD_ENTITY
		     FROM mid_mo_line mo
		    WHERE mo.BUILD_ENTITY = v_pre_BUILD_ENTITY AND sys_timestamp = v_sysdate;
		--delete from full_box_remain;                           
		--insert into  full_box_remain                       
		--select * from full_box_remain_copy;
		
		      DELETE FROM   mid_mo_line a
        WHERE BUILD_ENTITY=v_pre_BUILD_ENTITY and sys_timestamp=v_sysdate;
		
		  END IF;

      BEGIN
         /* Step 5:
                                                                            * Update Production_Line for PACKAGING/CANDYMAN/KANBANREPORT.
          * Only floor is needed.
          */

        DECLARE EXIT HANDLER FOR NO_DATA_FOUND 
        BEGIN
            --NULL;
        END;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION 
        BEGIN
            --n_sqlcode := SQLCODE;
            --v_sqlerrm := SUBSTR (SQLERRM, 1, 512);
            
            logidj:=0;
            CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'Failed to Update DESTINATION Storage Location/Type/Bin');  
                                    
        END;        

         UPDATE   mid_mo_line mo
            SET   (mo.production_line) =
                     (SELECT   DISTINCT flr.FLOOR
                        FROM   z_pcdw_ds_mo rep,
                               ui_line_floor_mapping flr
                       WHERE       rep.res_name = mo.production_line
                               AND mo.production_line = flr.ds_line
                               AND mo.physical_plant = flr.physical_plant)
          WHERE   EXISTS
                     (SELECT   1
                        FROM   z_pcdw_ds_mo upr1
                       WHERE   mo.productionordid = work_ord_num
                               AND upr1.status = 'IN_PROCESS')
                  AND (   mo.pull_type = 'PACKAGING'
                       OR mo.pull_type = 'CANDYMAN'
                       OR mo.pull_type = 'KANBANREPORT');

         /*
                                    UPDATE MID_MO_LINE mo
            SET (DEST_STORAGE_LOC, DEST_STORAGE_TYPE, DEST_STORAGE_BIN)=
            (select distinct nvl(A.STORAGE_LOCATION,'Dummy'), nvl(A.STORAGE_TYPE,'Dummy'), nvl(A.STORAGE_BIN,'Dummy')
              from ( SELECT distinct STORAGE_LOCATION, STORAGE_TYPE, STORAGE_BIN,DS_LINE
                   FROM MST_UI_LINE_FLOOR_MAPPING flr,
                        MST_UI_CONTROL_CYCLE cyc
                  WHERE flr.PHYSICAL_PLANT = cyc.PHYSICAL_PLANT)A
              where mo.productionordid=A.DS_LINE )
           WHERE mo.PULL_TYPE <> 'PACKAGING'
             AND mo.PULL_TYPE <> 'CANDYMAN'
             AND mo.PULL_TYPE <> 'KANBANREPORT'
             AND productionordid IN (select work_ord_num from z_pcdw_ds_mo);--Added 2007-11-25
         COMMIT;
         */

         /* Step 6:
                                     * Update (DEST_STORAGE_LOC, DEST_STORAGE_TYPE, DEST_STORAGE_BIN) for non-PACKAGING/CANDYMAN/KANBAN
          * if no control cycle or line to floor maintained, then the following
          * will set the dest storage loc/type/bin to NULL
          * otherwise it will set them to the correct values
          */
         UPDATE   mid_mo_line mo
            SET
                  (dest_storage_loc,
                  dest_storage_type,
                  dest_storage_bin
                  ) =
                     (SELECT   DISTINCT
                               storage_location, storage_type, storage_bin
                        FROM   ui_line_floor_mapping flr,
                               ui_control_cycle cyc
                       WHERE       flr.physical_plant = cyc.physical_plant
                               AND mo.physical_plant = flr.physical_plant
                               AND mo.production_line = flr.ds_line
                               AND mo.matnr = cyc.item)
          WHERE       mo.pull_type <> 'PACKAGING'
                  AND mo.pull_type <> 'CANDYMAN'
                  AND mo.pull_type <> 'KANBANREPORT'
                  AND productionordid IN (SELECT   work_ord_num
                                            FROM   z_pcdw_ds_mo
                                           WHERE   status = 'IN_PROCESS');

         --Added 2007-11-25
         --COMMIT;

         BEGIN
         DECLARE CURSOR cursor_dest FOR(SELECT   DISTINCT physical_plant,
                                            storage_location,
                                            storage_type,
                                            storage_bin
                            FROM   conf_destination_mapping);
         
        FOR cur_dest AS cursor_dest DO
        
            UPDATE   mid_mo_line mo
               SET   dest_storage_loc = cur_dest.storage_location,
                     dest_storage_type = cur_dest.storage_type,
                     dest_storage_bin = cur_dest.storage_bin
             WHERE       mo.pull_type <> 'PACKAGING'
                     AND mo.pull_type <> 'CANDYMAN'
                     AND mo.pull_type <> 'KANBANREPORT'
                     AND dest_storage_loc IS NULL
                     AND dest_storage_type IS NULL
                     AND dest_storage_bin IS NULL
                     AND (SELECT   flr.physical_plant
                            FROM   ui_line_floor_mapping flr
                           WHERE   production_line = flr.ds_line
                                   AND mo.physical_plant = flr.physical_plant) =
                           cur_dest.physical_plant
                     AND productionordid IN (SELECT   work_ord_num
                                               FROM   z_pcdw_ds_mo
                                              WHERE   status = 'IN_PROCESS');
         END FOR;
         END;

		
		 UPDATE   mid_mo_line mo 
               SET   dest_storage_loc = cmap.storage_location,
                     dest_storage_type = cmap.storage_type,
                     dest_storage_bin = cmap.storage_bin
             from "SZEBGVMI"."CONF_DESTINATION_MAPPING" cmap
             WHERE       mo.pull_type <> 'PACKAGING'
                     AND mo.pull_type <> 'CANDYMAN'
                     AND mo.pull_type <> 'KANBANREPORT'
                   
                     AND productionordid IN (SELECT   productionordid
                                               FROM   z_pcdw_mo MO
                                              WHERE   MO.ORDER_TYPE = 'ZPP2')
                     AND productionordid IN (SELECT   work_ord_num
                                               FROM   z_pcdw_ds_mo
                                              WHERE   status = 'IN_PROCESS')
                     and cmap.physical_plant = 'REWORK';
		


         /*UPDATE mid_mo_line mo
                                       SET dest_storage_loc = 'MW12',
                dest_storage_type = 'W12',
                dest_storage_bin = 'NOCC'
          WHERE mo.pull_type <> 'PACKAGING'
            AND mo.pull_type <> 'CANDYMAN'
            AND mo.pull_type <> 'KANBANREPORT'
            AND dest_storage_loc IS NULL
            AND dest_storage_type IS NULL
            AND dest_storage_bin IS NULL
            AND (SELECT flr.physical_plant
                   FROM mst_ui_line_floor_mapping flr
                  WHERE production_line = flr.ds_line) = 'ISH1'
            AND productionordid IN (SELECT work_ord_num
                                      FROM z_pcdw_ds_mo
                                     WHERE status = 'IN_PROCESS');   --Added 2007-11-25
         UPDATE mid_mo_line mo
            SET dest_storage_loc = 'MW22',
                dest_storage_type = 'W22',
                dest_storage_bin = 'NOCC'
          WHERE mo.pull_type <> 'PACKAGING'
            AND mo.pull_type <> 'CANDYMAN'
            AND mo.pull_type <> 'KANBANREPORT'
            AND dest_storage_loc IS NULL
            AND dest_storage_type IS NULL
            AND dest_storage_bin IS NULL
            AND (SELECT flr.physical_plant
                   FROM mst_ui_line_floor_mapping flr
                  WHERE production_line = flr.ds_line) = 'ISH2'
            AND productionordid IN (SELECT work_ord_num
                                      FROM z_pcdw_ds_mo
                                     WHERE status = 'IN_PROCESS');   --Added 2007-11-25
         UPDATE mid_mo_line mo
            SET dest_storage_loc = 'MW20',
                dest_storage_type = 'W20',
                dest_storage_bin = 'OPT'
          WHERE mo.pull_type <> 'PACKAGING'
            AND mo.pull_type <> 'CANDYMAN'
            AND mo.pull_type <> 'KANBANREPORT'
            AND dest_storage_loc IS NULL
            AND dest_storage_type IS NULL
            AND dest_storage_bin IS NULL
            AND (SELECT flr.physical_plant
                   FROM mst_ui_line_floor_mapping flr
                  WHERE production_line = flr.ds_line) = 'OPT'
            AND productionordid IN (SELECT work_ord_num
                                      FROM z_pcdw_ds_mo
                                     WHERE status = 'IN_PROCESS');   --Added 2007-11-25*/
         --COMMIT;

      END;

      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF production_line and Dest_Storage_LOC/TYPE/BIN update');  


      /* Step 7:
                                              * Set batch delivery time based on DS Lot Size.                                                                                                                                              * UPDATE DELIVERY_DATE Field for MID_MO_LINE
       * The same batch using minimal time.
       */
   /*   BEGIN 
         n_count := 0;
         n_count_rows := 0;
         n_qty_sum := 0;
         v_prd_line := NULL;

         BEGIN
         DECLARE CURSOR cursor_delivery FOR
          (  SELECT   mo.productionordid mo_id,
                        mo.bomname bomname,
                        mo.werks werks,
                        IFNULL (mo.qty, 0) qty,
                        rep.res_name ds_line,
                        rep.planned_sttm delivery_time
                 FROM   z_pcdw_mo mo, z_pcdw_ds_mo rep
                WHERE       mo.productionordid = rep.work_ord_num
                        --AND mo.bomname = rep.prod_name  --common by FangYuan 
                        AND mo.werks = rep.werks
                        AND rep.status = 'IN_PROCESS'
                        AND UPPER (mo.status) <> 'DELETED'
                        --Added on 2007-11-19
                        --AND mo.QTY     = rep.QTY
                        AND EXISTS
                              (SELECT   'x'
                                 FROM   mid_mo_line mid
                                WHERE   mid.productionordid = mo.productionordid)
             --AND NVL(mo.MO_TYPE, 'MO') = 'MO'
             ORDER BY   ds_line, seq_num --PRODUCTIONORDID,DS_LINE,DELIVERY_TIME
                                        --Modified @2007-7-27 by Wenfei
            );
         
         FOR cur_delivery AS cursor_delivery DO
            SELECT   mo_lot_size
              INTO   n_lot_size
              FROM   ui_plant_lot_size
             WHERE   ds_line = cur_delivery.ds_line
                     AND sys_auth_id = cur_delivery.werks;

            n_qty := cur_delivery.qty;

            IF (v_prd_line = cur_delivery.ds_line)
            THEN                                       -- same production line
               --NULL;
            ELSE
               n_qty_sum := 0;
               n_count := 0;
               v_date := cur_delivery.delivery_time;
            END IF;

            IF (n_qty >= n_lot_size)
            THEN                                        -- MO.QTY > Batch Size
               n_qty_sum := 0;
               n_count := 0;
               v_date := cur_delivery.delivery_time;
            ELSE
               IF (n_qty_sum <= n_lot_size)
               THEN
                  n_qty_sum := n_qty_sum + n_qty;

                  IF (n_qty_sum > n_lot_size)
                  THEN
                     n_qty_sum := n_qty;
                     v_date := cur_delivery.delivery_time;
                  END IF;

                  IF (n_count = 0)
                  THEN
                     v_date := cur_delivery.delivery_time;
                  END IF;

                  n_count := n_count + 1;
               ELSE                       --Excess maximum delivery capability
                  n_qty_sum := 0;
                  n_count := 0;
                  v_date := cur_delivery.delivery_time;
               END IF;
            END IF;

            v_prd_line := cur_delivery.ds_line;
            v_msg := 'DS_LINE=' || v_prd_line;
            v_msg := v_msg || ', MO_ID=' || cur_delivery.mo_id;
            v_msg := v_msg || ', QTY=' || n_qty;
            v_msg := v_msg || ', QTY_SUM=' || n_qty_sum;
            v_msg := v_msg || ', DLVR_Date=' || v_date;

            --  DBMS_OUTPUT.PUT_LINE(V_MSG);
            UPDATE   mid_mo_line
               SET   delivery_date = v_date
             WHERE       productionordid = cur_delivery.mo_id
                     AND bomname = cur_delivery.bomname
                     AND werks = cur_delivery.werks;

            n_count_rows := n_count_rows + 1;
         END FOR;
         END;

         --COMMIT;
      END;


      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF delivery date. ' || n_count_rows || ' record(s) updated.');  */ --comment by FangYuan
                     

    UPDATE mid_mo_line a
   SET delivery_date =
          (SELECT planned_sttm
             FROM z_pcdw_ds_mo b
            WHERE     b.status = 'IN_PROCESS'
                  AND a.productionordid = b.work_ord_num
                  AND a.werks = b.werks)
                  where a.sys_timestamp=v_sysdate;
    

      /* Step 8:
                                           * Insert table PULL_LINE with Pull Header ID and Pull Line ID.
       * Consolidate Pull_Header by PhysicalPlant, headerSupplierID, ProductionLine, DeliveryDate,
       * Werks, DestType, DestLoc, DestBin, PullType, InventoryType, (MOType).
       * Consolidate Pull_Line by PhysicalPlant, headerSupplierID, ProductionLine, DeliveryDate,
       * Werks, DestType, DestLoc, DestBin, PullType, InventoryType, (MOType), SrcLoc, SrcType, SrcBin, LineSupplierID, Material.
       */
      BEGIN
         n_count := 0;

         BEGIN
         DECLARE CURSOR cursor_pull FOR
                         (  SELECT   physical_plant,
                                     header_supplierid,
                                     production_line,
                                     delivery_date,
                                     werks,
                                     dest_storage_type,
                                     dest_storage_loc,
                                     dest_storage_bin,
                                     pull_type,
                                     inventory_type,
                                     mo_type
                              FROM   mid_mo_line
                             WHERE   status = :gv_status
                                     and sys_timestamp = :v_sysdate
                          GROUP BY   physical_plant,
                                     header_supplierid,
                                     production_line,
                                     delivery_date,
                                     werks,
                                     dest_storage_type,
                                     dest_storage_loc,
                                     dest_storage_bin,
                                     pull_type,
                                     inventory_type,
                                     mo_type,
                                     whs_no
                          ORDER BY   delivery_date, inventory_type ASC --Added on 2007-8-13
                                                                      );
                                                                      
         FOR cur_pull AS cursor_pull DO
         
            v_msg := 'Previous Record Values --- ';
            v_msg := v_msg || '  V_PLANT=' || v_plant;
            v_msg := v_msg || '  V_HEADER_ID=' || v_header_id;
            v_msg := v_msg || ', V_PRD_LINE=' || v_prd_line;
            v_msg := v_msg || ', V_DATE=' || v_date;
            v_msg := v_msg || '  V_WERKS=' || v_werks;
            v_msg := v_msg || ', V_DEST_TYPE=' || v_dest_type;
            v_msg := v_msg || ', V_DEST_LOC=' || v_dest_loc;
            v_msg := v_msg || ', V_DEST_BIN=' || v_dest_bin;
            v_msg := v_msg || ', V_PULL_TYPE=' || v_pull_type;
            v_msg := v_msg || ', V_INV_TYPE=' || v_inv_type;
            v_msg := v_msg || ', V_MO_TYPE=' || v_mo_type;
            --DBMS_OUTPUT.PUT_LINE(V_MSG);
            v_msg := 'Current Record Values --- ';
            v_msg := v_msg || ', V_PLANT=' || cur_pull.physical_plant;
            v_msg := v_msg || ', V_HEADER_ID=' || cur_pull.header_supplierid;
            v_msg := v_msg || ', V_PRD_LINE=' || cur_pull.production_line;
            v_msg := v_msg || ', V_DATE=' || cur_pull.delivery_date;
            v_msg := v_msg || '  V_WERKS=' || cur_pull.werks;
            v_msg := v_msg || ', V_DEST_TYPE=' || cur_pull.dest_storage_type;
            v_msg := v_msg || ', V_DEST_LOC=' || cur_pull.dest_storage_loc;
            v_msg := v_msg || ', V_DEST_BIN=' || cur_pull.dest_storage_bin;
            v_msg := v_msg || ', V_PULL_TYPE=' || cur_pull.pull_type;
            v_msg := v_msg || ', V_INV_TYPE=' || cur_pull.inventory_type;
            v_msg := v_msg || ', V_MO_TYPE=' || cur_pull.mo_type;

            --DBMS_OUTPUT.PUT_LINE(V_MSG);
            IF (    v_plant = cur_pull.physical_plant
                AND v_header_id = cur_pull.header_supplierid
                AND v_prd_line = cur_pull.production_line
                AND v_date = cur_pull.delivery_date
                AND v_werks = cur_pull.werks
                AND v_dest_type = cur_pull.dest_storage_type
                AND v_dest_loc = cur_pull.dest_storage_loc
                AND v_dest_bin = cur_pull.dest_storage_bin
                AND v_pull_type = cur_pull.pull_type
                AND v_inv_type = cur_pull.inventory_type
                AND v_mo_type = cur_pull.mo_type)
            THEN                          -- This means It's in the same group
               --NULL;
            --DBMS_OUTPUT.PUT_LINE('It is in a same group');
            ELSE                           -- This means It starts a new group
               --  DBMS_OUTPUT.PUT_LINE('It starts a new group');
               n_count := n_count + 1;

               SELECT   "cdp.szebgvmi.sequences::SEQ_PULL_HEADER_ID".NEXTVAL
                 INTO   v_pull_header_id
                 FROM   DUMMY;
            END IF;

            v_plant := cur_pull.physical_plant;
            v_header_id := cur_pull.header_supplierid;
            v_prd_line := cur_pull.production_line;
            v_date := cur_pull.delivery_date;
            v_werks := cur_pull.werks;
            v_dest_type := cur_pull.dest_storage_type;
            v_dest_loc := cur_pull.dest_storage_loc;
            v_dest_bin := cur_pull.dest_storage_bin;
            v_pull_type := cur_pull.pull_type;
            v_inv_type := cur_pull.inventory_type;
            v_mo_type := cur_pull.mo_type;

            
            BEGIN
            DECLARE CURSOR cursor_item FOR
               (  SELECT   src_storage_type,
                           src_storage_bin,
                           src_storage_loc,
                           line_supplierid,
                           matnr,
                           SUM (pull_qty) sum_qty,
                           remark,
                           whs_no
                    FROM   mid_mo_line
                   WHERE   physical_plant = :v_plant
                           AND IFNULL (header_supplierid, 'HEADER_SUPPLIERID') =
                                 IFNULL (:v_header_id,  'HEADER_SUPPLIERID')
                           AND production_line = :v_prd_line
                           AND delivery_date = :v_date
                           AND werks = :v_werks
                           AND dest_storage_type = :v_dest_type
                           AND dest_storage_loc = :v_dest_loc
                           AND dest_storage_bin = :v_dest_bin
                           AND pull_type = :v_pull_type
                           AND inventory_type = :v_inv_type
                           AND IFNULL (mo_type, 'MO') = IFNULL (:v_mo_type, 'MO')
                           AND status = :gv_status
                           AND sys_timestamp = :v_sysdate
                GROUP BY   physical_plant,
                           header_supplierid,
                           production_line,
                           delivery_date,
                           werks,
                           dest_storage_type,
                           dest_storage_loc,
                           dest_storage_bin,
                           pull_type,
                           inventory_type,
                           mo_type,
                           src_storage_type,
                           src_storage_bin,
                           src_storage_loc,
                           line_supplierid,
                           matnr,
                           remark,
                           whs_no);
            
            FOR cur_item AS cursor_item DO
               v_msg := 'INSERT INTO PULL_LINE. ';
               v_msg :=
                  v_msg || ', SRC_STORAGE_LOC=' || cur_item.src_storage_loc;
               v_msg :=
                  v_msg || ', SRC_STORAGE_TYPE=' || cur_item.src_storage_type;
               v_msg :=
                  v_msg || ', SRC_STORAGE_BIN=' || cur_item.src_storage_bin;
               v_msg := v_msg || ', SUPPLIER_ID=' || cur_item.line_supplierid;
               v_msg := v_msg || ', MATNR=' || cur_item.matnr;
               v_msg := v_msg || ', PHYSICAL_PLANT=' || v_plant || ', SYS_TIMESTAMP=' || v_sysdate;

               --  DBMS_OUTPUT.PUT_LINE(V_MSG);

               /*
                                                                SELECT COUNT(*)
                     INTO n_old_records
                     FROM PULL_LINE
                    WHERE PHYSICAL_PLANT     = Cur_Pull.PHYSICAL_PLANT
                      AND HEADER_SUPPLIERID  = Cur_Pull.HEADER_SUPPLIERID
                      AND PRODUCTION_LINE    = Cur_Pull.PRODUCTION_LINE
                      AND DELIVERY_DATE      = Cur_Pull.DELIVERY_DATE
                      AND WERKS              = Cur_Pull.WERKS
                      AND DEST_STORAGE_TYPE  = Cur_Pull.DEST_STORAGE_TYPE
                      AND DEST_STORAGE_LOC   = Cur_Pull.DEST_STORAGE_LOC
                      AND DEST_STORAGE_BIN   = Cur_Pull.DEST_STORAGE_BIN
                      AND PULL_TYPE          = Cur_Pull.PULL_TYPE
                      AND INVENTORY_TYPE     = Cur_Pull.INVENTORY_TYPE
                      AND NVL(MO_TYPE,'MO')  = NVL(Cur_Pull.MO_TYPE,'MO');
               */

               --2013.07.16 MEX CSE Project Set SA NUMBER Value baiying AS
               v_itemdesc := '';
               BEGIN
               DECLARE EXIT HANDLER FOR NO_DATA_FOUND
               BEGIN
                v_itemdesc := '';
               END;
                  SELECT   DISTINCT ITEMDESC
                    INTO   v_itemdesc
                    FROM   ITEMSITEMASTER itm
                   WHERE       ITEM = cur_item.Matnr
                           AND SITEID = cur_pull.werks
                           AND SYS_ENT_STATE = 'ACTIVE'
                   LIMIT  1;

               END;

               IF (    v_inv_type = 'SOI'
                   AND v_pull_type <> 'CANDYMAN'
                   AND v_pull_type <> 'PACKAGING'
                   AND v_pull_type <> 'KANBANREPORT')
               THEN
                  n_temp_count := 0;
                  v_sa_num := '';
                  v_sa_line_id := '00000';

                  SELECT   COUNT ( * )
                    INTO   n_temp_count
                    FROM   SA
                   WHERE       MATNR = cur_item.matnr
                           AND LIFNR = cur_item.line_supplierid
                           AND Werks = cur_pull.werks
                           AND STATUS = 'ACTIVE'
                           AND TO_VARCHAR (start_date,'YYYYMMDD') <=TO_VARCHAR (CURRENT_DATE,'YYYYMMDD') 
                           AND TO_VARCHAR (end_date,'YYYYMMDD') >=TO_VARCHAR (CURRENT_DATE,'YYYYMMDD') ;

                  IF n_temp_count > 0
                  THEN
                     SELECT   SA_NUMBER, SA_LINE_ID
                       INTO   v_sa_num, v_sa_line_id
                       FROM   (  SELECT   SA_NUMBER, SA_LINE_ID
                                   FROM   SA
                                  WHERE       MATNR = cur_item.matnr
                                          AND LIFNR = cur_item.line_supplierid
                                          AND Werks = cur_pull.werks
                                          AND STATUS = 'ACTIVE'
                                          AND TO_VARCHAR (start_date,'YYYYMMDD') <=TO_VARCHAR (CURRENT_DATE,'YYYYMMDD') 
                                          AND TO_VARCHAR (end_date,'YYYYMMDD') >=TO_VARCHAR (CURRENT_DATE,'YYYYMMDD') 
                               ORDER BY   OPEN_QTY DESC, CREATE_DATE ASC) A
                      LIMIT 1;
                  ELSE
                     n_temp_count := 0;
                     v_sa_num := '';
                     v_sa_line_id := '00000';
                  END IF;
               END IF;

               --2013.07.16 MEX CSE Project Set SA NUMBER Value baiying AE

               IF (cur_item.sum_qty != 0)
               THEN
                  INSERT INTO pull_line (werks,
                                         matnr,
                                         line_supplierid,
                                         physical_plant,
                                         src_storage_loc,
                                         src_storage_type,
                                         src_storage_bin,
                                         dest_storage_loc,
                                         dest_storage_type,
                                         dest_storage_bin,
                                         production_line,
                                         inventory_type,
                                         mo_type,
                                         header_supplierid,
                                         pull_type,
                                         pull_qty,
                                         pull_line_id,
                                         pull_header_id,
                                         delivery_date,
                                         status,
                                         sys_source,
                                         dept,
                                         remark,
                                         whs_no, --2013.07.17 MEX CSE Project baiying AS
                                         sa_number,
                                         sa_line_id,
                                         sys_created_date,
                                         sys_created_by,
                                         SYS_AUTH_ID,
                                         sys_timestamp,
                                         matnr_descr --2013.07.17 MEX CSE Project baiying AS
                                                    )
                    VALUES   (cur_pull.werks,
                              cur_item.matnr,
                              cur_item.line_supplierid,
                              v_plant,
                              cur_item.src_storage_loc,
                              cur_item.src_storage_type,
                              cur_item.src_storage_bin,
                              cur_pull.dest_storage_loc,
                              cur_pull.dest_storage_type,
                              cur_pull.dest_storage_bin,
                              cur_pull.production_line,
                              cur_pull.inventory_type,
                              cur_pull.mo_type,
                              cur_pull.header_supplierid,
                              cur_pull.pull_type,
                              cur_item.sum_qty,
                              "cdp.szebgvmi.sequences::SEQ_PULL_LINE_ID".NEXTVAL,
                              v_pull_header_id,
                              cur_pull.delivery_date,
                              'IN_PROCESS',
                              gv_sys_source,
                              gv_dept,
                              cur_item.remark,
                              cur_item.whs_no, --2013.07.17 MEX CSE Project baiying AS
                              v_sa_num,
                              v_sa_line_id,
                              v_sysdate,
                              v_logic_proc_name,
                              cur_pull.werks,
                              :v_sysdate,
                              v_itemdesc --2013.07.17 MEX CSE Project baiying AE
                                        );
               END IF;
            END FOR;
            END;
         END FOR;
         END;
         --COMMIT;
      END;


      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF pull line generation.');  


      /* Step 9:
       * Add Pull Header ID and Pull Line ID for MID_MO_LINE.                                                                                                                                                                     * update (PULL_LINE_ID, PULL_HEADER_ID) of MID_MO_LINE
       */
      BEGIN

               DECLARE EXIT HANDLER FOR NO_DATA_FOUND
               BEGIN

                logidj:=0;
                CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'NO_DATA_FOUND Exception occured! Failed to Update (pull_line_id, pull_header_id) on mid_mo_line!'); 

               END;
               DECLARE EXIT HANDLER FOR more_than_req
               BEGIN
                
                logidj:=0;
                CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'Table pull_line and mid_mo_line does not have 1:1 relationship!');                 
               END;
               DECLARE EXIT HANDLER FOR sqlexception
               BEGIN
                logidj:=0;
                CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'WARN',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_DETAIL=>'Failed to Update (pull_line_id, pull_header_id) for mid_mo_line!');                  
               END;               

         n_count_rows := 0;

         --Because "FOR UPDATE OF" Clause Can't used with "GROUP BY" Clause,
         --So We have to update MID_MO_LINE alone
         /*
         UPDATE   mid_mo_line mo
            SET
                  (pull_line_id,
                  pull_header_id
                  ) =
                     (SELECT   DISTINCT pl.pull_line_id, pl.pull_header_id
                        FROM   pull_line pl, z_pcdw_ds_mo upr
                       WHERE   pl.werks = mo.werks
                               AND pl.header_supplierid =
                                     mo.header_supplierid
                               AND pl.physical_plant = mo.physical_plant
                               AND pl.dest_storage_loc = mo.dest_storage_loc
                               AND pl.dest_storage_type =
                                     mo.dest_storage_type
                               AND pl.dest_storage_bin = mo.dest_storage_bin
                               AND pl.production_line = mo.production_line
                               AND pl.inventory_type = mo.inventory_type
                               AND pl.pull_type = mo.pull_type
                               AND IFNULL (pl.mo_type, 'NVL') =
                                     IFNULL (mo.mo_type, 'NVL')
                               --MO_TYPE maybe is NULL
                               AND pl.delivery_date = mo.delivery_date
                               AND pl.matnr = mo.matnr
                               AND pl.line_supplierid = mo.line_supplierid
                               AND pl.src_storage_loc = mo.src_storage_loc
                               AND pl.src_storage_type = mo.src_storage_type
                               AND pl.src_storage_bin = mo.src_storage_bin
                               AND pl.status = 'IN_PROCESS'     --'IN_PROCESS'
                               AND mo.productionordid = upr.work_ord_num
                               AND upr.status = gv_status)
          WHERE   productionordid IN (SELECT   work_ord_num
                                        FROM   z_pcdw_ds_mo
                                       WHERE   status = gv_status);*/
                                       
            UPDATE   mid_mo_line mo
            SET
                  (pull_line_id,
                  pull_header_id
                  ) =
                     (pl.pull_line_id, pl.pull_header_id)
                        FROM   pull_line pl, z_pcdw_ds_mo upr
                       WHERE   pl.werks = mo.werks
                               AND pl.header_supplierid =
                                     mo.header_supplierid
                               AND pl.physical_plant = mo.physical_plant
                               AND pl.dest_storage_loc = mo.dest_storage_loc
                               AND pl.dest_storage_type =
                                     mo.dest_storage_type
                               AND pl.dest_storage_bin = mo.dest_storage_bin
                               AND pl.production_line = mo.production_line
                               AND pl.inventory_type = mo.inventory_type
                               AND pl.pull_type = mo.pull_type
                               AND IFNULL (pl.mo_type, 'NVL') =
                                     IFNULL (mo.mo_type, 'NVL')
                               --MO_TYPE maybe is NULL
                               AND pl.delivery_date = mo.delivery_date
                               AND pl.matnr = mo.matnr
                               AND pl.line_supplierid = mo.line_supplierid
                               AND pl.src_storage_loc = mo.src_storage_loc
                               AND pl.src_storage_type = mo.src_storage_type
                               AND pl.src_storage_bin = mo.src_storage_bin
                               AND pl.status = 'IN_PROCESS'     --'IN_PROCESS'
                               AND mo.productionordid = upr.work_ord_num
                               AND upr.status = gv_status
                               AND productionordid IN (SELECT   work_ord_num
                                        FROM   z_pcdw_ds_mo
                                       WHERE   status = gv_status);                                       

         n_count_rows := IFNULL (::ROWCOUNT, 0);
         --  dbms_output.put_line(to_char(n_count) || ' records updated on mid_mo_line.');
         --COMMIT;
      END;


      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF Sync ' || n_count_rows
                                || ' records for (pull_hearder_id, pull_line_id) on mid_mo_line with pull_line.');  
                     


      /* Step 10:
                                                                         * FULL BOX PULL QUANTITY GENERATION.
       */
      BEGIN
      DECLARE CURSOR cursor_i FOR (SELECT   item,
                         vendorid,
                         box_size/*,
                         logical_plant*/
                  FROM   ui_item_full_box);
                  
      FOR cur_i AS cursor_i DO
         IF (cur_i.box_size IS NOT NULL)
         THEN
            UPDATE   pull_line
               SET   full_box_qty =
                        pull_qty
                        + CASE MOD (pull_qty, cur_i.box_size)
                             WHEN 0 THEN 0
                             ELSE (cur_i.box_size - MOD (pull_qty, cur_i.box_size))
                          END
             WHERE       matnr = cur_i.item
                     AND line_supplierid = cur_i.vendorid
                     AND status = 'IN_PROCESS';
         END IF;
      END FOR;
      END;

      --COMMIT;
      logidj:=0;
      CALL "EX_LOG"."cdp.log.procedures::logProc"
                    (I_TYPE=>'INFO',I_LOGSID=>:logidj,
                     I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI',
                     I_MESSAGE=>'benchmark',
                     I_DETAIL=>'END OF full box');  


      UPDATE   pull_line
         SET   full_box_qty = pull_qty
       WHERE   full_box_qty IS NULL;

      --COMMIT;
      END IF;
      
      --<<done>>
      --NULL;
      
      /*UPDATE z_pcdw_ds_mo
                                    SET status = 'COMPLETE'
       WHERE status = 'IN_PROCESS'
         AND fcility_name IN (SELECT siteid
                                FROM ud_site_schedule
                               WHERE id = iv_id); */
      --COMMIT;


     /* Step 12:
                         * Copy processed MO BOM Item to MID_MO_BOM.
       */
      --add by Sky ,but logic add is wenfei 20080819
      INSERT INTO mid_mo_bom (productionordid,
                              matnr,
                              qty_per,
                              werks,
                              mo_qty)
           SELECT   mo.productionordid,
                    bom.matnr,
                    SUM (bom.qty) / mo.qty,
                    mo.werks,
                    mo.qty
             FROM   z_pcdw_mo mo, z_pcdw_mo_bom bom
            WHERE       mo.productionordid = bom.productionordid
                    AND mo.werks = bom.werks
                    AND mo.bomname = bom.bomname
                    AND bom.LOCATION IS NOT NULL
                    AND bom.qty > 0
                    AND EXISTS
                          (SELECT   'x'
                             FROM   z_pcdw_ds_mo upr
                            WHERE   upr.work_ord_num = mo.productionordid
                                    AND upr.status = 'IN_PROCESS')
                    AND NOT EXISTS
                          (SELECT   'y'
                             FROM   mid_cancel_mo_line can
                            WHERE   can.productionordid = bom.productionordid
                                    AND can.matnr = bom.matnr
                                    AND can.werks = bom.werks)
                    AND NOT EXISTS
                          (SELECT   'z'
                             FROM   mid_mo_bom mid
                            WHERE   mid.productionordid = bom.productionordid
                                    AND mid.matnr = bom.matnr
                                    AND mid.werks = bom.werks)
         GROUP BY   mo.productionordid,
                    bom.matnr,
                    mo.qty,
                    mo.werks;

      --COMMIT;

      /* Modify 10:
                         * Manual MO CR
       * Date: 2008-12-4    Author: zhaoliang
       * delete ON_HOLD_MO_LINE    data, which are more than 60 days old.
       */
      DELETE FROM   on_hold_mo_line
            WHERE   sys_timestamp < add_days(current_date,-60);

      --end cuixz
      --COMMIT;
      
            CALL "EX_LOG"."cdp.log.procedures::logProc"
            (I_TYPE=>'PROC_END',I_LOGSID=>:logidi,
            I_EVENT_NAME=>:gv_logic_name||'.'||:v_logic_proc_name,I_MODULE=>'SZEBGVMI'); 
END;