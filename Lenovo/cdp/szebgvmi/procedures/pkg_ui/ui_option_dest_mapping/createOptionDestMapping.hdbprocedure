PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_ui.ui_option_dest_mapping::createOptionDestMapping" (
	 IN LOGICAL_PLANT NVARCHAR(40),
	 IN WAREHOUSE_OWNER NVARCHAR(40),
	 IN SOURCE_LOCATION NVARCHAR(40),
	 IN SOURCE_TYPE NVARCHAR(40),
	 IN SOURCE_BIN NVARCHAR(40),
	 IN DESTINATION_LOCATION NVARCHAR(40),
	 IN DESTINATION_TYPE NVARCHAR(40),
	 IN DESTINATION_BIN NVARCHAR(40)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA SZEBGVMI
	--READS SQL DATA 
	AS
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
		
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION   
BEGIN              
    	aI_DETAIL :='createOptionDestMapping error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'createOptionDestMapping'
	     	,I_MODULE=>'SZEBGVMI'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
END;  
  call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'optiondestinationmapping::createable'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
 --START
CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'createOptionDestMapping'
       ,I_MODULE=>'SZEBGVMI'
   	); 

insert into "SZEBGVMI"."UI_OPTION_DEST_MAPPING"(LOGICAL_PLANT,
								 WAREHOUSE_OWNER,
								 SOURCE_LOCATION,
								 SOURCE_TYPE,
								 SOURCE_BIN,
								 DESTINATION_LOCATION,
								 DESTINATION_TYPE,
								 DESTINATION_BIN,SYS_SOURCE,
											SYS_CREATED_BY,
		 		SYS_CREATED_DATE,
		 		SYS_LAST_MODIFIED_BY,
				SYS_LAST_MODIFIED_DATE)
		values(:LOGICAL_PLANT,
								 :WAREHOUSE_OWNER,
								 :SOURCE_LOCATION,
								 :SOURCE_TYPE,
								 :SOURCE_BIN,
								 :DESTINATION_LOCATION,
								 :DESTINATION_TYPE,
								 :DESTINATION_BIN,
								 'UI',
								 SESSION_USER,
								 CURRENT_TIMESTAMP,
								 SESSION_USER,
								 CURRENT_TIMESTAMP);  	
		 --insert操作需要写入日志
		insert into "SZEBGVMI"."UI_OPTION_DEST_MAPPING_LOG"(AT_MODIFIED_BY,AT_ACTION,AT_MODIFIED_TIME,
				LOGICAL_PLANT,WAREHOUSE_OWNER,SOURCE_LOCATION,SOURCE_TYPE,SOURCE_BIN,DESTINATION_LOCATION,DESTINATION_TYPE,DESTINATION_BIN
			)
		VALUES
			 	(SESSION_USER,
			 	'create',
			 	CURRENT_TIMESTAMP,
				:LOGICAL_PLANT,:WAREHOUSE_OWNER,:SOURCE_LOCATION,:SOURCE_TYPE,:SOURCE_BIN,:DESTINATION_LOCATION,:DESTINATION_TYPE,:DESTINATION_BIN
				);	

   	
--END
aI_DETAIL := 'createOptionDestMapping successfully created . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'createOptionDestMapping'
	     	,I_MODULE=>'SZEBGVMI'
	     	,I_DETAIL=>:aI_DETAIL
     	);	   	
END;