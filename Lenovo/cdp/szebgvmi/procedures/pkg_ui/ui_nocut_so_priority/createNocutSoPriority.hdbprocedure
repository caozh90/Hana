PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_ui.ui_nocut_so_priority::createNocutSoPriority" (
	 IN LOGICAL_PLANT NVARCHAR(40),
	 IN DELIVERY_PRIORITY INTEGER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA SZEBGVMI
	--READS SQL DATA 
	AS
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION   
BEGIN              
    	aI_DETAIL :='createNocutSoPriority error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'createNocutSoPriority'
	     	,I_MODULE=>'SZEBGVMI'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
END;  
  call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'nocutsopriority::createable'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
 --START
	   CALL "EX_LOG"."cdp.log.procedures::logProc"(
			    I_TYPE=>'PROC_START'
		       ,I_LOGSID=>:alogide
		       ,I_EVENT_NAME=>'createNocutSoPriority'
		       ,I_MODULE=>'SZEBGVMI'
		   	); 

	   insert into "SZEBGVMI"."UI_NOCUT_SO_PRIORITY"(LOGICAL_PLANT,
								 DELIVERY_PRIORITY,SYS_SOURCE,
												SYS_CREATED_BY,
		 		SYS_CREATED_DATE,
		 		SYS_LAST_MODIFIED_BY,
				SYS_LAST_MODIFIED_DATE)
		values(:LOGICAL_PLANT,:DELIVERY_PRIORITY,
								 'UI',
								 SESSION_USER,
								 CURRENT_TIMESTAMP,
								 SESSION_USER,
								 CURRENT_TIMESTAMP);  
		--insert log
		insert into "SZEBGVMI"."UI_NOCUT_SO_PRIORITY_LOG"(AT_MODIFIED_BY,AT_ACTION,AT_MODIFIED_TIME,
				LOGICAL_PLANT,DELIVERY_PRIORITY)
		VALUES
			 	(SESSION_USER,
			 	'create',
			 	CURRENT_TIMESTAMP,
				:LOGICAL_PLANT,:DELIVERY_PRIORITY);	 								 
   	
--END
aI_DETAIL := 'createNocutSoPriority successfully created . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'createNocutSoPriority'
	     	,I_MODULE=>'SZEBGVMI'
	     	,I_DETAIL=>:aI_DETAIL
     	);	   	
END;