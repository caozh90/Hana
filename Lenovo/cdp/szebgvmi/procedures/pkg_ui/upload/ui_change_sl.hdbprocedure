PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_ui.upload::ui_change_sl" (
IN MATNR NVARCHAR(18),
IN MATNR_DESCR NVARCHAR(40),
IN MO_NUM NVARCHAR(12),
IN STORAGE_LOC NVARCHAR(40),
IN LINE_NUM NVARCHAR(10),
IN STATUS NVARCHAR(40),
IN REMARK NVARCHAR(40),
IN SYS_CREATED_DATE TIMESTAMP,
IN SYS_CREATED_BY NVARCHAR(64), 
IN SYS_LAST_MODIFIED_DATE TIMESTAMP,
IN SYS_LAST_MODIFIED_BY TIMESTAMP,
OUT ERROR_MSG VARCHAR(1000),
OUT RESULT_STATUS INT,
OUT RESULT_MATNR VARCHAR(18),
OUT RESULT_MO_NUM VARCHAR(12),
OUT RESULT_STROGAE_LOC VARCHAR(40)
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	DEFAULT SCHEMA SZEBGVMI
	 AS
CREATE_DATE NVARCHAR(1024);
CREATE_BY VARCHAR(100);
N INT;
M INT;
P INT;
Q INT;
newMATNR NVARCHAR(40);
newSTORAGE_LOC NVARCHAR(40);
newMO_NUM NVARCHAR(12); 
BEGIN
 /*  delete tail space of string */ 
 newMATNR := TRIM(:MATNR);
 newSTORAGE_LOC :=TRIM(:STORAGE_LOC);
 newMO_NUM := TRIM (:MO_NUM);
/********************************/

 
 SELECT SESSION_USER INTO CREATE_BY FROM DUMMY;
 SELECT CURRENT_TIMESTAMP  INTO CREATE_DATE FROM DUMMY;

 --验证 PartNumber 有效性
 SELECT COUNT(1) INTO M FROM "SZEBGVMI"."ITEMSITEMASTER"
 	WHERE ITEM = :newMATNR;
 --验证 Storage Location 
 SELECT COUNT(1) INTO P FROM "SZEBGVMI"."CONF_WAHREHOUSE_INFO"
 	WHERE STORAGE_LOCATION = :newSTORAGE_LOC;
 IF(:MO_NUM  = '' ) THEN
	 Q := 0;
 ELSE
	 Q := 1;
 END IF;
 IF( M > 0 AND P > 0 AND Q = 1) THEN
	
 --验证主键是否冲突
	 SELECT COUNT(1) INTO N FROM "SZEBGVMI"."UI_CHANGE_SL" 
	 				 WHERE MATNR = :newMATNR
	 				 AND MO_NUM = :newMO_NUM
	 				 AND STORAGE_LOC = :newSTORAGE_LOC;
	 
	 IF( N = 0) THEN
		 	INSERT INTO "SZEBGVMI"."UI_CHANGE_SL"(
		 		MATNR,
		 		MATNR_DESCR,
		 		MO_NUM,
		 		STORAGE_LOC,
		 		LINE_NUM,
		 		STATUS,
		 		REMARK,
		 		SYS_CREATED_DATE,
		 		SYS_CREATED_BY,
		 		SYS_LAST_MODIFIED_BY,
		 		SYS_LAST_MODIFIED_DATE
		 	)
		 	VALUES (
		 		:newMATNR,
		 		:MATNR_DESCR,
		 		:newMO_NUM,
		 		:newSTORAGE_LOC,
		 		:LINE_NUM,
		 		:STATUS,
		 		:REMARK,
		 		:CREATE_DATE,
		 		:CREATE_BY,
		 		:SYS_LAST_MODIFIED_BY,
		 		:SYS_LAST_MODIFIED_DATE
		 	);
		 	RESULT_STATUS :=1;
	 	ELSE
		 	RESULT_STATUS := 0;
		 	ERROR_MSG := 'The primary key conflict.';
		 	RESULT_MATNR := :MATNR;
		 	RESULT_MO_NUM := :MO_NUM;
		 	RESULT_STROGAE_LOC := :STORAGE_LOC;
	 	
	 END IF;

ELSE
			RESULT_STATUS := 0;	
		 	ERROR_MSG := 'Invalid Primary key field ,Please check.';
		 	RESULT_MATNR := :MATNR;
		 	RESULT_MO_NUM := :MO_NUM;
		 	RESULT_STROGAE_LOC := :STORAGE_LOC;

END IF;
	 
 
 
 
 
END;
