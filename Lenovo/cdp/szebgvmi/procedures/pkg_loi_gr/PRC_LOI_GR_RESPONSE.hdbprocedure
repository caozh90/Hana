PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_loi_gr::PRC_LOI_GR_RESPONSE" (
	IN iv_id VARCHAR(10), OUT on_exitcode NUMBER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA SZEBGVMI
	--READS SQL DATA 
/************************************************************************
*name      : PRC_LOI_GR_RESPONSE              --函数名
*function    :               --函数功能
*input     ：  iv_id              --输入参数
*output     : on_exitcode               --输出参数
*author     : Eric Zhou               --作者
*CreateDate    : 2014/12/01                 --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/	
	AS
	v_logic_proc_name   VARCHAR2 (40) := 'PRC_LOI_GR_RESPONSE';
	gv_logic_name    VARCHAR2 (40)  := 'PKG_LOI_GR';
	v_full_name VARCHAR(100) := gv_logic_name||'.'||v_logic_proc_name;
	v_logidi INTEGER := 0;
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		 on_exitcode := ::SQL_ERROR_CODE;
		 CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_ERROR',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_MESSAGE=>'ERROR',
			 I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||substr(::SQL_ERROR_MESSAGE, 1, 512)||':'||iv_id||':'||'Failure');                                                  
		 
		 
         --commit;   --comment by Eric Zhou

	END;
	on_exitcode := -20099;
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_START',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
             I_DETAIL=>iv_id||':'||'Start');
        UPDATE loi_gr t
         SET (status, reason_code, ecc_step, tr_number, tr_item_number,
              material_document_year, material_document) =
                (SELECT DISTINCT 'OLD', reason_code, ecc_step, tr_number,
                                 tr_item_number, material_document_year,
                                 material_document
                            FROM Z_PCDW_RSP_LOI_GR
                           WHERE t.tpl_receipt_id = tpl_receipt_id
                             AND t.tpl_receipt_line_id = tpl_receipt_line_id
                             AND t.tpl_id = tpl_id          --added @2008-3-31
                             AND UPPER (status) = 'SUCCESS')
       WHERE EXISTS (
                SELECT 'x'
                  FROM Z_PCDW_RSP_LOI_GR s
                 WHERE s.tpl_receipt_id = t.tpl_receipt_id
                   AND s.tpl_receipt_line_id = t.tpl_receipt_line_id
                   AND t.tpl_id = tpl_id                    --added @2008-3-31
                   AND UPPER (s.status) = 'SUCCESS')
         AND werks IN (SELECT siteid
                         FROM conf_site_schedule
                        WHERE ID = iv_id)
         AND status = 'SENT';                              --added @2007-11-12

      UPDATE loi_gr t
         SET (status, reason_code, ecc_step, tr_number, tr_item_number,
              material_document_year, material_document) =
                (SELECT DISTINCT 'ERROR', reason_code, ecc_step, tr_number,
                                 tr_item_number, material_document_year,
                                 material_document
                            FROM Z_PCDW_RSP_LOI_GR
                           WHERE t.tpl_receipt_id = tpl_receipt_id
                             AND t.tpl_receipt_line_id = tpl_receipt_line_id
                             AND t.tpl_id = tpl_id          --added @2008-3-31
                             AND UPPER (status) = 'ERROR')
       WHERE EXISTS (
                SELECT 'x'
                  FROM Z_PCDW_RSP_LOI_GR s
                 WHERE s.tpl_receipt_id = t.tpl_receipt_id
                   AND s.tpl_receipt_line_id = t.tpl_receipt_line_id
                   AND t.tpl_id = tpl_id                    --added @2008-3-31
                   AND UPPER (s.status) = 'ERROR')
         AND werks IN (SELECT siteid
                         FROM conf_site_schedule
                        WHERE ID = iv_id)
         AND status = 'SENT';                              --added @2007-11-12

            --commit;                      --comment by Eric Zhou
      on_exitcode := 0;
  CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_END',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_DETAIL=>iv_id||':'||'Success');
END;