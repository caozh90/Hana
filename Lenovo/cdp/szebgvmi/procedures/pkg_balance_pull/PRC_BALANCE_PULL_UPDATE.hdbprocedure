PROCEDURE "SZEBGVMI"."cdp.szebgvmi.procedures.pkg_balance_pull::PRC_BALANCE_PULL_UPDATE" (
	IV_ID VARCHAR(10), OUT ON_EXITCODE NUMBER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "SZEBGVMI"
	--READS SQL DATA 
/************************************************************************
*name      : PRC_BALANCE_PULL_UPDATE              --函数名
*function    :               --函数功能
*input     ：  iv_id              --输入参数
*output     : on_exitcode               --输出参数
*author     : Eric Zhou               --作者
*CreateDate    : 2014/12/03                 --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
***********************************************************************/
	AS
	  v_logidi INTEGER := 0;	
	  v_pkg_name          VARCHAR (40)            := 'PKG_BALANCE_PULL';
	  v_logic_proc_name   VARCHAR (40)            := 'PRC_BALANCE_PULL_UPDATE';
	  v_full_name         VARCHAR (100)            := v_pkg_name||'.'||v_logic_proc_name;
      V_SA_COUNT          NUMBER;
      V_SA_NUM            VARCHAR(10);
      V_SA_LINE_ID        VARCHAR(5);
      V_ITEMDESC          NVARCHAR(200);
BEGIN
DECLARE CURSOR CU FOR (SELECT   DISTINCT PULL_HEADER_ID,
                                         PULL_LINE_ID,
                                         MATNR,
                                         WERKS,
                                         LIFNR
                         FROM   BALANCE_DISPATCH
                        WHERE   STATUS = 'NEW');
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		 on_exitcode := ::SQL_ERROR_CODE;
		 CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_ERROR',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_MESSAGE=>'ERROR',
			 I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||substr(::SQL_ERROR_MESSAGE, 1, 512)||':'||iv_id||':'||'Failure');                                                  
		 
                  
        -- COMMIT;      --comment by Eric Zhou
	END;
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_START',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
             I_DETAIL=>iv_id||':'||'Start');
             
     ON_EXITCODE := -20099;

      ---2013.04.02 CSE PROJECT UPDATED BY YUANSHENG1
      FOR CUR_ITEM as CU
      DO
         BEGIN
         	DECLARE EXIT HANDLER FOR SQL_ERROR_CODE 1299
         	BEGIN
         	   V_SA_NUM := '';
               V_SA_LINE_ID := '';
            END;
         	
            SELECT   SA_NUMBER, SA_LINE_ID
              INTO   V_SA_NUM, V_SA_LINE_ID
              FROM   (  SELECT   SA_NUMBER, SA_LINE_ID
                          FROM   SA
                         WHERE       MATNR = CUR_ITEM.MATNR
                                 AND LIFNR = CUR_ITEM.LIFNR
                                 AND WERKS = CUR_ITEM.WERKS
                                 AND STATUS = 'ACTIVE'
                                 AND START_DATE <= CURRENT_TIMESTAMP
                                 AND END_DATE >= CURRENT_TIMESTAMP
                      ORDER BY OPEN_QTY DESC,CREATE_DATE ASC) A
             limit 1;         
         END;

         BEGIN
            DECLARE EXIT HANDLER FOR SQL_ERROR_CODE 1299
         	BEGIN
         	   V_ITEMDESC := '';
            END;
            SELECT   ITEMDESC
              INTO   V_ITEMDESC
              FROM   ITEMSITEMASTER
             WHERE       ITEM = CUR_ITEM.MATNR
                     AND SITEID = CUR_ITEM.WERKS
                     AND SYS_ENT_STATE = 'ACTIVE'
                     LIMIT 1;         
         END;

         UPDATE   BALANCE_DISPATCH BD
            SET   MATNR_DESCR = V_ITEMDESC,
                  SA_NUMBER = V_SA_NUM,
                  SA_LINE_ID = V_SA_LINE_ID
          WHERE       BD.PULL_HEADER_ID = CUR_ITEM.PULL_HEADER_ID
                  AND BD.PULL_LINE_ID = CUR_ITEM.PULL_LINE_ID
                  AND BD.STATUS = 'NEW';
      END FOR;


      UPDATE   BALANCE_DISPATCH BD
         SET   BD.STATUS = 'IN_PROCESS'
       WHERE   BD.STATUS = 'NEW';

      --COMMIT;                           --comment by Eric Zhou
      ON_EXITCODE := 0;
            
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_END',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'SZEBGVMI',
			 I_DETAIL=>iv_id||':'||'Success'); 
END;