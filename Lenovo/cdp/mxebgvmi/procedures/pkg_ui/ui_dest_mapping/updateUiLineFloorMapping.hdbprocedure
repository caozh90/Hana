PROCEDURE "MXEBGVMI"."cdp.mxebgvmi.procedures.pkg_ui.ui_dest_mapping::updateUiLineFloorMapping" ( 
		IN newInfo "MXEBGVMI"."cdp.mxebgvmi.data::MXEBGVMI_T.UI_LINE_FLOOR_MAPPING_T"
		,IN oldInfo  "MXEBGVMI"."cdp.mxebgvmi.data::MXEBGVMI_T.UI_LINE_FLOOR_MAPPING_T"
		,OUT errorInfo "MXEBGVMI"."cdp.mxebgvmi.data::MXEBGVMI_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
		aDsLine NVARCHAR(200);
		aPhysicPlant NVARCHAR(40);
		aFloor NVARCHAR(20);
		
		resourceExists BIGINT;		
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.mxebgvmi.procedures::updateUiLineFloorMapping error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.mxebgvmi.procedures::updateUiLineFloorMapping'
	     	,I_MODULE=>'MXEBGVMI'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  
  call "SECURITY"."cdp.security.procedures::checkPrivilege" (	      
    'destinationmapping::editable'		,privilegeExists           );
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : 0' error_message, 
     		privilegeExists detail from dummy;
    	RETURN ;
    END IF;
 --START
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.mxebgvmi.procedures::updateUiLineFloorMapping'
       ,I_MODULE=>'MXEBGVMI'
   	); 
   	
select 
    FLOOR
  into 
	aFloor
  from :newInfo;
  
 select
	DS_LINE,	
    PHYSICAL_PLANT   
  into  	
 	aDsLine,
 	aPhysicPlant
  from :oldInfo; 
  
  SELECT top 1 count(1) into resourceExists FROM "MXEBGVMI"."UI_LINE_FLOOR_MAPPING" A    
     WHERE A.FLOOR = :aFloor
     	  AND A.DS_LINE = :aDsLine 
          AND A.PHYSICAL_PLANT = :aPhysicPlant; 
   
    if  :resourceExists > 0 
    then
	    errorInfo = select 400 as http_status_code, 
	     		'the record is same as before' error_message, 
	     		'the record is same as before' DETAIL from dummy;
	     		
	     	return;
    end if;
    
  update "MXEBGVMI"."UI_LINE_FLOOR_MAPPING"
  	set   FLOOR = :aFloor,SYS_LAST_MODIFIED_BY = SESSION_USER,
          SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP
  	where  DS_LINE = :aDsLine
  	 and PHYSICAL_PLANT = :aPhysicPlant;
  insert into "MXEBGVMI"."UI_LINE_FLOOR_MAPPING_LOG"
  	(DS_LINE, PHYSICAL_PLANT, FLOOR,SYS_SOURCE,
	 AT_MODIFIED_BY,AT_ACTION,AT_MODIFIED_TIME)
  	values(:aDsLine, :aPhysicPlant, :aFloor,'UI',
  	SESSION_USER ,'update',CURRENT_TIMESTAMP);
  	
  	 
/*END*/
 	    aI_DETAIL := 'cdp.mxebgvmi.procedures::updateUiLineFloorMapping ('||:aDsLine||' ,) successfully updated.';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.mxebgvmi.procedures::updateUiLineFloorMapping'
	     	,I_MODULE=>'MXEBGVMI'
	     	,I_DETAIL=>:aI_DETAIL
     	);	
END;