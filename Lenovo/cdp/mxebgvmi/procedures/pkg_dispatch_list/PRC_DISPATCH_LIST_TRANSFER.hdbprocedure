PROCEDURE "MXEBGVMI"."cdp.mxebgvmi.procedures.pkg_dispatch_list::PRC_DISPATCH_LIST_TRANSFER" (
	iv_id VARCHAR(10), OUT on_exitcode NUMBER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "MXEBGVMI"
	--READS SQL DATA 
/************************************************************************
*name      : PRC_DISPATCH_LIST_TRANSFER              --函数名
*function    :               --函数功能
*input     ：  iv_id              --输入参数
*output     : on_exitcode               --输出参数
*author     : Eric Zhou               --作者
*CreateDate    : 2014/12/03                 --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/
	AS
	v_logic_proc_name   VARCHAR2 (40) := 'PRC_DISPATCH_LIST_TRANSFER';
	v_logidi INTEGER := 0;	
	v_pkg_name          VARCHAR (40)            := 'PKG_DISPATCH_LIST';
	v_full_name         VARCHAR (100)            := v_pkg_name||'.'||v_logic_proc_name;
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		 on_exitcode := ::SQL_ERROR_CODE;
		 CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_ERROR',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'MXEBGVMI',
			 I_MESSAGE=>'ERROR',
			 I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||substr(::SQL_ERROR_MESSAGE, 1, 512)||':'||iv_id||':'||'Failure');                                                  
		 
                  
        -- COMMIT;      --comment by Eric Zhou
	END;
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_START',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'MXEBGVMI',
             I_DETAIL=>iv_id||':'||'Start');
             
	on_exitcode := -20099;

      DELETE FROM PCDW.EXP_ECC_DISPATCH_LIST
            WHERE werks IN (SELECT siteid
                              FROM conf_site_schedule
                             WHERE ID = iv_id);


      DELETE FROM Z_PCDW_RSP_DISPATCH_LIST;

      --COMMIT;                                    --comment by Eric Zhou

	--BACK UP                         
	DELETE FROM PCDW.BAK_EXP_ECC_DISPATCH_LIST        
	WHERE DAYS_BETWEEN(SYS_TIMESTAMP,CURRENT_TIMESTAMP)>90;
	
	INSERT INTO PCDW.BAK_EXP_ECC_DISPATCH_LIST
                  (werks, pull_line_id, pull_header_id, src_storage_type,
                   src_storage_loc, src_storage_bin, dest_storage_type,
                   dest_storage_loc, dest_storage_bin, loi_storage_type,
                   loi_storage_bin, sa_number, inventory_type, lifnr, whs_no,
                   line_qty, loi_qty, dispatch_qty, difference_qty, dept,
                   matnr, status, sa_line_id, ecc_step, tr_number,
                   tr_item_number, material_document_year, material_document,SYS_TIMESTAMP)
     SELECT werks, pull_line_id, pull_header_id, src_storage_type,
                src_storage_loc, src_storage_bin, dest_storage_type,
                dest_storage_loc, dest_storage_bin, loi_storage_type,
                loi_storage_bin, sa_number, inventory_type, lifnr, whs_no,
                line_qty, loi_qty, dispatch_qty, difference_qty, dept, matnr,
                status, sa_line_id, ecc_step, tr_number, tr_item_number,
                material_document_year, material_document,CURRENT_TIMESTAMP
           FROM dispatch_list
          WHERE status = 'XI_IN_PROCESS'
            AND sys_source IN ('FP', 'CSE')
            AND dest_storage_loc NOT IN (select storage_location from conf_wahrehouse_info where owner = 'FG')
            AND pull_type <> 'PACKAGING'
            AND werks IN (SELECT siteid
                            FROM conf_site_schedule
                           WHERE ID = iv_id);        

      INSERT INTO PCDW.EXP_ECC_DISPATCH_LIST
                  (werks, pull_line_id, pull_header_id, src_storage_type,
                   src_storage_loc, src_storage_bin, dest_storage_type,
                   dest_storage_loc, dest_storage_bin, loi_storage_type,
                   loi_storage_bin, sa_number, inventory_type, lifnr, whs_no,
                   line_qty, loi_qty, dispatch_qty, difference_qty, dept,
                   matnr, status, sa_line_id, ecc_step, tr_number,
                   tr_item_number, material_document_year, material_document,SYS_TIMESTAMP)
         SELECT werks, pull_line_id, pull_header_id, src_storage_type,
                src_storage_loc, src_storage_bin, dest_storage_type,
                dest_storage_loc, dest_storage_bin, loi_storage_type,
                loi_storage_bin, sa_number, inventory_type, lifnr, whs_no,
                line_qty, loi_qty, dispatch_qty, difference_qty, dept, matnr,
                status, sa_line_id, ecc_step, tr_number, tr_item_number,
                material_document_year, material_document,CURRENT_TIMESTAMP
           FROM dispatch_list
          WHERE status = 'XI_IN_PROCESS'
            AND sys_source IN ('FP', 'CSE')
            AND dest_storage_loc NOT IN (select storage_location from conf_wahrehouse_info where owner = 'FG')
            AND pull_type <> 'PACKAGING'
            AND werks IN (SELECT siteid
                            FROM conf_site_schedule
                           WHERE ID = iv_id);
	
      IF ::ROWCOUNT >= 1
      THEN
         UPDATE CONF_CFG_XI_PARA xp
            SET xp.low = 1
          WHERE xp.progname = 'ZRFC_VMI_DISPATCH_INPUT'
            AND xp.paraclass = 'ACTION'
            AND xp.buid = iv_id;
      ELSE
         UPDATE CONF_CFG_XI_PARA xp
            SET xp.low = 0
          WHERE xp.progname = 'ZRFC_VMI_DISPATCH_INPUT'
            AND xp.paraclass = 'ACTION'
            AND xp.buid = iv_id;
      END IF;

      --COMMIT;                                        --comment by Eric Zhou

      UPDATE dispatch_list
         SET status = 'SENT'
       WHERE status = 'XI_IN_PROCESS'
         AND sys_source IN ('FP', 'CSE')
         AND dest_storage_loc NOT IN (select storage_location from conf_wahrehouse_info where owner = 'FG')
         AND pull_type <> 'PACKAGING'
         AND werks IN (SELECT siteid
                         FROM conf_site_schedule
                        WHERE ID = iv_id)
         AND EXISTS(SELECT DISTINCT 'x' FROM PCDW.EXP_ECC_DISPATCH_LIST zlist
                  WHERE zlist.pull_header_id=DISPATCH_LIST.pull_header_id
                    and zlist.pull_line_id=DISPATCH_LIST.pull_line_id);--CRQ000000023449 Added by baiying 2010.10.13;


      -- update dispatch_list set status='OLD' where  pull_type='PACKAGING'
      UPDATE dispatch_list
         SET unreserved_qty = 0
       WHERE status = 'SENT'
         AND pull_type = 'MANUAL'
         AND dest_storage_loc IN (select storage_location from conf_wahrehouse_info where owner = 'FG')
         AND werks IN (SELECT siteid
                         FROM conf_site_schedule
                        WHERE ID = iv_id);

      --COMMIT;                                       --comment by Eric Zhou

      on_exitcode := 0;            
CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_END',I_LOGSID=>:v_logidi,
			 I_EVENT_NAME=>:v_full_name,I_MODULE=>'MXEBGVMI',
			 I_DETAIL=>iv_id||':'||'Success');    
END;