PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_cost_model_list::PRC_FULL_COST_MODEL_LIST" ( 
  OUT P_OUT_EXITCODE INTEGER
 )  
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA EBGCFE
	--READS SQL DATA 
/************************************************************************
*name       : PRC_FULL_COST_MODEL_LIST          
*function   : Cost Model List 
*input      ：-
*output     : p_out_exitcode : error code 
*author     : Leonard Ling
*CreateDate : 2014-12-29
*UpdateDate :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/		
	AS
BEGIN

  -- data
   DECLARE  V_G_NO_BOM   VARCHAR(20) := 'NO_BOM';  
   DECLARE  V_PKG_NAME   VARCHAR(100) := 'PKG_COST_MODEL_LIST';
   DECLARE  V_PRC_NAME   VARCHAR(100) := 'PRC_FULL_COST_MODEL_LIST';
   DECLARE  v_full_name  VARCHAR(60)  := :V_PKG_NAME ||'.'|| :V_PRC_NAME;    
   DECLARE   logidi            INTEGER := 0;
           
  -- exception
   DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
            P_OUT_EXITCODE := -1;  
			CALL "EX_LOG"."cdp.log.procedures::logProc"
					(I_TYPE=>'PROC_ERROR',I_LOGSID=>:logidi,
					I_EVENT_NAME=>:v_full_name, I_MODULE=>'EBGCFE',
					I_MESSAGE=>'ERROR', I_DETAIL=>to_char(::SQL_ERROR_CODE) || ':' ||
		                                    substr(::SQL_ERROR_MESSAGE, 1, 1000) );         
    END;      
      
  -- process logic 
  P_OUT_EXITCODE := -1;
  CALL "EX_LOG"."cdp.log.procedures::logProc"
		(I_TYPE=>'PROC_START',I_LOGSID=>:logidi,
		I_EVENT_NAME=>:v_full_name,I_MODULE=>'EBGCFE');     
    
  CALL "cdp.ebgcfe.procedures.pkg_cost_model_list::PRC_ALL_ITEM_LIST" (P_OUT_EXITCODE);
  --CALL "cdp.ebgcfe.procedures.pkg_cost_model_list::PRC_ITEM_COUNTRY_LIST" (P_OUT_EXITCODE);
  CALL "cdp.ebgcfe.procedures.pkg_cost_model_list::PRC_ITEM_SOS" (P_OUT_EXITCODE);
  CALL "cdp.ebgcfe.procedures.pkg_cost_model_list::PRC_GET_BOM_PLANT" (P_OUT_EXITCODE);
  

  DELETE FROM BIZ_COST_MODEL_LIST  
  WHERE LOCATE(SYS_LAST_MODIFIED_BY, :V_PKG_NAME) > 0;
  
    --Added by Zhoubinbin 20161105
    --Update item's info for items is modified by ather sources
    UPDATE BIZ_COST_MODEL_LIST T1
       SET (T1.BRAND, T1.ASP_PRD_FAMILY, T1.ITEM_DESC, T1.ITEM_TYPE) 
         = (SELECT T2.BRAND, T2.ASP_PRD_FAMILY, T2.ITEM_DESC, T2.ITEM_TYPE
              FROM UI_ITEM T2
             WHERE T2.PRODUCT_GROUP = T1.PRODUCT_GROUP
               AND T2.ITEM          = T1.ITEM)
     WHERE EXISTS(SELECT 1 FROM MID_ITEM_OL T3
                   WHERE T3.PRODUCT_GROUP = T1.PRODUCT_GROUP
                     AND T3.ITEM          = T1.ITEM);
    
  --store result into table BIZ_COST_MODEL_LIST
  INSERT INTO BIZ_COST_MODEL_LIST (      CYCLE,
                                         PRODUCT_GROUP,
                                         ITEM,
                                         ASP_PRD_FAMILY,
                                         BRAND,
                                         PLANT,
                                         BOM_PLANT,
                                         SUBGEO,
                                         COUNTRY,
                                         ITEM_TYPE,
                                         EOL_STATUS,
                                         SYS_CREATED_DATE,
                                         SYS_CREATED_BY,
                                         SYS_LAST_MODIFIED_DATE,
                                         SYS_LAST_MODIFIED_BY,
                                         ITEM_DESC,
                                         STATUS,
                                         ACTION                                      
                                         )
         SELECT DISTINCT 'CURRENT',
                         A.PRODUCT_GROUP,
                         A.ITEM,
                         A.PROD_FAMILY,
                         A.BRAND,
                         A.PLANT,
                         IFNULL(A.BOM_PLANT, :V_G_NO_BOM),
                         A.SUBGEO,
                         A.COUNTRY,
                         A.ITEM_TYPE,
                         A.EOL_STATUS,
                         CURRENT_TIMESTAMP,
                         :V_FULL_NAME,
                         CURRENT_TIMESTAMP,
                         :V_FULL_NAME,
                         B.ITEM_DESC,
                         'ACTIVE',
                         'INSERT'                       
           FROM  MID_COST_MODEL_LIST_TMP A, UI_ITEM B
          WHERE     A.PRODUCT_GROUP = 'EBG'
                AND A.BRAND IS NOT NULL
                AND A.PRODUCT_GROUP = B.PRODUCT_GROUP
                AND A.ITEM = B.ITEM
                AND NOT EXISTS
					(SELECT 1 FROM BIZ_COST_MODEL_LIST C
					WHERE  
					        A.BRAND IS NOT NULL
                        AND A.PRODUCT_GROUP = C.PRODUCT_GROUP
                        AND A.ITEM = C.ITEM
                        AND A.SUBGEO = C.SUBGEO
                        AND A.COUNTRY = C.COUNTRY
                        AND A.PLANT = C.PLANT
                        --AND A.BOM_PLANT = C.BOM_PLANT 
                        ) ;
   --   COMMIT; 

  P_OUT_EXITCODE := 0;        
  CALL "EX_LOG"."cdp.log.procedures::logProc"
			(I_TYPE=>'PROC_END',I_LOGSID=>:logidi,
			I_EVENT_NAME=>:v_full_name,I_MODULE=>'EBGCFE');  
END;
