PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_cfe_to_pcdw::PRC_EXP_CTO_DEFAULT_FCST"(
	OUT p_out_exitcode   integer,
    OUT p_out_exitmess   VARCHAR(500)
)     
    LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA EBGCFE
	--READS SQL DATA 
/************************************************************************
*name       : PRC_EXP_CTO_COST            
*function   : 
*input      ：p_change_id : change id / p_product_group : product group
              / p_user_id : user id 
*output     : p_out_exitcode : error code / p_out_exitmess : error message
*author     : Frankie
*CreateDate : 2015-10-17
*UpdateDate :  --函数更改信息（包括作者、时间、更改内容等
*************************************************************************/	
	AS


  
     v_prc_name 	     VARCHAR(30)  := 'PRC_EXP_CTO_DEFAULT_FCST';
     v_g_pkg_name 	     VARCHAR(30)  := 'pkg_cfe_to_pcdw';
     v_full_name      	 VARCHAR(60)  := v_g_pkg_name ||'.'|| v_prc_name;
     v_count_data        INTEGER;
     logidi              INTEGER :=0;


    
BEGIN
/*******************************************************************************************/
  -- exception
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN
    	p_out_exitcode := ::SQL_ERROR_CODE;     
	    p_out_exitmess := SUBSTR(::SQL_ERROR_MESSAGE, 1, 500 );  
 	 	CALL "EX_LOG"."cdp.log.procedures::logProc"(I_TYPE        => 'PROC_ERROR',
 	 	                                            I_LOGSID      => :logidi,
 	 	                                            I_EVENT_NAME  => :v_full_name,
 	 	                                            I_MODULE      => 'EBGCFE',
		                                            I_MESSAGE     => 'ERROR',
		                                            I_DETAIL      => TO_CHAR(::SQL_ERROR_CODE) || ':' ||
                                                                     SUBSTR(::SQL_ERROR_MESSAGE, 1, 500) );                                   
    END;
	
	
    
    
    CALL "EX_LOG"."cdp.log.procedures::logProc"(I_TYPE       => 'PROC_START',
                                                I_LOGSID     => :logidi,
		                                        I_EVENT_NAME => :v_full_name,
		                                        I_MODULE     => 'EBGCFE'); 
		                                        
		                                        
   --clear Export table data on PCDW
	SELECT COUNT(*) INTO v_count_data FROM BIZ_CTO_DEFAULT_FCST;
	
	IF v_count_data <> 0
		THEN
		DELETE FROM "PCDW"."EXP_CFE_CTO_DEFAULT_FCST";	
	
		INSERT INTO "PCDW"."EXP_CFE_CTO_DEFAULT_FCST"
		SELECT VARIANT,
			CURRENCY_NAME,
			PRICE_UNIT,
			ROUND(M1,2),
			ROUND(M2,2),
			ROUND(M3,2),
			ROUND(M4,2),
			ROUND(M5,2),
			ROUND(M6,2),
			ROUND(M7,2),
			ROUND(M8,2),
			ROUND(M9,2),
			ROUND(M10,2),
			ROUND(M11,2),
			ROUND(M12,2),
			SYS_CREATED_DATE
		FROM biz_cto_default_fcst;

	End If;




     p_out_exitcode := 0;
     p_out_exitmess := 'SUCCESSFUL';

    CALL "EX_LOG"."cdp.log.procedures::logProc"(I_TYPE       => 'PROC_END',
                                                I_LOGSID     => :logidi,
		                                        I_EVENT_NAME => :v_full_name,
		                                        I_MODULE     => 'EBGCFE');  

END;