PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_xifrt::beforeUpdateUiXifrt" ( 
        IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_XIFRT_T"
        ,IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_XIFRT_T"
        ,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT 
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "EBGCFE"
    AS
	/************************************************************************
	*name      :                     beforeUpdateUiXifrt
	*function    :               
	*input     ï¼š               
	*output     :                
	*author     :                     Fangyuan
	*CreateDate    :                  2015.1.23
	*UpdateDate  :        
	*************************************************************************/  

    vBRAND   VARCHAR2 (40 );
    vFAMILY  VARCHAR2 (40 );
    vPLANT   VARCHAR2 (20 );
    vSUBGEO  VARCHAR2 (20 );
    vTBA_TYPE    VARCHAR2 (10 );
    
    validate1 integer;
          
BEGIN


    SELECT
    "BRAND",
    "FAMILY",
    "PLANT",
    "SUBGEO",
    "TBA_TYPE"
    into
    vBRAND  ,
    vFAMILY ,
    vPLANT  ,
    vSUBGEO ,
    vTBA_TYPE    
    FROM  :newInfo;  
    
    --BRAND
    select count(1) into validate1 from "EBGCFE"."UI_PRODFAMILY" 
    where BRAND = :VBRAND;
    IF validate1<=0 then
        errorinfo = select 400 as http_status_code, 
            'BRAND: VALIDATION FAILED, NOT EXIST IN UI_PRODFAMILY' error_message, 
            '' detail from dummy;       
        RETURN;
    END IF;
    
    --FAMILY
    select count(1) into validate1 from "EBGCFE"."UI_PRODFAMILY" 
    where PROD_FAMILY = :VFAMILY;
    if :VFAMILY = 'ALL' then
    	validate1 := 1;
    end if;
    IF validate1<=0 then
        errorinfo = select 400 as http_status_code, 
            'FAMILY: VALIDATION FAILED, NOT EXIST IN UI_PRODFAMILY' error_message, 
            '' detail from dummy;        
        RETURN;
    END IF;
    
    --PLANT
    select count(1) into validate1 from "EBGCFE"."UI_PLANT" 
    where PLANT = :VPLANT;
    IF validate1<=0 then
        errorinfo = select 400 as http_status_code, 
            'PLANT: VALIDATION FAILED, NOT EXIST IN UI_PLANT' error_message, 
            '' detail from dummy;        
        RETURN;
    END IF;
    
    --SUBGEO
    select count(1) into validate1 from "EBGCFE"."UI_REGION" 
    where SUBGEO = :VSUBGEO;
    if :VSUBGEO = 'ALL' then
    	validate1 := 1;
    end if;	
    IF validate1<=0 then
        errorinfo = select 400 as http_status_code, 
            'SUBGEO: VALIDATION FAILED, NOT EXIST IN UI_REGION' error_message, 
            '' detail from dummy;        
        RETURN;
    END IF;
    
    --TBA_TYPE
    select count(1) into validate1 from "EBGCFE"."CONF_PARAMETERS"
    where pdomain='UI_MVA' and pname='TBA_TYPE' and pvalue= :VTBA_TYPE;
    IF validate1<=0 then
        errorinfo = select 400 as http_status_code, 
            'TBA_TYPE: VALIDATION FAILED, NOT EXIST IN CONF_PARAMETERS' error_message, 
            '' detail from dummy;    
        RETURN;
    END IF; 
END;
