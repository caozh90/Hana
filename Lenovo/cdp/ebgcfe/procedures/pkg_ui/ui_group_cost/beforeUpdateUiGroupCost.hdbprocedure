PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_group_cost::beforeUpdateUiGroupCost" (
		 IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_GROUP_COST_T",
		 IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_GROUP_COST_T",
		 OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER  
    DEFAULT SCHEMA EBGCFE
    --READS SQL DATA
/************************************************************************
*name      :                     beforeCreateUiGroupCost
*function    :               
*input     ï¼š               newInfo
*output     :    errorInfo            
*author     :                     Fang Yuan
*CreateDate    :                  2015.01.22
*UpdateDate  :        
*************************************************************************/ 
    AS
       
       v_prod_family NVARCHAR(100); 
       v_type NVARCHAR(40);
       v_brand NVARCHAR(40);
       v_plant NVARCHAR(50);
       v_mt NVARCHAR(10);	   
	   v_item NVARCHAR(40);
	   validate integer;
     
BEGIN
    
    select TYPE,BRAND,PLANT,
           PROD_FAMILY,MT,ITEM
     into  v_type,v_brand,v_plant,
           v_prod_family,V_MT,V_ITEM 
      from :newInfo;    
    

        
    if	v_prod_family <> 'N/A' then
		--PRODUCT_FAMILY
		select count(1) into validate from UI_Prodfamily where PROD_FAMILY=:v_prod_family;
	    if validate=0 then
	        errorinfo = select 400 as http_status_code, 
	            'PRODUCT_FAMILY: VALIDATION FAILED, NOT EXIST IN UI_PRODFAMILY' error_message, 
	            '' detail from dummy;
	        return;
	    end if;
	    --BRAND 
	    select count(1) into validate from UI_Prodfamily where brand=:v_brand;
	    if validate=0 then
	        errorinfo = select 400 as http_status_code, 
	            'BRAND: VALIDATION FAILED, NOT EXIST IN UI_PRODFAMILY' error_message, 
	            '' detail from dummy;
	        return;
	    end if;	    
    end if;
    
    -- check mt into VALIDATE
	if :v_MT <> 'N/A'	 then
		SELECT COUNT(1) INTO validate 
	 	FROM   "EBGCFE"."UI_MACHINETYPE"
	 	WHERE UPPER(MACHINETYPE) = UPPER(:v_MT);
		 IF validate <= 0 THEN
		 	  errorinfo = select 400 as http_status_code, 
		            'MACHINE_TYPE:' || :v_MT ||' NOT  EXIST IN UI_MACHINETYPE' error_message, 
		            '' detail from dummy;        
	        RETURN;
	     END IF;
	end if;	
	
	-- check item into VALIDATE
	if v_ITEM <> 'N/A' then
		SELECT COUNT(1) INTO validate 
	 	FROM   "EBGCFE"."UI_ITEM"
	 	WHERE UPPER(ITEM) = UPPER(:v_ITEM) AND ITEM_TYPE IN ('MTM','OPTION','BUNDLE','SBB') ;
		 IF validate <= 0 THEN
		 	  errorinfo = select 400 as http_status_code, 
		            'ITEM:' || :v_ITEM ||' NOT  EXIST IN UI_ITEM' error_message, 
		            '' detail from dummy;        
	        RETURN;
	     END IF;
	end if;	

    
    --GROUP_TYPE
    select count(1) into validate from conf_parameters where pdomain='UI_GROUP_COST'and pname='TYPE' and pvalue=:v_type ;
    if validate=0 then
        errorinfo = select 400 as http_status_code, 
            'GROUP_TYPE: VALIDATION FAILED, NOT EXIST IN CONF_PARAMETERS' error_message, 
            '' detail from dummy;
        return;
    end if;
    
    --PLANT
    select count(1) into validate from UI_Plant where plant=:v_plant;
    if validate=0 then
        errorinfo = select 400 as http_status_code, 
            'PLANT: VALIDATION FAILED, NOT EXIST IN UI_PLANT' error_message, 
            '' detail from dummy;
        return;
    end if;
END;