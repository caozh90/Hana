PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_cost_flag::beforeUpdateUiCostFlag" 
( 
	 IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_COSTFLAG_T",
	 IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_COSTFLAG_T",
	 OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
	AS
		validate1   BIGINT;
		v_sbb_type  NVARCHAR(30);
		v_vk	    NVARCHAR(30);
		v_cost_flag NVARCHAR(10);
BEGIN
/***************************** 
*name      :                     updateUiCostFlag
*function    :               
*input     ï¼š               oldInfo/newInfo
*output     :    errorInfo            
*author     :                chenwh3
*beforeUpdateDate    :             2015.07.24
*DeleteDate  : 
*CreateDate:        
 *****************************/
 	SELECT sbb_type,vk,cost_flag 
 		INTO v_sbb_type,v_vk,v_cost_flag
 		FROM :newinfo;
 		
 	SELECT count(*) INTO validate1
 		from  "EBGCFE"."UI_COSTFLAG"
 		WHERE sbb_type = :v_sbb_type and vk = :v_vk;
 	IF	validate1 <= 0
 	then
 		  errorinfo = select 400 as http_status_code, 
            'SBB_TYPE, VK: VALIDATION FAILED, NOT EXIST IN UI_COSTFLAG' error_message, 
            '' detail from dummy;        
        RETURN;
 	end if;
END;
