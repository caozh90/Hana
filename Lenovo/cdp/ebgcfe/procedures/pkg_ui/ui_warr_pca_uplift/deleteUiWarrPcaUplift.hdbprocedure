PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::deleteUiWarrPcaUplift" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_WARR_PCA_UPLIFT_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name> 
	AS
/************************************************************************
*name      :                     deleteUiWarrPcaUplift
*function    :               
*input     ï¼š                                                                         newInfo
*output     :                    errorInfo          
*author     :                     Justin
*CreateDate    :                  2015.08.10
*UpdateDate  :        
*************************************************************************/		
		v_RATIO_CODE NVARCHAR(100);
		v_SUBGEO NVARCHAR(20);
		v_COUNTRY NVARCHAR(20);
		v_TBA_TYPE NVARCHAR(40);
		
		
		alogide INTEGER :=0;
		aI_DETAIL NVARCHAR(300) :='';
		privilegeExists  NVARCHAR(300)  ;
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::deleteUiWarrPcaUplift error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::deleteUiWarrPcaUplift'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_warr_pca_uplift::deleteable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
  
 --START
	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_warr_pca_uplift::deleteUiWarrPcaUplift'
       ,I_MODULE=>'EBGCFE'
   	);
   	
 select    	
    RATIO_CODE,
    SUBGEO,
    COUNTRY,
    TBA_TYPE
  into  
 	v_RATIO_CODE,
	v_SUBGEO,
	v_COUNTRY,
	v_TBA_TYPE
  from :newInfo;
  
  
  delete from "EBGCFE"."UI_WARR_PCA_UPLIFT"
  	where RATIO_CODE = :v_RATIO_CODE
  		and SUBGEO = :v_SUBGEO
  	      and COUNTRY = :v_COUNTRY
  	      and TBA_TYPE = :v_TBA_TYPE;

/*put operation to log table*/
   INSERT into  "EBGCFE"."UI_WARR_PCA_UPLIFT_LOG"
	(
	"PRODUCT_GROUP",
	"RATIO_CODE",
	"SUBGEO",
	"COUNTRY",
	"TBA_TYPE",
	SYS_LAST_MODIFIED_DATE,
    AT_ACTION,
    SYS_LAST_MODIFIED_BY,
    AT_MODIFIED_ON,
    AT_MILLIS    	
	)
	
 VALUES(	
	'EBG',
	:v_RATIO_CODE,
	:v_SUBGEO,
	:v_COUNTRY,
	:v_TBA_TYPE,
	CURRENT_TIMESTAMP,
    'delete',
    session_user,
    CURRENT_TIMESTAMP,
    TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3')));
              
 /*END*/
 	    aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_uiui_warr_pca_uplift::deleteUiWarrPcaUplift successfully deleted . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_uiui_warr_pca_uplift::deleteUiWarrPcaUplift'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);	  
END;