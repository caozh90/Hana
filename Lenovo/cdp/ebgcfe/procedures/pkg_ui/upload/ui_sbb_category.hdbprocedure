PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_sbb_category" (
IN  SBB NVARCHAR(18),
IN PRODUCT_GROUP NVARCHAR(10),
--IN   SBB_DESC NVARCHAR(200),
IN   CHARACTER_V NVARCHAR(100),
IN   Cost_Category NVARCHAR(40),
IN	 	table_name varchar(200),
IN	 	business_name varchar(200),
IN		business_code	INTEGER,
IN 	 	position INTEGER,
IN   CYCLE NVARCHAR(20)
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	default schema EBGCFE
	AS
/************************************************************************
*name      : ui_sbb_category              --函数名
*function  : upload数据至表ui_sbb_category并记录信息              --函数功能
*input     ：    			--输入参数
*output    :                --输出参数
*author     : Eric Zhou               --作者
*CreateDate    : 2015-01-19       --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/
		path varchar(100):='cdp.ebgcfe.procedures.pkg_ui.upload';
		proc_name varchar(100) :='ui_sbb_category';
		logid0 INTEGER :=0;
		currentUser varchar(100);
		create_time TIMESTAMP;
		validate1 int;
		privilegeExists  NVARCHAR(300)  ;
BEGIN
	--exception        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN  
     	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_sbb_category_err"(
			:SBB,:PRODUCT_GROUP,:CHARACTER_V,:Cost_Category,
			:table_name,:business_name,:business_code,:position,::SQL_ERROR_MESSAGE,:CYCLE);
     	
    END; 
    --exception 
	

	--procedure begin
	
	
	select session_user into currentUser from dummy;
	select CURRENT_TIMESTAMP into create_time from dummy;
     	
	select  count(1) into validate1 from ebgcfe.ui_item where item=:SBB and item_type='SBB'; 
	
	if validate1 = 0  then
		call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_sbb_category_err"(
			:SBB,PRODUCT_GROUP,:CHARACTER_V,:Cost_Category,
			:table_name,:business_name,:business_code,:position,'"SBB"::'||:SBB||' is illegal',:CYCLE);
		
		return;
	end if;
			
	update "EBGCFE"."UI_SBBCATEGORY" 
		set "COST_CATEGORY" = :Cost_Category,SYS_LAST_MODIFIED_BY = :currentuser,SYS_LAST_MODIFIED_DATE = :create_time
		WHERE BBID = :SBB and CHARACTER_V = :CHARACTER_V;
	--update操作需要写入日志
	insert into "EBGCFE"."UI_SBBCATEGORY_LOG"(AT_MODIFIED_BY,AT_ACTION,AT_MODIFIED_ON,AT_MILLIS,
				BBID,PRODUCT_GROUP,CHARACTER_V,"COST_CATEGORY",
		 	SYS_LAST_MODIFIED_BY,
		 	SYS_LAST_MODIFIED_DATE
			)
			VALUES
				(:currentUser,
				'update',
				:create_time,
				TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3')),
				:SBB,:PRODUCT_GROUP,:CHARACTER_V,:Cost_Category,
				:currentUser,
				:create_time);
	
	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::business_info"(
			:table_name || TO_VARCHAR(:business_code),:business_name,1,0,:table_name);
	

END;
