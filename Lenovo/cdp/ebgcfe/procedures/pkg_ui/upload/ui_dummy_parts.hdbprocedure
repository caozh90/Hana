PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_dummy_parts" (
IN  DUMMY_PART varchar(18),
IN	PART_DESC varchar(100),
IN	 	table_name varchar(200),
IN	 	business_name varchar(200),
IN		business_code	INTEGER,
IN 	 	position INTEGER,
IN PRODUCT_GROUP VARCHAR(20),
IN CYCLE VARCHAR(20)
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER
	default schema EBGCFE
	AS
/************************************************************************
*name      : ui_dummy_parts              --函数名
*function  : upload数据至表ui_dummyparts并记录信息              --函数功能
*input     ：    			--输入参数
*output    :                --输出参数
*author     : Eric               --作者
*CreateDate    : 2015-01-19       --创建时间
*UpdateDate  :        --函数更改信息（包括作者、时间、更改内容等）
*************************************************************************/
		path varchar(100):='cdp.ebgcfe.procedures.pkg_ui.upload';
		proc_name varchar(100) :='ui_dummy_parts';
		logid0 INTEGER :=0;
		currentUser varchar(100);
		create_time TIMESTAMP;
		validate int;
		var_oper VARCHAR(10);
		privilegeExists  NVARCHAR(300)  ;
BEGIN
	--exception        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN  
     	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::ui_dummy_parts_err"(
			:DUMMY_PART,:PART_DESC,:table_name,:business_name,:business_code,:position,::SQL_ERROR_MESSAGE,:PRODUCT_GROUP,:CYCLE);
     	
    END; 
    --exception 
	

	--procedure begin
	
	
	
	select session_user into currentUser from dummy;
	select CURRENT_TIMESTAMP into create_time from dummy;
     	
	
	SELECT top 1 count(1) into validate FROM "EBGCFE"."UI_DUMMYPART" A    
     WHERE A.DUMMY_PART = :DUMMY_PART;
				
	if validate = 0
	then
		    insert into "EBGCFE"."UI_DUMMYPART"
  	(PRODUCT_GROUP,DUMMY_PART,PART_DESC, CYCLE, 
					SYS_CREATED_BY,
		 		SYS_CREATED_DATE,
		 		SYS_LAST_MODIFIED_BY,
				SYS_LAST_MODIFIED_DATE)
  	values(:PRODUCT_GROUP,:DUMMY_PART,:PART_DESC, 'CURRENT', 
				 :currentUser,
			 	 :create_time,
			 	 :currentUser,
			 	 :create_time);
			insert into "EBGCFE"."UI_ITEM"(PRODUCT_GROUP,ITEM,ITEM_DESC, CYCLE, 
			        ITEM_TYPE,
					SYS_CREATED_BY,
		 		SYS_CREATED_DATE,
		 		SYS_LAST_MODIFIED_BY,
				SYS_LAST_MODIFIED_DATE)
			values(:PRODUCT_GROUP,:DUMMY_PART,:PART_DESC, 'CURRENT', 
			     'DUMMY',
				 :currentUser,
			 	 :create_time,
			 	 :currentUser,
			 	 :create_time);
  		var_oper := 'create';
  	else
  		update "EBGCFE"."UI_DUMMYPART" set
    	PART_DESC = :PART_DESC
    	where
    	DUMMY_PART = :DUMMY_PART; 
    	update "EBGCFE"."UI_ITEM" set
    	ITEM_DESC = :PART_DESC
    	where
    	ITEM = :DUMMY_PART;
        var_oper := 'update';
  	end if;

insert into "EBGCFE"."UI_DUMMYPART_LOG"
    (
    	PRODUCT_GROUP,
	    DUMMY_PART,
    	PART_DESC,	    
    	SYS_LAST_MODIFIED_DATE,   	
    	ACTION,
    	SYS_LAST_MODIFIED_BY,
    	AT_MODIFIED_ON,
    	AT_MILLIS    	
    )
    values
    (
    :PRODUCT_GROUP,
	 	:DUMMY_PART,	
	 	:PART_DESC,	
    	CURRENT_TIMESTAMP,    	
    	'create',
    	session_user,
    	CURRENT_TIMESTAMP,
    	TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))
    );
	
			
	
	call "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.upload::business_info"(
			:table_name || TO_VARCHAR(:business_code),:business_name,1,0,:table_name);
	
	
	
END;
