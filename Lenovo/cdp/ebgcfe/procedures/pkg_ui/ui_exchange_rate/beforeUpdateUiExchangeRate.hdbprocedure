PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_exchange_rate::beforeUpdateUiExchangeRate" ( 
		IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_EXCHANGE_RATE_T"
		,IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_EXCHANGE_RATE_T"
		,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA EBGCFE
	AS 
		aCurrency_name NVARCHAR(20);
		aProduct_group NVARCHAR(10);
		--aCountry NVARCHAR(20); 
       
        validate integer;
BEGIN	

   	
 select
    CURRENCY_NAME,
    PRODUCT_GROUP
  into      
    aCurrency_name,
    aProduct_group
  from :newInfo;

    --COUNTRY
   -- SELECT top 1 count(1) into validate from ui_region where COUNTRY = :aCountry;
   -- if validate = 0 then
   --     errorinfo = select 400 as http_status_code, 
    --        'COUNTRY: VALIDATION FAILED, NOT EXIST IN UI_REGION' error_message, 
     --       '' detail from dummy;
    --    return;
  --  end if;
 
    --CURRENCY NAME
    select  count(1) into validate from conf_parameters 
        where pdomain='UI_EXCHANGE_RATE' and pname='CURRENCY_NAME' and Ptype='UI' and pvalue = :aCurrency_name;
    if validate = 0  then
        errorinfo = select 400 as http_status_code, 
            'CURRENCY_NAME: VALIDATION FAILED, NOT EXIST IN CONF_PARAMETERS' error_message, 
            '' detail from dummy;
        return;
    end if;
    

END;