PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_cto_cv_vk_cost::updateUiCtoCvVkCost" ( 
         IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_CTO_CV_VK_COST",
		 IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_CTO_CV_VK_COST",
		 OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
/************************************************************************
*name        :      updateUiCtoCvVkCost
*function    :               
*input       ï¼š              newInfo&oldInfo
*output      :      errorInfo            
*author      :      leon Bian
*CreateDate  :      2015.8.31
*UpdateDate  :        
*************************************************************************/ 	
	AS
	aI_DETAIL NVARCHAR(300) :='';
	alogide INTEGER :=0;
	resourceExists BIGINT;
	privilegeExists  NVARCHAR(300)  ; 
BEGIN
DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;

DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_cto_cv_vk_cost::updateUiCtoCvVkCost error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_cto_cv_vk_cost::updateUiCtoCvVkCost'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_cto_cv_vk_cost::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
      
CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_cto_cv_vk_cost::updateUiCtoCvVkCost'
       ,I_MODULE=>'EBGCFE'
   	); 
   	
SELECT COUNT(*) into resourceExists 
FROM :oldInfo a,:newInfo b 
where a.M1 = b.M1;
if resourceExists > 0
then
	/*errorInfo = select 400 as http_status_code, 
	     		'the record is same as before' error_message, 
	     		'the record is same as before' DETAIL from dummy;	     		
	     	return;*/
	 --SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record do not exists'; 
	 return;
end if;		
 	
--update into UI_CTO_CV_VK_COST table
update "EBGCFE"."UI_CTO_CV_VK_COST" a set (a.M1,a.M2,a.M3,a.M4,a.M5,a.M6,a.M7,a.M8,a.M9,a.M10,a.M11,a.M12,a.M13,a.M14,
										   a.M15,a.M16,a.M17,a.M18,a.SYS_LAST_MODIFIED_DATE,a.SYS_LAST_MODIFIED_BY,a.ACTION) = 
				(b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,b.M1,CURRENT_TIMESTAMP,SESSION_USER,'update')
		FROM :newInfo b 
		where a.CYCLE = b.CYCLE
		  and a.PRODUCT_GROUP = b.PRODUCT_GROUP
		  AND a.CHARACTERISTIC = b.CHARACTERISTIC 
		  AND a.VARIANT = b.VARIANT
		  and a.SALES_ORG = b.SALES_ORG
		  and a.PH_1 = b.PH_1
		  and a.PH_2 = b.PH_2
		  and a.PH_3 = b.PH_3
		  and a.PH_4 = b.PH_4; 

--insert log table
--INSERT INTO UI_CTO_CV_VK_COST_LOG TABLE
insert into "EBGCFE"."UI_CTO_CV_VK_COST_LOG"(
	CYCLE,
	PRODUCT_GROUP,
	CTO_NUMBER,
	CHARACTERISTIC,
	VARIANT,
	SALES_ORG,
	PH_1,
	PH_2,
	PH_3,
	PH_4,
	M1,
	M2,
	M3,
	M4,
	M5,
	M6,
	M7,
	M8,
	M9,
	M10,
	M11,
	M12,
	M13,
	M14,
	M15,
	M16,
	M17,
	M18,
	STATUS,
	CHANGE_ID,
	CHANGE_ACTION,
	SYS_CREATED_DATE,
	SYS_CREATED_BY,
	SYS_LAST_MODIFIED_DATE,
	SYS_LAST_MODIFIED_BY,
	AT_MODIFIED_BY,
	AT_ACTION,
	AT_MODIFIED_ON,
	AT_MILLIS
	 )SELECT 
	        'CURRENT',
		    'EBG',
		    '',
		    a.CHARACTERISTIC,
		    a.VARIANT,
		    a.SALES_ORG,
		    a.PH_1,
		    a.PH_2,
		    a.PH_3,
		    a.PH_4,
		    a.M1,--M1
		    a.M1,--M2
		    a.M1,--M3
		    a.M1,--M4
		    a.M1,--M5
		    a.M1,--M6
		    a.M1,--M7
		    a.M1,--M8
		    a.M1,--M9
		    a.M1,--M10
		    a.M1,--M11
		    a.M1,--M12
		    a.M1,--M13
		    a.M1,--M14
		    a.M1,--M15
		    a.M1,--M16
		    a.M1,--M17
		    a.M1,--M18
		    '',--STATUS
		    '',--CHANGE_ID
		    '',--CHANGE_ACTION
		    CURRENT_TIMESTAMP,
		    SESSION_USER,
		    CURRENT_TIMESTAMP,
		    SESSION_USER,
	 		SESSION_USER,
	 		'update',
	 		CURRENT_TIMESTAMP,
	 		TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3')) FROM :oldInfo a; 	

   	
aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_cto_cv_vk_cost::updateUiCtoCvVkCost successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_cto_cv_vk_cost::updateUiCtoCvVkCost'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);
END;
