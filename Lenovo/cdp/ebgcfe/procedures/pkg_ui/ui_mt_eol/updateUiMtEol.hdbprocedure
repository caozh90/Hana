PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol"  ( 
         IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_MT_EOL",
		 IN oldInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_MT_EOL",
		 OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	DEFAULT SCHEMA "EBGCFE"
	--READS SQL DATA 
/************************************************************************
*name        :      updateUiMtEol
*function    :               
*input       ï¼š              newInfo&oldInfo
*output      :      errorInfo            
*author      :      zhaodan
*CreateDate  :      2016.1.15
*UpdateDate  :              
*************************************************************************/ 	
	AS
	aI_DETAIL NVARCHAR(300) :='';
	alogide INTEGER :=0;
	resourceExists BIGINT;
	privilegeExists  NVARCHAR(300)  ; 
	
	V_CYCLE NVARCHAR(40);
	V_PRODUCT_GROUP NVARCHAR(10);
	V_MT NVARCHAR(10);
	
	v_event_name  VARCHAR(200) := 'cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol';
    v_exitcode    DECIMAL;
BEGIN
DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;

DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
    	aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
    	
    	CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    	 I_TYPE=>'PROC_ERROR'
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol'
	     	,I_MODULE=>'EBGCFE'
	     	,I_MESSAGE=>'E'||::SQL_ERROR_CODE
	     	,I_DETAIL=>:aI_DETAIL
     	);	
 
 		errorInfo = select 400 as http_status_code, 
     		'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
     		aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_mt_eol::editable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
      
CALL "EX_LOG"."cdp.log.procedures::logProc"(
	    I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol'
       ,I_MODULE=>'EBGCFE'
   	); 
   	
select CYCLE,
	   PRODUCT_GROUP,
	   MT
into   V_CYCLE,
	   V_PRODUCT_GROUP,
	   V_MT 
 from :newInfo; 
	
--update into UI_MT_EOL table
update "EBGCFE"."UI_MT_EOL" a 
   set (  a.EOL_STATUS,
          a.SYS_LAST_MODIFIED_DATE,a.SYS_LAST_MODIFIED_BY,a.ACTION) = 
		( b.EOL_STATUS,
		  CURRENT_TIMESTAMP,SESSION_USER,'update')
		FROM :newInfo b 
		where a.CYCLE = b.CYCLE
		  and a.PRODUCT_GROUP = b.PRODUCT_GROUP
		  AND a.MT = b.MT ; 

--insert log table
--INSERT INTO UI_MT_EOL_LOG TABLE
insert into "EBGCFE"."UI_MT_EOL_LOG"(
	 CYCLE,
		 PRODUCT_GROUP,
		 MT,
	     EOL_STATUS,
		 ACTION,
		 STATUS,
		 CHANGE_ID,
		 CHANGE_ACTION,
		 SYS_CREATED_DATE,
		 SYS_CREATED_BY,
		 SYS_LAST_MODIFIED_DATE,
		 SYS_LAST_MODIFIED_BY,
		 AT_MODIFIED_BY,
		 AT_ACTION,
		 AT_MODIFIED_ON,
		 AT_MILLIS
	 )SELECT 
	        'CURRENT',
		    'EBG',
		    a.MT,
		    a.EOL_STATUS,
		    'insert',
		    '',--STATUS
		    '',--CHANGE_ID
		    '',--CHANGE_ACTION
		    CURRENT_TIMESTAMP,
		    SESSION_USER,
		    CURRENT_TIMESTAMP,
		    SESSION_USER,
	 		SESSION_USER,
	 		'update',
	 		CURRENT_TIMESTAMP,
	 		TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))  FROM :oldInfo a; 	

/*-- added by zhangxj 20160311 start
 --use mt_eol_status to set eol_status	
	UPDATE "EBGCFE".UI_ITEM T1
       SET --Modified by Zhoubinbin 20161115, set eol status by priority.
           --T1.EOL_STATUS = T2.EOL_STATUS,
           T1.MT_EOL     = T2.EOL_STATUS,
           T1.EOL_STATUS = IFNULL(MAP(LENGTH(t1.user_eol_status), 0, NULL, t1.user_eol_status), 
                           IFNULL(MAP(LENGTH(t1.mmr_eol), 0, NULL, t1.mmr_eol), 
                           IFNULL(MAP(LENGTH(t2.eol_status), 0, NULL, t2.eol_status), 
                           IFNULL(MAP(LENGTH(t1.family_eol), 0, NULL, t1.family_eol), t1.eol_status))))
      FROM :newInfo  T2
     WHERE T1.MACHINE_TYPE               = T2.MT;   	
-- added by zhangxj 20160311 end  	 */

    --Added by Zhoubinbin 20161127, Set eol status logic
    CALL "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.base_funcs::updateEolStatus"('MT', :V_MT, :v_event_name, :v_exitcode);
   	
aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol successfully updated . ';
 		CALL "EX_LOG"."cdp.log.procedures::logProc"(
	 		I_TYPE=>'PROC_END'	
	     	,I_LOGSID=>:alogide
	     	,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_mt_eol::updateUiMtEol'
	     	,I_MODULE=>'EBGCFE'
	     	,I_DETAIL=>:aI_DETAIL
     	);
END;
