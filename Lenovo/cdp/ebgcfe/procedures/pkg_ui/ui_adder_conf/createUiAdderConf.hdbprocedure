PROCEDURE "EBGCFE"."cdp.ebgcfe.procedures.pkg_ui.ui_adder_conf::createUiAdderConf" ( 
        IN newInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.UI_ADDER_CONF_T"
        ,OUT errorInfo "EBGCFE"."cdp.ebgcfe.data::EBGCFE_T.HttpError"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER  
    DEFAULT SCHEMA "EBGCFE"
	--READS SQL DATA 
	AS
    /************************************************************************
    *name      :                     createUiAdderConf
    *function    :               
    *input     ï¼š               
    *output     :                
    *author     :                     Fangyuan
    *CreateDate    :                  2014.12.22
    *UpdateDate  :        
    *************************************************************************/  

        aI_DETAIL NVARCHAR(1000) :='';   
        alogide INTEGER :=0;  
        v_adder_name NVARCHAR(40);
        v_resourceExists BIGINT;	
        
        privilegeExists  NVARCHAR(300)  ;         	
BEGIN
DECLARE DATA_CONFLICT CONDITION FOR SQL_ERROR_CODE 11000;
 DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN              
        aI_DETAIL :='cdp.ebgcfe.procedures.pkg_ui.ui_adder_conf::createUiAdderConf error : '||::SQL_ERROR_CODE||::SQL_ERROR_MESSAGE;
        
        CALL "EX_LOG"."cdp.log.procedures::logProc"(
             I_TYPE=>'PROC_ERROR'   
            ,I_LOGSID=>:alogide
            ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_adder_conf::createUiAdderConf'
            ,I_MODULE=>'EBGCFE'
            ,I_MESSAGE=>'E'||::SQL_ERROR_CODE
            ,I_DETAIL=>:aI_DETAIL
        );  
 
        errorInfo = select 400 as http_status_code, 
            'SQL ERROR CODE : '||::SQL_ERROR_CODE error_message, 
            aI_DETAIL detail from dummy;
    END;  

    call "SECURITY"."cdp.security.procedures::checkPrivilege" (         
    'ui_adder_conf::createable',privilegeExists);
    IF  privilegeExists != 'OK' THEN
    errorInfo = select 400 as http_status_code, 
              'SQL ERROR CODE : 0' error_message, 
              privilegeExists detail from dummy;
       RETURN ;
    END IF;
  
 --START
    CALL "EX_LOG"."cdp.log.procedures::logProc"(
        I_TYPE=>'PROC_START'
       ,I_LOGSID=>:alogide
       ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.pkg_ui.ui_adder_conf::createUiAdderConf'
       ,I_MODULE=>'EBGCFE'
    ); 

select ADDER_NAME into v_adder_name from :newInfo;

select count(1) into v_resourceExists from "EBGCFE"."UI_ADDER_CONF" where ADDER_NAME = :v_adder_name;

--if item exits in database
if  :v_resourceExists > 0 
    then
	 /*   errorInfo = select 400 as http_status_code, 
	     		'the record exists' error_message, 
	     		'the record exists' DETAIL from dummy;
	     		
	     	return;*/
	       SIGNAL DATA_CONFLICT SET MESSAGE_TEXT = 'the record exists';
	  
end if;	

    INSERT INTO UI_ADDER_CONF
    (
	"CYCLE",
	"PRODUCT_GROUP",
	"ADDER_NAME",
	"TBA_TYPE",
	"ADDER_DESC",
	"ASP_PROD_FAMILY",
	"FLEXIBLE",    
    "SYS_CREATED_DATE",
    "SYS_CREATED_BY",
    "SYS_LAST_MODIFIED_DATE",
    "SYS_LAST_MODIFIED_BY"
    )
    SELECT
    'CURRENT',
    'EBG',
    a."ADDER_NAME",
    b.PVALUE,
    a."ADDER_DESC",
    a."ASP_PROD_FAMILY",
    'Y',
    CURRENT_TIMESTAMP,
    SESSION_USER,
    CURRENT_TIMESTAMP,
    SESSION_USER
    FROM  :newInfo a, conf_parameters b
    where right(a.ADDER_NAME,1)=b.Z_WFNAME
    and b.PDOMAIN='UI_ADDER_CONF' AND b.PNAME = 'TBA_TYPE'
    ;
    
    INSERT INTO UI_ADDER_CONF_LOG
    (
	"PRODUCT_GROUP",
	"ADDER_NAME",
	"TBA_TYPE",
	"ADDER_DESC",
	"ASP_PROD_FAMILY",
	"FLEXIBLE",
	"SYS_CREATED_DATE",
	"SYS_CREATED_BY",
	"SYS_LAST_MODIFIED_DATE",
	"SYS_LAST_MODIFIED_BY",
	"ACTION",
	"STATUS",
	"CHANGE_ID",
	"CHANGE_ACTION",
	"AT_MODIFIED_BY",
	"AT_ACTION",
	"AT_MODIFIED_ON",
	"AT_MILLIS"
    )
    SELECT
    "PRODUCT_GROUP",
    "ADDER_NAME",
    "TBA_TYPE",
    "ADDER_DESC",
    "ASP_PROD_FAMILY",
    "FLEXIBLE",
    "SYS_CREATED_DATE",
    "SYS_CREATED_BY",
    "SYS_LAST_MODIFIED_DATE",
    "SYS_LAST_MODIFIED_BY",
    "ACTION",
    "STATUS",
    "CHANGE_ID",
    "CHANGE_ACTION",
     SESSION_USER,
     'CREATE',
     CURRENT_DATE,
     TO_DECIMAL(TO_VARCHAR(CURRENT_TIMESTAMP,'HH24MISSFF3'))    
    FROM  UI_ADDER_CONF a
    WHERE EXISTS
    (SELECT 1 FROM :newInfo b
    where A.ADDER_NAME=B.ADDER_NAME
    );  
    
        /*END*/
        aI_DETAIL := 'cdp.ebgcfe.procedures.pkg_ui.ui_adder_conf::createUiAdderConf successfully created . ';
        CALL "EX_LOG"."cdp.log.procedures::logProc"(
            I_TYPE=>'PROC_END'  
            ,I_LOGSID=>:alogide
            ,I_EVENT_NAME=>'cdp.ebgcfe.procedures.ui_adder_conf.ui_xoutfr::createUiAdderConf'
            ,I_MODULE=>'EBGCFE'
            ,I_DETAIL=>:aI_DETAIL
        );  
END;
