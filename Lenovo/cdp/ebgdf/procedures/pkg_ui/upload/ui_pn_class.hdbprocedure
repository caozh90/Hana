PROCEDURE "EBGDF"."cdp.ebgdf.procedures.pkg_ui.upload::ui_pn_class" 
(
	IN newInfo "EBGDF"."cdp.ebgdf.data::EBGDF_T.UI_PNCLASS_S"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY DEFINER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
/***************************** 
*name        :    ui_pn_class
*function    :               
*input       :    
*output      :              
*author      :    bianzh1
*UpdateDate  :             
*DeleteDate  : 
*CreateDate:      2015.08.19
 *****************************/
	AS
	path varchar(100):='cdp.egbdf.procedures.pkg_ui.upload';
	proc_name varchar(100) :='ui_pn_class';
 	sys_last_modified_date TIMESTAMP;
	log_detail NVARCHAR(300) :='';
	n int;
	ns int;
	currentUser varchar(100);
	create_time TIMESTAMP;
	business_code nvarchar(20);
	business_name nvarchar(100);
	table_name varchar(1000) := 'RPT_PN_CLASS';
	validate int;
BEGIN
	--exception     
    DECLARE no_data_found CONDITION FOR SQL_ERROR_CODE 1299; 
    DECLARE EXIT HANDLER FOR no_data_found   
     BEGIN      
     	--call "EBGDF"."cdp.ebgdf.procedures.pkg_ui.upload::ui_pn_class_err"(::SQL_ERROR_MESSAGE,:business_name,:SEQ,:position,
		--	:CYCLE_ID,:MFI_FFI_FC_IND,:MFI_FFI_FC,:PPN, :ABCD_T,:LOD,:ABCD,:ABCD_1,:ABCD_2,:ABCD_3,:ABCD_4,:ABCD_5);
     END;     

    DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    BEGIN  
     	--call "EBGDF"."cdp.ebgdf.procedures.pkg_ui.upload::ui_pn_class_err"(::SQL_ERROR_MESSAGE,:business_name,:SEQ,:position,
		--	:CYCLE_ID,:MFI_FFI_FC_IND,:MFI_FFI_FC,:PPN, :ABCD_T,:LOD,:ABCD,:ABCD_1,:ABCD_2,:ABCD_3,:ABCD_4,:ABCD_5);
    END; 
       
	--procedure begin

	select top 1 SEQ,BUSINESS_NAME into business_code,business_name  from :newInfo;
	
	--赋值时间戳和用户名
	SELECT SESSION_USER INTO currentUser FROM DUMMY;
	SELECT CURRENT_UTCTIMESTAMP INTO create_time FROM DUMMY;
	
	update_info = SELECT *
				 	FROM :newInfo as a
				 	WHERE EXISTS ( select 1 from "EBGDF"."RPT_PN_CLASS" 
									where MFI_FFI_FC_IND = a.MFI_FFI_FC_IND
									  and MFI_FFI_FC = a.MFI_FFI_FC
									  AND PPN = a.PPN);
										
	--validate key
	SELECT count(1) into n
	 	FROM :update_info;

	if n>0 then
		update "EBGDF"."RPT_PN_CLASS" a
		set	(a.CYCLE_ID,a.ABCD,a.ABCD_1,a.ABCD_2,a.ABCD_3,a.ABCD_4,a.ABCD_5,a.LAST_UPDATE_TS,a.LAST_UPDATE_USERID)=
			(b.CYCLE_ID,b.ABCD,b.ABCD_1,b.ABCD_2,b.ABCD_3,b.ABCD_4,b.ABCD_5,:create_time,:currentUser)
		FROM "EBGDF"."RPT_PN_CLASS" a,:update_info b
		where a.MFI_FFI_FC_IND = b.MFI_FFI_FC_IND 
		AND a.MFI_FFI_FC = b.MFI_FFI_FC 
		AND a.PPN = b.PPN  ;

	
		--update操作需要写入日志
		insert into "EBGDF"."RPT_PN_CLASS_LOG"(
									CYCLE_ID,
								    MFI_FFI_FC_IND,
								    MFI_FFI_FC,
								    PPN,
								    ABCD_T,
								    LOD,
								    ABCD,
								    ABCD_1,
								    ABCD_2,
								    ABCD_3,
								    ABCD_4,
								    ABCD_5,
								    CREATE_TS,
								    CREATE_USERID,
								    LAST_UPDATE_TS,
								    LAST_UPDATE_USERID,
									AT_MODIFIED_BY,
									AT_ACTION,
									AT_MODIFIED_ON,
									AT_MILLIS
	 ) select CYCLE_ID,
		    MFI_FFI_FC_IND,
		    MFI_FFI_FC,
		    PPN,
		    ABCD_T,
		    LOD,
		    ABCD,
		    ABCD_1,
		    ABCD_2,
		    ABCD_3,
		    ABCD_4,
		    ABCD_5,
		    :create_time,
		    :currentUser,
		    :create_time,
		    :currentUser,
	 		:create_time,
	 		'update',
	 		:create_time,
	 		TO_DECIMAL(TO_VARCHAR(CURRENT_UTCTIMESTAMP,'HH24MISSFF3'))
		from :update_info;
			
	END IF; 
	
	INSERT_INFO = SELECT *
				 	FROM :newInfo as a
				 	WHERE NOT EXISTS ( select 1 from "EBGDF"."RPT_PN_CLASS" 
										where MFI_FFI_FC_IND = a.MFI_FFI_FC_IND
										  and MFI_FFI_FC = a.MFI_FFI_FC
										  AND PPN = a.PPN);
	SELECT count(1) into ns
	 	FROM :INSERT_INFO;
	if ns>0 then
		INSERT INTO "EBGDF"."RPT_PN_CLASS"( CYCLE_ID,
										    MFI_FFI_FC_IND,
										    MFI_FFI_FC,
										    PPN,
										    ABCD_T,
										    LOD,
										    ABCD,
										    ABCD_1,
										    ABCD_2,
										    ABCD_3,
										    ABCD_4,
										    ABCD_5,
										    CREATE_TS,
										    CREATE_USERID,
										    LAST_UPDATE_TS,
										    LAST_UPDATE_USERID )
	 	select  CYCLE_ID,
			    MFI_FFI_FC_IND,
			    MFI_FFI_FC,
			    PPN,
			    ABCD_T,
			    LOD,
			    ABCD,
			    ABCD_1,
			    ABCD_2,
			    ABCD_3,
			    ABCD_4,
			    ABCD_5,
			    :create_time,
			    :currentUser,
			    :create_time,
			    :currentUser
		from :INSERT_INFO;
	 	
	 	--insert操作需要写入日志
		insert into "EBGDF"."RPT_PN_CLASS_LOG"(
									CYCLE_ID,
								    MFI_FFI_FC_IND,
								    MFI_FFI_FC,
								    PPN,
								    ABCD_T,
								    LOD,
								    ABCD,
								    ABCD_1,
								    ABCD_2,
								    ABCD_3,
								    ABCD_4,
								    ABCD_5,
								    CREATE_TS,
								    CREATE_USERID,
								    LAST_UPDATE_TS,
								    LAST_UPDATE_USERID,
									AT_MODIFIED_BY,
									AT_ACTION,
									AT_MODIFIED_ON,
									AT_MILLIS
	 ) select CYCLE_ID,
		    MFI_FFI_FC_IND,
		    MFI_FFI_FC,
		    PPN,
		    ABCD_T,
		    LOD,
		    ABCD,
		    ABCD_1,
		    ABCD_2,
		    ABCD_3,
		    ABCD_4,
		    ABCD_5,
		    :create_time,
		    :currentUser,
		    :create_time,
		    :currentUser,
	 		:create_time,
	 		'update',
	 		:create_time,
	 		TO_DECIMAL(TO_VARCHAR(CURRENT_UTCTIMESTAMP,'HH24MISSFF3'))
		from :INSERT_INFO; 	 		 	
	END IF;
		
		call "EBGDF"."cdp.ebgdf.procedures.pkg_ui.upload::business_info"(
			:table_name || :business_code,:business_name,:ns,0,:table_name);
END;
